
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftELSEleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BINARY_FNC BOOL CASE COLON COMMA COMMENT_MULTI COMMENT_SINGLE DEFAULT DIVIDE DO ELSE EQUAL EQUALITY EXITWITH FOR FOREACH FROM GETVARIABLE GLOBAL_ID GT GTE IF INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NAMESPACE NEWLINE NOT NULAR_FNC NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PARAM PARAMS PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SEMI_COLON SETVARIABLE STEP STRING_DOUBLE STRING_SINGLE SWITCH THEN TIMES TO UNARY_FNC WHILE WITH\n    code    : empty\n            | statement\n            | statement terminator code\n    \n    statement   : controlstructure\n                | assignment\n                | binaryexp\n                | nularexp\n                | unaryexp\n                | primaryexp\n    \n    terminator  : SEMI_COLON\n                | COMMA\n    \n    controlstructure    : ifstatement\n                        | whileloop\n                        | forloop\n                        | withstatement\n                        | foreachloop\n                        | switchstatement\n    \n    helpertype  : iftype\n                | whiletype\n                | fortype\n                | withtype\n    \n    case    : CASE primaryexp COLON bracedexp\n            | CASE primaryexp\n            | DEFAULT bracedexp\n    \n    switchstatement : SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE\n    \n    switchbody  : empty\n                | case\n                | case terminator switchbody\n    \n    iftype  : IF bracedexp_condition\n            | IF LPAREN primaryexp RPAREN\n    \n    ifstatement : iftype THEN bracedexp ELSE bracedexp\n                | iftype THEN bracedexp\n                | iftype EXITWITH bracedexp\n    \n    withtype : WITH NAMESPACE\n    \n    withstatementinit : withtype DO\n    \n    withstatement : withstatementinit bracedexp\n    \n    whiletype   : WHILE bracedexp_condition\n    \n    whileloop : whiletype DO bracedexp\n    \n    foreachloop : bracedexp FOREACH array\n                | bracedexp FOREACH primaryexp\n                | bracedexp FOREACH LPAREN primaryexp RPAREN\n    \n    fortype : FOR new_scope string FROM primaryexp TO primaryexp\n            | FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp\n            | FOR new_scope LSPAREN bracedexp_noscope COMMA bracedexp_condition COMMA bracedexp_noscope RSPAREN\n    \n    forloop : fortype DO bracedexp_noscope\n    \n    bracedexp_condition   : LBRACE booleanexp RBRACE\n                        | identifier\n    \n     bracedexp_noscope : LBRACE code RBRACE\n    \n    getvariable_ns  : NAMESPACE GETVARIABLE string\n                    | NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    getvariable_any : primaryexp GETVARIABLE string\n                    | primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    setvariable_ns  : NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                    | NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    setvariable_any     : primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                        | primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    param_unary     : PARAM LSPAREN number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    param_binary    : primaryexp PARAM LSPAREN number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    params_unary : PARAMS params_array\n    \n    params_binary : primaryexp PARAMS params_array\n    \n    params_array    : LSPAREN RSPAREN\n                    | LSPAREN params_element RSPAREN\n    \n    params_element  : params_array_entry\n                    | params_array_entry COMMA params_element\n    \n    params_array_entry  : string\n                        | LSPAREN string COMMA primaryexp RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array COMMA number RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    vardefinition   : definition\n                    | arraydefinition\n    \n    assignment  : assignment_code code RBRACE\n                | definition EQUAL primaryexp\n                | identifier EQUAL primaryexp\n                | variable EQUAL primaryexp\n    \n    assignment_code : definition EQUAL LBRACE\n                    | identifier EQUAL LBRACE\n                    | variable EQUAL LBRACE\n    \n    arraydefinition : PRIVATE stringarray\n    \n    definition  : PRIVATE PRIVATE_ID\n                | PRIVATE string\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    variable    : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID %prec VARIABLE\n    \n    binaryexp   : primaryexp BINARY_FNC primaryexp          %prec BINARY_OP\n                | primaryexp comparisonoperator primaryexp  %prec BINARY_OP\n                | primaryexp mathoperator primaryexp        %prec BINARY_OP\n                | getvariable_ns                            %prec BINARY_OP\n                | getvariable_any                           %prec BINARY_OP\n                | setvariable_ns                            %prec BINARY_OP\n                | setvariable_any                           %prec BINARY_OP\n                | param_binary                              %prec BINARY_OP\n                | params_binary                             %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | identifier                %prec VALUE\n                | controlstructure\n                | helpertype\n                | array                     %prec VALUE\n                | unaryexp                  %prec UNARY_OP\n                | nularexp                  %prec NULAR_OP\n                | string                    %prec VALUE\n                | binaryexp                 %prec BINARY_OP\n                | bracedexp                 %prec BRACED_EXP\n                | LPAREN primaryexp RPAREN  %prec VALUE\n    \n    bracedexp   : LBRACE new_scope code RBRACE\n                | LBRACE RBRACE\n    new_scope :\n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : primaryexp\n                    | primaryexp COMMA arrayelement\n    \n    stringarray : LSPAREN RSPAREN\n                | LSPAREN stringarrayelement RSPAREN\n    \n    stringarrayelement  : string\n                        | string COMMA stringarrayelement\n    \n    nularexp    : NULAR_FNC     %prec NULAR_OP\n                | identifier    %prec NULAR_OP\n    \n    unaryexp    : UNARY_FNC primaryexp  %prec UNARY_OP\n                | PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | vardefinition         %prec UNARY_OP\n                | param_unary           %prec UNARY_OP\n                | params_unary          %prec UNARY_OP\n    \n    comparisonoperator  : LT            %prec COMPARISON_OP\n                        | GT            %prec COMPARISON_OP\n                        | LTE           %prec COMPARISON_OP\n                        | GTE           %prec COMPARISON_OP\n                        | EQUALITY      %prec COMPARISON_OP\n                        | INEQUALITY    %prec COMPARISON_OP\n                        | AND           %prec COMPARISON_OP\n                        | OR            %prec COMPARISON_OP\n    \n    mathoperator : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MOD\n                    | POW\n    \n    booleanexp  : primaryexp\n                | primaryexp comparisonoperator booleanexp\n                | primaryexp comparisonoperator LBRACE booleanexp RBRACE\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,64,65,66,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,130,133,134,136,137,138,139,140,141,145,146,147,149,151,153,154,156,157,158,159,160,164,167,170,174,190,191,196,199,201,202,208,210,211,212,232,237,239,241,247,249,254,258,264,268,270,273,278,279,283,284,287,288,],[-158,0,-1,-2,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-158,-10,-11,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-3,-94,-95,-96,-51,-68,-80,-81,-82,-83,-39,-40,-113,-32,-33,-38,-45,-121,-49,-118,-69,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'NULAR_FNC':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[26,26,26,26,26,26,26,-116,26,26,-10,-11,26,26,26,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,26,26,26,26,26,26,26,26,-84,-85,-86,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'UNARY_FNC':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[27,27,27,27,27,27,27,-116,27,27,-10,-11,27,27,27,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,27,27,27,27,27,27,27,27,-84,-85,-86,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PLUS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,116,117,118,119,123,125,127,130,131,132,133,134,136,138,139,140,141,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,167,170,171,174,178,180,186,190,191,196,197,199,201,202,203,204,206,207,208,209,210,211,212,215,216,217,218,220,222,223,225,226,227,229,230,232,233,235,237,238,239,241,245,247,248,249,254,258,260,264,266,268,270,273,278,279,283,284,287,288,],[28,-105,-111,-109,-108,82,-12,-13,-14,-15,-16,-17,28,-78,-104,-97,-98,-99,-100,-101,-102,-125,28,28,28,28,-131,-132,-133,-103,-106,-107,-110,-112,28,-18,-19,-20,-116,-90,-91,28,-79,-153,-154,-155,-21,-156,-157,28,-10,-11,28,28,28,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,28,28,28,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,28,82,-36,28,28,-115,-88,-89,-87,-117,82,-67,-29,28,28,-47,-37,-34,82,82,82,-51,-68,82,-84,82,-85,82,-86,-39,82,28,-113,-32,-33,-38,-45,28,82,-121,-49,-118,28,-69,82,82,82,-114,-122,-57,28,-70,-30,-46,28,28,28,28,-62,28,-41,-31,-48,28,28,82,28,82,28,82,82,82,82,82,82,-58,82,28,-52,28,-55,-63,28,-50,28,-53,82,-25,82,-59,28,-56,-64,-54,82,-44,-60,-61,-65,-66,]),'MINUS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,116,117,118,119,123,125,127,130,131,132,133,134,136,138,139,140,141,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,167,170,171,174,178,180,186,190,191,196,197,199,201,202,203,204,206,207,208,209,210,211,212,215,216,217,218,220,222,223,225,226,227,229,230,232,233,235,237,238,239,241,245,247,248,249,254,258,260,264,266,268,270,273,278,279,283,284,287,288,],[29,-105,-111,-109,-108,83,-12,-13,-14,-15,-16,-17,29,-78,-104,-97,-98,-99,-100,-101,-102,-125,29,29,29,29,-131,-132,-133,-103,-106,-107,-110,-112,29,-18,-19,-20,-116,-90,-91,29,-79,-153,-154,-155,-21,-156,-157,29,-10,-11,29,29,29,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,29,29,29,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,29,83,-36,29,29,-115,-88,-89,-87,-117,83,-67,-29,29,29,-47,-37,-34,83,83,83,-51,-68,83,-84,83,-85,83,-86,-39,83,29,-113,-32,-33,-38,-45,29,83,-121,-49,-118,29,-69,83,83,83,-114,-122,-57,29,-70,-30,-46,29,29,29,29,-62,29,-41,-31,-48,29,29,83,29,83,29,83,83,83,83,83,83,-58,83,29,-52,29,-55,-63,29,-50,29,-53,83,-25,83,-59,29,-56,-64,-54,83,-44,-60,-61,-65,-66,]),'NOT':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[30,30,30,30,30,30,30,-116,30,30,-10,-11,30,30,30,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,30,30,30,30,30,30,30,30,-84,-85,-86,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LPAREN':([0,16,27,28,29,30,39,44,45,50,60,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[39,39,39,39,39,39,39,114,-116,39,131,39,-10,-11,39,39,39,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,39,39,39,155,39,39,39,39,-84,-85,-86,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SWITCH':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[44,44,44,44,44,44,44,-116,44,44,-10,-11,44,44,44,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,44,44,44,44,44,44,44,44,-84,-85,-86,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'PRIVATE':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[46,46,46,46,46,46,46,-116,46,46,-10,-11,46,46,46,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,46,46,46,46,46,46,46,46,-84,-85,-86,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'PRIVATE_ID':([0,16,27,28,29,30,39,45,46,50,60,61,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,224,235,238,245,248,266,],[47,47,98,98,98,98,98,-116,117,98,98,98,47,-10,-11,98,98,98,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,98,98,98,98,98,47,98,98,-84,-85,-86,98,47,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'GLOBAL_ID':([0,16,27,28,29,30,39,45,50,60,61,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,224,235,238,245,248,266,],[48,48,99,99,99,99,99,-116,99,99,99,48,-10,-11,99,99,99,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,99,99,99,99,99,48,99,99,-84,-85,-86,99,48,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'NAMESPACE':([0,16,27,28,29,30,39,45,50,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[49,49,49,49,49,49,49,-116,49,136,49,-10,-11,49,49,49,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,49,49,49,49,49,49,49,49,-84,-85,-86,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'PARAM':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,116,117,118,119,123,125,127,130,131,132,133,134,136,138,139,140,141,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,167,170,171,174,178,180,186,190,191,196,197,199,201,202,203,204,206,207,208,209,210,211,212,215,216,217,218,220,222,223,225,226,227,229,230,232,233,235,237,238,239,241,245,247,248,249,254,258,260,264,266,268,270,273,278,279,283,284,287,288,],[51,-105,-111,-109,-108,72,-12,-13,-14,-15,-16,-17,51,-78,-104,-97,-98,-99,-100,-101,-102,-125,51,51,51,51,-131,-132,-133,-103,-106,-107,-110,-112,51,-18,-19,-20,-116,-90,-91,51,-79,-153,-154,-155,-21,-156,-157,51,-10,-11,51,51,51,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,51,51,51,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,51,72,-36,51,51,-115,-88,-89,-87,-117,72,-67,-29,51,51,-47,-37,-34,-94,-95,-96,-51,-68,72,-84,72,-85,72,-86,-39,72,51,-113,-32,-33,-38,-45,51,72,-121,-49,-118,51,-69,72,72,72,-114,-122,-57,51,-70,-30,-46,51,51,51,51,-62,51,-41,-31,-48,51,51,72,51,-95,51,72,72,72,72,72,72,-58,72,51,-52,51,-55,-63,51,-50,51,-53,72,-25,72,-59,51,-56,-64,-54,72,-44,-60,-61,-65,-66,]),'PARAMS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,116,117,118,119,123,125,127,130,131,132,133,134,136,138,139,140,141,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,167,170,171,174,178,180,186,190,191,196,197,199,201,202,203,204,206,207,208,209,210,211,212,215,216,217,218,220,222,223,225,226,227,229,230,232,233,235,237,238,239,241,245,247,248,249,254,258,260,264,266,268,270,273,278,279,283,284,287,288,],[52,-105,-111,-109,-108,73,-12,-13,-14,-15,-16,-17,52,-78,-104,-97,-98,-99,-100,-101,-102,-125,52,52,52,52,-131,-132,-133,-103,-106,-107,-110,-112,52,-18,-19,-20,-116,-90,-91,52,-79,-153,-154,-155,-21,-156,-157,52,-10,-11,52,52,52,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,52,52,52,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,52,73,-36,52,52,-115,-88,-89,-87,-117,73,-67,-29,52,52,-47,-37,-34,-94,-95,-96,-51,-68,73,-84,73,-85,73,-86,-39,73,52,-113,-32,-33,-38,-45,52,73,-121,-49,-118,52,-69,73,73,73,-114,-122,-57,52,-70,-30,-46,52,52,52,52,-62,52,-41,-31,-48,52,52,73,52,-95,52,73,73,73,73,73,73,-58,73,52,-52,52,-55,-63,52,-50,52,-53,73,-25,73,-59,52,-56,-64,-54,73,-44,-60,-61,-65,-66,]),'NUMBER_REAL':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,126,131,132,144,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,263,266,269,276,],[54,54,54,54,54,54,54,-116,54,54,-10,-11,54,54,54,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,54,54,54,54,54,54,54,54,54,54,-84,-85,-86,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NUMBER_EXP':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,126,131,132,144,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,263,266,269,276,],[55,55,55,55,55,55,55,-116,55,55,-10,-11,55,55,55,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,55,55,55,55,55,55,55,55,55,55,-84,-85,-86,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NUMBER_HEX':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,126,131,132,144,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,263,266,269,276,],[56,56,56,56,56,56,56,-116,56,56,-10,-11,56,56,56,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,56,56,56,56,56,56,56,56,56,56,-84,-85,-86,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LSPAREN':([0,16,27,28,29,30,39,45,46,50,51,52,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,121,122,128,131,132,135,148,150,152,155,161,171,197,200,203,204,206,207,209,215,216,218,222,231,235,238,240,245,248,251,263,266,269,276,],[50,50,50,50,50,50,50,-116,120,50,126,128,-116,50,-10,-11,50,50,50,142,143,144,128,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,50,50,50,50,50,50,168,169,173,50,50,182,-84,-85,-86,50,50,50,50,173,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'STRING_SINGLE':([0,16,27,28,29,30,39,45,46,50,62,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,120,121,128,131,132,135,142,143,148,150,152,155,161,168,169,171,173,192,197,200,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[58,58,58,58,58,58,58,-116,58,58,-116,58,-10,-11,58,58,58,58,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-84,-85,-86,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'STRING_DOUBLE':([0,16,27,28,29,30,39,45,46,50,62,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,120,121,128,131,132,135,142,143,148,150,152,155,161,168,169,171,173,192,197,200,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[59,59,59,59,59,59,59,-116,59,59,-116,59,-10,-11,59,59,59,59,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-84,-85,-86,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LBRACE':([0,16,27,28,29,30,39,43,45,50,60,61,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,109,110,111,112,114,115,129,131,132,148,150,152,155,161,171,182,187,197,203,204,206,207,209,213,215,216,218,222,224,235,238,245,246,248,255,266,272,],[45,45,45,45,45,45,45,45,-116,45,132,132,45,-10,-11,45,45,45,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,148,150,152,45,45,45,45,161,45,45,-35,45,45,-84,-85,-86,45,45,45,161,45,45,222,45,45,45,45,228,45,45,45,45,132,45,45,45,45,45,161,45,45,]),'IF':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[60,60,60,60,60,60,60,-116,60,60,-10,-11,60,60,60,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,60,60,60,60,60,60,60,60,-84,-85,-86,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'WHILE':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[61,61,61,61,61,61,61,-116,61,61,-10,-11,61,61,61,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,61,61,61,61,61,61,61,61,-84,-85,-86,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FOR':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[62,62,62,62,62,62,62,-116,62,62,-10,-11,62,62,62,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,62,62,62,62,62,62,62,62,-84,-85,-86,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'WITH':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,107,114,115,131,132,148,150,152,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[63,63,63,63,63,63,63,-116,63,63,-10,-11,63,63,63,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,63,63,63,63,63,63,63,63,-84,-85,-86,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,45,47,48,53,54,55,56,57,58,59,64,65,66,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,115,116,117,118,119,123,127,130,133,134,136,137,138,139,140,141,145,146,147,148,149,150,151,152,153,154,156,157,158,159,160,161,163,164,167,170,174,179,180,188,190,191,196,199,201,202,208,210,211,212,220,221,222,228,232,234,237,239,241,242,243,244,247,249,253,254,258,259,260,261,264,268,270,271,273,278,279,282,283,284,287,288,],[-1,-2,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-158,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,116,-90,-91,-79,-153,-154,-155,-21,-156,-157,-158,-10,-11,146,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-158,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-3,-94,-95,-96,-51,-68,-80,-81,116,-82,116,-83,116,-39,-40,-113,-32,-33,-38,-45,-158,190,-121,-49,-118,-69,202,-148,212,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-95,-149,116,-158,-58,253,-52,-55,-63,258,-26,-27,-50,-53,-150,-42,-25,-158,-23,-24,-59,-56,-64,-28,-54,-43,-44,-22,-60,-61,-65,-66,]),'SEMI_COLON':([3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,130,133,134,136,138,139,140,141,145,146,147,149,151,153,154,156,157,158,159,160,164,167,170,174,190,191,196,199,201,202,208,210,211,212,232,237,239,241,244,247,249,254,258,260,261,264,268,270,273,278,279,282,283,284,287,288,],[65,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-80,-81,-82,-83,-39,-40,-113,-32,-33,-38,-45,-121,-49,-118,-69,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,65,-50,-53,-42,-25,-23,-24,-59,-56,-64,-54,-43,-44,-22,-60,-61,-65,-66,]),'COMMA':([3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,146,147,149,151,153,154,156,157,158,159,160,164,166,167,170,172,174,176,177,183,184,185,190,191,193,194,196,198,199,201,202,205,208,210,211,212,217,226,227,230,232,233,236,237,239,241,244,247,249,250,252,254,257,258,260,261,264,265,268,270,273,277,278,279,282,283,284,287,288,289,290,],[66,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,171,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-80,-81,-82,-83,-39,-40,-113,-32,-33,-38,-45,-121,192,-49,-118,197,-69,200,-73,206,207,209,-114,-122,215,216,-57,218,-70,-30,-46,224,-62,-41,-31,-48,231,238,240,248,-58,251,255,-52,-55,-63,66,-50,-53,263,-74,-42,269,-25,-23,-24,-59,276,-56,-64,-54,-75,-43,-44,-22,-60,-61,-65,-66,-77,-76,]),'BINARY_FNC':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,67,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,67,-36,-115,-88,-89,-87,-117,67,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,67,67,67,-39,67,-113,-32,-33,-38,-45,67,-121,-49,-118,-69,67,67,67,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,67,-95,67,67,67,67,67,67,-58,67,-52,-55,-63,-50,-53,67,-25,67,-59,-56,-64,-54,67,-44,-60,-61,-65,-66,]),'GETVARIABLE':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,49,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,70,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,121,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,70,-36,-115,-88,-89,-87,-117,70,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,70,70,70,-39,70,-113,-32,-33,-38,-45,70,-121,-49,-118,-69,70,70,70,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,70,-95,70,70,70,70,70,70,-58,70,-52,-55,-63,-50,-53,70,-25,70,-59,-56,-64,-54,70,-44,-60,-61,-65,-66,]),'SETVARIABLE':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,49,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,71,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,122,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,71,-36,-115,-88,-89,-87,-117,71,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,71,71,71,-39,71,-113,-32,-33,-38,-45,71,-121,-49,-118,-69,71,71,71,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,71,-95,71,71,71,71,71,71,-58,71,-52,-55,-63,-50,-53,71,-25,71,-59,-56,-64,-54,71,-44,-60,-61,-65,-66,]),'LT':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,74,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,74,-36,-115,-88,-89,-87,-117,74,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,74,74,74,-39,74,-113,-32,-33,-38,-45,74,-121,-49,-118,-69,74,74,74,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,74,-95,74,74,74,74,74,74,-58,74,-52,-55,-63,-50,-53,74,-25,74,-59,-56,-64,-54,74,-44,-60,-61,-65,-66,]),'GT':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,75,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,75,-36,-115,-88,-89,-87,-117,75,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,75,75,75,-39,75,-113,-32,-33,-38,-45,75,-121,-49,-118,-69,75,75,75,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,75,-95,75,75,75,75,75,75,-58,75,-52,-55,-63,-50,-53,75,-25,75,-59,-56,-64,-54,75,-44,-60,-61,-65,-66,]),'LTE':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,76,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,76,-36,-115,-88,-89,-87,-117,76,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,76,76,76,-39,76,-113,-32,-33,-38,-45,76,-121,-49,-118,-69,76,76,76,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,76,-95,76,76,76,76,76,76,-58,76,-52,-55,-63,-50,-53,76,-25,76,-59,-56,-64,-54,76,-44,-60,-61,-65,-66,]),'GTE':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,77,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,77,-36,-115,-88,-89,-87,-117,77,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,77,77,77,-39,77,-113,-32,-33,-38,-45,77,-121,-49,-118,-69,77,77,77,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,77,-95,77,77,77,77,77,77,-58,77,-52,-55,-63,-50,-53,77,-25,77,-59,-56,-64,-54,77,-44,-60,-61,-65,-66,]),'EQUALITY':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,78,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,78,-36,-115,-88,-89,-87,-117,78,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,78,78,78,-39,78,-113,-32,-33,-38,-45,78,-121,-49,-118,-69,78,78,78,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,78,-95,78,78,78,78,78,78,-58,78,-52,-55,-63,-50,-53,78,-25,78,-59,-56,-64,-54,78,-44,-60,-61,-65,-66,]),'INEQUALITY':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,79,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,79,-36,-115,-88,-89,-87,-117,79,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,79,79,79,-39,79,-113,-32,-33,-38,-45,79,-121,-49,-118,-69,79,79,79,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,79,-95,79,79,79,79,79,79,-58,79,-52,-55,-63,-50,-53,79,-25,79,-59,-56,-64,-54,79,-44,-60,-61,-65,-66,]),'AND':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,80,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,80,-36,-115,-88,-89,-87,-117,80,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,80,80,80,-39,80,-113,-32,-33,-38,-45,80,-121,-49,-118,-69,80,80,80,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,80,-95,80,80,80,80,80,80,-58,80,-52,-55,-63,-50,-53,80,-25,80,-59,-56,-64,-54,80,-44,-60,-61,-65,-66,]),'OR':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,81,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,81,-36,-115,-88,-89,-87,-117,81,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,81,81,81,-39,81,-113,-32,-33,-38,-45,81,-121,-49,-118,-69,81,81,81,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,81,-95,81,81,81,81,81,81,-58,81,-52,-55,-63,-50,-53,81,-25,81,-59,-56,-64,-54,81,-44,-60,-61,-65,-66,]),'TIMES':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,84,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,84,-36,-115,-88,-89,-87,-117,84,-67,-29,-47,-37,-34,84,84,84,-51,-68,84,84,84,-39,84,-113,-32,-33,-38,-45,84,-121,-49,-118,-69,84,84,84,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,84,84,84,84,84,84,84,84,-58,84,-52,-55,-63,-50,-53,84,-25,84,-59,-56,-64,-54,84,-44,-60,-61,-65,-66,]),'DIVIDE':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,85,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,85,-36,-115,-88,-89,-87,-117,85,-67,-29,-47,-37,-34,85,85,85,-51,-68,85,85,85,-39,85,-113,-32,-33,-38,-45,85,-121,-49,-118,-69,85,85,85,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,85,85,85,85,85,85,85,85,-58,85,-52,-55,-63,-50,-53,85,-25,85,-59,-56,-64,-54,85,-44,-60,-61,-65,-66,]),'MOD':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,86,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,86,-36,-115,-88,-89,-87,-117,86,-67,-29,-47,-37,-34,86,86,86,-51,-68,86,86,86,-39,86,-113,-32,-33,-38,-45,86,-121,-49,-118,-69,86,86,86,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,86,86,86,86,86,86,86,86,-58,86,-52,-55,-63,-50,-53,86,-25,86,-59,-56,-64,-54,86,-44,-60,-61,-65,-66,]),'POW':([4,6,7,8,9,10,11,12,13,14,15,17,18,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,125,127,130,133,134,136,138,139,140,141,145,147,149,151,153,154,156,157,158,159,160,162,164,167,170,174,178,180,186,190,191,196,199,201,202,208,210,211,212,217,220,223,225,226,227,229,230,232,233,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-105,-111,-109,-108,87,-12,-13,-14,-15,-16,-17,-78,-104,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-18,-19,-20,-90,-91,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,87,-36,-115,-88,-89,-87,-117,87,-67,-29,-47,-37,-34,87,87,87,-51,-68,87,87,87,-39,87,-113,-32,-33,-38,-45,87,-121,-49,-118,-69,87,87,87,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,87,87,87,87,87,87,87,87,-58,87,-52,-55,-63,-50,-53,87,-25,87,-59,-56,-64,-54,87,-44,-60,-61,-65,-66,]),'RPAREN':([10,11,12,13,14,15,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,113,116,117,118,119,123,127,130,133,134,136,138,139,140,141,145,153,154,156,157,158,159,160,162,164,167,170,174,178,186,190,191,196,199,201,202,208,210,211,212,232,237,239,241,247,249,254,258,264,268,270,273,278,279,283,284,287,288,],[-12,-13,-14,-15,-16,-17,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,156,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-39,-40,-113,-32,-33,-38,-45,189,-121,-49,-118,-69,201,210,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'RSPAREN':([10,11,12,13,14,15,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,50,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,120,123,124,125,127,128,130,133,134,136,138,139,140,141,145,153,154,156,157,158,159,160,164,165,166,167,170,172,174,175,176,177,180,185,190,191,195,196,199,201,202,208,210,211,212,214,217,219,220,221,225,226,227,229,230,232,233,237,239,241,247,249,250,252,253,254,256,257,258,262,264,265,267,268,270,273,274,275,277,278,279,280,281,283,284,285,286,287,288,289,290,],[-12,-13,-14,-15,-16,-17,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,123,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,164,-117,170,-119,-67,174,-29,-47,-37,-34,-94,-95,-96,-51,-68,-39,-40,-113,-32,-33,-38,-45,-121,191,-123,-49,-118,196,-69,199,-71,-73,-148,208,-114,-122,-120,-57,-70,-30,-46,-62,-41,-31,-48,-124,232,-72,-95,-149,237,239,241,247,249,-58,252,-52,-55,-63,-50,-53,264,-74,-150,-42,268,270,-25,273,-59,277,279,-56,-64,-54,283,284,-75,-43,-44,287,288,-60,-61,289,290,-65,-66,-77,-76,]),'TO':([10,11,12,13,14,15,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,130,133,134,136,138,139,140,141,145,153,154,156,157,158,159,160,164,167,170,174,190,191,196,199,201,202,208,210,211,212,223,232,237,239,241,247,249,254,258,264,268,270,273,278,279,283,284,287,288,],[-12,-13,-14,-15,-16,-17,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-39,-40,-113,-32,-33,-38,-45,-121,-49,-118,-69,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,235,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'STEP':([10,11,12,13,14,15,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,130,133,134,136,138,139,140,141,145,153,154,156,157,158,159,160,164,167,170,174,190,191,196,199,201,202,208,210,211,212,232,237,239,241,247,249,254,258,264,268,270,273,278,279,283,284,287,288,],[-12,-13,-14,-15,-16,-17,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-39,-40,-113,-32,-33,-38,-45,-121,-49,-118,-69,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,266,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'DO':([10,11,12,13,14,15,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,41,42,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,130,133,134,136,138,139,140,141,145,153,154,156,157,158,159,160,164,167,170,174,189,190,191,196,199,201,202,208,210,211,212,232,237,239,241,247,249,254,258,264,268,270,273,278,279,283,284,287,288,],[-12,-13,-14,-15,-16,-17,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,111,112,-79,-153,-154,-155,129,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,111,112,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-39,-40,-113,-32,-33,-38,-45,-121,-49,-118,-69,213,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'COLON':([10,11,12,13,14,15,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,130,133,134,136,138,139,140,141,145,153,154,156,157,158,159,160,164,167,170,174,190,191,196,199,201,202,208,210,211,212,232,237,239,241,247,249,254,258,260,264,268,270,273,278,279,283,284,287,288,],[-12,-13,-14,-15,-16,-17,-97,-98,-99,-100,-101,-102,-125,-131,-132,-133,-103,-106,-107,-110,-112,-79,-153,-154,-155,-21,-156,-157,-127,-104,-105,-108,-109,-111,-90,-91,-18,-19,-20,-78,-128,-129,-130,-36,-115,-88,-89,-87,-117,-67,-29,-47,-37,-34,-94,-95,-96,-51,-68,-39,-40,-113,-32,-33,-38,-45,-121,-49,-118,-69,-114,-122,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,272,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'EQUAL':([17,18,19,47,48,58,59,117,118,],[89,90,91,-90,-91,-156,-157,-88,-89,]),'FOREACH':([38,116,190,],[107,-115,-114,]),'THEN':([40,98,99,100,130,133,201,202,],[109,-90,-91,109,-29,-47,-30,-46,]),'EXITWITH':([40,98,99,100,130,133,201,202,],[110,-90,-91,110,-29,-47,-30,-46,]),'FROM':([58,59,181,],[-156,-157,204,]),'CASE':([65,66,228,259,],[-10,-11,245,245,]),'DEFAULT':([65,66,228,259,],[-10,-11,246,246,]),'ELSE':([116,157,190,],[-115,187,-114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,16,64,115,161,],[1,88,137,163,188,]),'empty':([0,16,64,115,161,228,259,],[2,2,2,2,2,243,243,]),'statement':([0,16,64,115,161,],[3,3,3,3,3,]),'controlstructure':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[4,4,94,94,94,94,94,94,4,94,94,94,94,94,94,94,94,4,94,94,94,4,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'assignment':([0,16,64,115,161,],[5,5,5,5,5,]),'binaryexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[6,6,97,97,97,97,97,97,6,97,97,97,97,97,97,97,97,6,97,97,97,6,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'nularexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[7,7,96,96,96,96,96,96,7,96,96,96,96,96,96,96,96,7,96,96,96,7,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'unaryexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[8,8,95,95,95,95,95,95,8,95,95,95,95,95,95,95,95,8,95,95,95,8,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'primaryexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[9,9,92,104,105,106,108,125,9,138,139,140,147,149,151,154,162,9,178,180,186,9,125,217,220,223,225,226,227,229,230,233,180,254,180,260,180,278,]),'ifstatement':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'whileloop':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'forloop':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'withstatement':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'foreachloop':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'switchstatement':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assignment_code':([0,16,64,115,161,],[16,16,16,16,16,]),'definition':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[17,17,103,103,103,103,103,103,17,103,103,103,103,103,103,103,103,17,103,103,103,17,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'identifier':([0,16,27,28,29,30,39,50,60,61,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,224,235,238,245,248,266,],[18,18,93,93,93,93,93,93,133,133,18,93,93,93,93,93,93,93,93,18,93,93,93,18,93,93,93,93,93,93,93,93,93,93,93,133,93,93,93,93,93,]),'variable':([0,16,64,115,161,],[19,19,19,19,19,]),'getvariable_ns':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'getvariable_any':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'setvariable_ns':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'setvariable_any':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'param_binary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'params_binary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'vardefinition':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'param_unary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'params_unary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'number':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,126,131,132,144,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,263,266,269,276,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,172,34,34,185,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,274,34,280,286,]),'helpertype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'array':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,231,235,238,240,245,248,251,263,266,269,276,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,153,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,250,36,36,257,36,36,265,275,36,281,285,]),'string':([0,16,27,28,29,30,39,46,50,64,67,68,69,70,89,90,91,107,114,115,120,121,128,131,132,135,142,143,155,161,168,169,171,173,192,197,200,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[37,37,37,37,37,37,37,118,37,37,37,37,37,141,37,37,37,37,37,37,166,167,177,37,37,181,183,184,37,37,193,194,37,198,166,37,177,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'bracedexp':([0,16,27,28,29,30,39,43,50,64,67,68,69,89,90,91,107,109,110,111,114,115,131,132,155,161,171,187,197,203,204,206,207,209,215,216,218,222,235,238,245,246,248,266,272,],[38,38,38,38,38,38,38,113,38,38,38,38,38,38,38,38,38,157,158,159,38,38,38,38,38,38,38,211,38,38,38,38,38,38,38,38,38,38,38,38,38,261,38,38,282,]),'iftype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[40,40,100,100,100,100,100,100,40,100,100,100,100,100,100,100,100,40,100,100,100,40,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'whiletype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[41,41,101,101,101,101,101,101,41,101,101,101,101,101,101,101,101,41,101,101,101,41,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'fortype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[42,42,102,102,102,102,102,102,42,102,102,102,102,102,102,102,102,42,102,102,102,42,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'withstatementinit':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'arraydefinition':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'withtype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,91,107,114,115,131,132,155,161,171,197,203,204,206,207,209,215,216,218,222,235,238,245,248,266,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'terminator':([3,244,],[64,259,]),'comparisonoperator':([9,92,104,105,106,108,125,138,139,140,147,149,151,154,162,178,180,186,217,220,223,225,226,227,229,230,233,254,260,278,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,203,68,68,203,68,68,68,68,68,68,68,68,68,68,]),'mathoperator':([9,92,104,105,106,108,125,138,139,140,147,149,151,154,162,178,180,186,217,220,223,225,226,227,229,230,233,254,260,278,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'new_scope':([45,62,148,150,152,222,],[115,135,115,115,115,115,]),'stringarray':([46,],[119,]),'arrayelement':([50,171,],[124,195,]),'params_array':([52,73,],[127,145,]),'bracedexp_condition':([60,61,224,],[130,134,236,]),'bracedexp_noscope':([112,182,255,],[160,205,267,]),'stringarrayelement':([120,192,],[165,214,]),'params_element':([128,200,],[175,219,]),'params_array_entry':([128,200,],[176,176,]),'booleanexp':([132,203,222,238,248,],[179,221,234,256,262,]),'switchbody':([228,259,],[242,271,]),'case':([228,259,],[244,244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc.py',36),
  ('code -> statement','code',1,'p_code','sqf_yacc.py',37),
  ('code -> statement terminator code','code',3,'p_code','sqf_yacc.py',38),
  ('statement -> controlstructure','statement',1,'p_statement','sqf_yacc.py',45),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc.py',46),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc.py',47),
  ('statement -> nularexp','statement',1,'p_statement','sqf_yacc.py',48),
  ('statement -> unaryexp','statement',1,'p_statement','sqf_yacc.py',49),
  ('statement -> primaryexp','statement',1,'p_statement','sqf_yacc.py',50),
  ('terminator -> SEMI_COLON','terminator',1,'p_terminator','sqf_yacc.py',57),
  ('terminator -> COMMA','terminator',1,'p_terminator','sqf_yacc.py',58),
  ('controlstructure -> ifstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',72),
  ('controlstructure -> whileloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',73),
  ('controlstructure -> forloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',74),
  ('controlstructure -> withstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',75),
  ('controlstructure -> foreachloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',76),
  ('controlstructure -> switchstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',77),
  ('helpertype -> iftype','helpertype',1,'p_helpertype','sqf_yacc.py',84),
  ('helpertype -> whiletype','helpertype',1,'p_helpertype','sqf_yacc.py',85),
  ('helpertype -> fortype','helpertype',1,'p_helpertype','sqf_yacc.py',86),
  ('helpertype -> withtype','helpertype',1,'p_helpertype','sqf_yacc.py',87),
  ('case -> CASE primaryexp COLON bracedexp','case',4,'p_case','sqf_yacc.py',94),
  ('case -> CASE primaryexp','case',2,'p_case','sqf_yacc.py',95),
  ('case -> DEFAULT bracedexp','case',2,'p_case','sqf_yacc.py',96),
  ('switchstatement -> SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE','switchstatement',8,'p_switchstatement','sqf_yacc.py',102),
  ('switchbody -> empty','switchbody',1,'p_switchbody','sqf_yacc.py',108),
  ('switchbody -> case','switchbody',1,'p_switchbody','sqf_yacc.py',109),
  ('switchbody -> case terminator switchbody','switchbody',3,'p_switchbody','sqf_yacc.py',110),
  ('iftype -> IF bracedexp_condition','iftype',2,'p_iftype','sqf_yacc.py',116),
  ('iftype -> IF LPAREN primaryexp RPAREN','iftype',4,'p_iftype','sqf_yacc.py',117),
  ('ifstatement -> iftype THEN bracedexp ELSE bracedexp','ifstatement',5,'p_ifstatement','sqf_yacc.py',124),
  ('ifstatement -> iftype THEN bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',125),
  ('ifstatement -> iftype EXITWITH bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',126),
  ('withtype -> WITH NAMESPACE','withtype',2,'p_withtype','sqf_yacc.py',133),
  ('withstatementinit -> withtype DO','withstatementinit',2,'p_withstatementinit','sqf_yacc.py',140),
  ('withstatement -> withstatementinit bracedexp','withstatement',2,'p_withstatement','sqf_yacc.py',150),
  ('whiletype -> WHILE bracedexp_condition','whiletype',2,'p_whiletype','sqf_yacc.py',158),
  ('whileloop -> whiletype DO bracedexp','whileloop',3,'p_whileloop','sqf_yacc.py',164),
  ('foreachloop -> bracedexp FOREACH array','foreachloop',3,'p_foreachloop','sqf_yacc.py',171),
  ('foreachloop -> bracedexp FOREACH primaryexp','foreachloop',3,'p_foreachloop','sqf_yacc.py',172),
  ('foreachloop -> bracedexp FOREACH LPAREN primaryexp RPAREN','foreachloop',5,'p_foreachloop','sqf_yacc.py',173),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp','fortype',7,'p_fortype','sqf_yacc.py',179),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp','fortype',9,'p_fortype','sqf_yacc.py',180),
  ('fortype -> FOR new_scope LSPAREN bracedexp_noscope COMMA bracedexp_condition COMMA bracedexp_noscope RSPAREN','fortype',9,'p_fortype','sqf_yacc.py',181),
  ('forloop -> fortype DO bracedexp_noscope','forloop',3,'p_forloop','sqf_yacc.py',203),
  ('bracedexp_condition -> LBRACE booleanexp RBRACE','bracedexp_condition',3,'p_bracedexp_condition','sqf_yacc.py',212),
  ('bracedexp_condition -> identifier','bracedexp_condition',1,'p_bracedexp_condition','sqf_yacc.py',213),
  ('bracedexp_noscope -> LBRACE code RBRACE','bracedexp_noscope',3,'p_bracedexp_noscope','sqf_yacc.py',223),
  ('getvariable_ns -> NAMESPACE GETVARIABLE string','getvariable_ns',3,'p_getvariable_ns','sqf_yacc.py',230),
  ('getvariable_ns -> NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_ns',7,'p_getvariable_ns','sqf_yacc.py',231),
  ('getvariable_any -> primaryexp GETVARIABLE string','getvariable_any',3,'p_getvariable_any','sqf_yacc.py',256),
  ('getvariable_any -> primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_any',7,'p_getvariable_any','sqf_yacc.py',257),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_ns',7,'p_setvariable_ns','sqf_yacc.py',265),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_ns',9,'p_setvariable_ns','sqf_yacc.py',266),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_any',7,'p_setvariable_any','sqf_yacc.py',275),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_any',9,'p_setvariable_any','sqf_yacc.py',276),
  ('param_unary -> PARAM LSPAREN number RSPAREN','param_unary',4,'p_param_unary','sqf_yacc.py',284),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp RSPAREN','param_unary',6,'p_param_unary','sqf_yacc.py',285),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_unary',8,'p_param_unary','sqf_yacc.py',286),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_unary',10,'p_param_unary','sqf_yacc.py',287),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_unary',10,'p_param_unary','sqf_yacc.py',288),
  ('param_binary -> primaryexp PARAM LSPAREN number RSPAREN','param_binary',5,'p_param_binary','sqf_yacc.py',298),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN','param_binary',7,'p_param_binary','sqf_yacc.py',299),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_binary',9,'p_param_binary','sqf_yacc.py',300),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',301),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',302),
  ('params_unary -> PARAMS params_array','params_unary',2,'p_params_unary','sqf_yacc.py',312),
  ('params_binary -> primaryexp PARAMS params_array','params_binary',3,'p_params_binary','sqf_yacc.py',318),
  ('params_array -> LSPAREN RSPAREN','params_array',2,'p_params_array','sqf_yacc.py',324),
  ('params_array -> LSPAREN params_element RSPAREN','params_array',3,'p_params_array','sqf_yacc.py',325),
  ('params_element -> params_array_entry','params_element',1,'p_params_array_element','sqf_yacc.py',335),
  ('params_element -> params_array_entry COMMA params_element','params_element',3,'p_params_array_element','sqf_yacc.py',336),
  ('params_array_entry -> string','params_array_entry',1,'p_params_array_entry','sqf_yacc.py',349),
  ('params_array_entry -> LSPAREN string COMMA primaryexp RSPAREN','params_array_entry',5,'p_params_array_entry','sqf_yacc.py',350),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array RSPAREN','params_array_entry',7,'p_params_array_entry','sqf_yacc.py',351),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array COMMA number RSPAREN','params_array_entry',9,'p_params_array_entry','sqf_yacc.py',352),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array COMMA array RSPAREN','params_array_entry',9,'p_params_array_entry','sqf_yacc.py',353),
  ('vardefinition -> definition','vardefinition',1,'p_vardefinition','sqf_yacc.py',373),
  ('vardefinition -> arraydefinition','vardefinition',1,'p_vardefinition','sqf_yacc.py',374),
  ('assignment -> assignment_code code RBRACE','assignment',3,'p_assignment','sqf_yacc.py',380),
  ('assignment -> definition EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',381),
  ('assignment -> identifier EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',382),
  ('assignment -> variable EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',383),
  ('assignment_code -> definition EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',400),
  ('assignment_code -> identifier EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',401),
  ('assignment_code -> variable EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',402),
  ('arraydefinition -> PRIVATE stringarray','arraydefinition',2,'p_arraydefinition','sqf_yacc.py',411),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc.py',429),
  ('definition -> PRIVATE string','definition',2,'p_definition','sqf_yacc.py',430),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc.py',449),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc.py',450),
  ('variable -> PRIVATE_ID','variable',1,'p_variable','sqf_yacc.py',473),
  ('variable -> GLOBAL_ID','variable',1,'p_variable','sqf_yacc.py',474),
  ('binaryexp -> primaryexp BINARY_FNC primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',483),
  ('binaryexp -> primaryexp comparisonoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',484),
  ('binaryexp -> primaryexp mathoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',485),
  ('binaryexp -> getvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',486),
  ('binaryexp -> getvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',487),
  ('binaryexp -> setvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',488),
  ('binaryexp -> setvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',489),
  ('binaryexp -> param_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',490),
  ('binaryexp -> params_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',491),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc.py',497),
  ('primaryexp -> identifier','primaryexp',1,'p_primaryexp','sqf_yacc.py',498),
  ('primaryexp -> controlstructure','primaryexp',1,'p_primaryexp','sqf_yacc.py',499),
  ('primaryexp -> helpertype','primaryexp',1,'p_primaryexp','sqf_yacc.py',500),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc.py',501),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',502),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',503),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc.py',504),
  ('primaryexp -> binaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',505),
  ('primaryexp -> bracedexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',506),
  ('primaryexp -> LPAREN primaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc.py',507),
  ('bracedexp -> LBRACE new_scope code RBRACE','bracedexp',4,'p_bracedexp','sqf_yacc.py',517),
  ('bracedexp -> LBRACE RBRACE','bracedexp',2,'p_bracedexp','sqf_yacc.py',518),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','sqf_yacc.py',526),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc.py',532),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc.py',533),
  ('arrayelement -> primaryexp','arrayelement',1,'p_arrayelement','sqf_yacc.py',543),
  ('arrayelement -> primaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc.py',544),
  ('stringarray -> LSPAREN RSPAREN','stringarray',2,'p_stringarray','sqf_yacc.py',557),
  ('stringarray -> LSPAREN stringarrayelement RSPAREN','stringarray',3,'p_stringarray','sqf_yacc.py',558),
  ('stringarrayelement -> string','stringarrayelement',1,'p_stringarrayelement','sqf_yacc.py',568),
  ('stringarrayelement -> string COMMA stringarrayelement','stringarrayelement',3,'p_stringarrayelement','sqf_yacc.py',569),
  ('nularexp -> NULAR_FNC','nularexp',1,'p_nularexp','sqf_yacc.py',582),
  ('nularexp -> identifier','nularexp',1,'p_nularexp','sqf_yacc.py',583),
  ('unaryexp -> UNARY_FNC primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',590),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',591),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',592),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',593),
  ('unaryexp -> vardefinition','unaryexp',1,'p_unaryexp','sqf_yacc.py',594),
  ('unaryexp -> param_unary','unaryexp',1,'p_unaryexp','sqf_yacc.py',595),
  ('unaryexp -> params_unary','unaryexp',1,'p_unaryexp','sqf_yacc.py',596),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',602),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',603),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',604),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',605),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',606),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',607),
  ('comparisonoperator -> AND','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',608),
  ('comparisonoperator -> OR','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',609),
  ('mathoperator -> PLUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',616),
  ('mathoperator -> MINUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',617),
  ('mathoperator -> TIMES','mathoperator',1,'p_mathoperator','sqf_yacc.py',618),
  ('mathoperator -> DIVIDE','mathoperator',1,'p_mathoperator','sqf_yacc.py',619),
  ('mathoperator -> MOD','mathoperator',1,'p_mathoperator','sqf_yacc.py',620),
  ('mathoperator -> POW','mathoperator',1,'p_mathoperator','sqf_yacc.py',621),
  ('booleanexp -> primaryexp','booleanexp',1,'p_booleanexp','sqf_yacc.py',628),
  ('booleanexp -> primaryexp comparisonoperator booleanexp','booleanexp',3,'p_booleanexp','sqf_yacc.py',629),
  ('booleanexp -> primaryexp comparisonoperator LBRACE booleanexp RBRACE','booleanexp',5,'p_booleanexp','sqf_yacc.py',630),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc.py',636),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc.py',637),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc.py',644),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc.py',645),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc.py',646),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc.py',653),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc.py',654),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc.py',661),
]
