
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftELSEleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BINARY_FNC BOOL CASE COLON COMMA COMMENT_MULTI COMMENT_SINGLE DEFAULT DIVIDE DO ELSE EQUAL EQUALITY EXITWITH FOR FOREACH FROM GETVARIABLE GLOBAL_ID GT GTE IF INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NAMESPACE NEWLINE NOT NULAR_FNC NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SEMI_COLON SETVARIABLE STEP STRING_DOUBLE STRING_SINGLE SWITCH THEN TIMES TO UNARY_FNC WHILE WITH\n    code    : empty\n            | statement\n            | statement terminator code\n    \n    statement   : controlstructure\n                | assignment\n                | binaryexp\n                | nularexp\n                | unaryexp\n    \n    terminator  : SEMI_COLON\n                | COMMA\n    \n    controlstructure    : ifstatement\n                        | whileloop\n                        | forloop\n                        | withstatement\n                        | foreachloop\n                        | switchstatement\n    \n    helpertype  : iftype\n                | whiletype\n                | fortype\n                | withtype\n    \n    case    : CASE primaryexp COLON bracedexp\n            | CASE primaryexp\n            | DEFAULT bracedexp\n    \n    switchstatement : SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE\n    \n    switchbody  : empty\n                | case\n                | case terminator switchbody\n    \n    iftype : IF forloop_condition\n    \n    ifstatement : iftype THEN bracedexp\n                | iftype EXITWITH bracedexp\n                | iftype THEN bracedexp ELSE bracedexp\n    \n    withtype : WITH NAMESPACE\n    \n    withstatementinit : withtype DO\n    \n    withstatement : withstatementinit bracedexp\n    \n    whiletype   : WHILE forloop_condition\n    \n    whileloop : whiletype DO bracedexp\n    \n    foreachloop : bracedexp FOREACH array\n                | bracedexp FOREACH primaryexp\n    \n    fortype : FOR new_scope string FROM primaryexp TO primaryexp\n            | FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp\n            | FOR new_scope LSPAREN bracedexp_noscope COMMA forloop_condition COMMA bracedexp_noscope RSPAREN\n    \n    forloop : fortype DO bracedexp_noscope\n    \n    forloop_condition   : LBRACE booleanexp RBRACE\n                        | identifier\n    \n     bracedexp_noscope : LBRACE code RBRACE\n    \n    getvariable_ns  : NAMESPACE GETVARIABLE string\n                    | NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    getvariable_any : primaryexp GETVARIABLE string\n                    | primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    setvariable_ns  : NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                    | NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    setvariable_any     : primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                        | primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    vardefinition   : definition\n                    | arraydefinition\n    \n    assignment  : assignment_code code RBRACE\n                | definition EQUAL primaryexp\n                | variable EQUAL primaryexp\n    \n    assignment_code : definition EQUAL LBRACE\n                    | variable EQUAL LBRACE\n    \n    arraydefinition : PRIVATE stringarray\n    \n    definition  : PRIVATE PRIVATE_ID\n                | PRIVATE string\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    variable    : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID %prec VARIABLE\n    \n    binaryexp   : primaryexp BINARY_FNC primaryexp          %prec BINARY_OP\n                | primaryexp comparisonoperator primaryexp  %prec BINARY_OP\n                | primaryexp mathoperator primaryexp        %prec BINARY_OP\n                | getvariable_ns                            %prec BINARY_OP\n                | getvariable_any                           %prec BINARY_OP\n                | setvariable_ns                            %prec BINARY_OP\n                | setvariable_any                           %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | identifier                %prec VALUE\n                | helpertype                %prec VALUE\n                | array                     %prec VALUE\n                | unaryexp                  %prec UNARY_OP\n                | nularexp                  %prec NULAR_OP\n                | string                    %prec VALUE\n                | binaryexp                 %prec BINARY_OP\n                | bracedexp                 %prec BRACED_EXP\n                | LPAREN binaryexp RPAREN   %prec BRACED_EXP\n    \n    bracedexp : LBRACE new_scope code RBRACE\n    new_scope :\n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : primaryexp\n                    | primaryexp COMMA arrayelement\n    \n    stringarray : LSPAREN RSPAREN\n                | LSPAREN stringarrayelement RSPAREN\n    \n    stringarrayelement  : string\n                        | string COMMA stringarrayelement\n    \n    nularexp    : NULAR_FNC     %prec NULAR_OP\n                | identifier    %prec NULAR_OP\n    \n    unaryexp    : UNARY_FNC primaryexp  %prec UNARY_OP\n                | PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | vardefinition         %prec UNARY_OP\n    \n    comparisonoperator  : LT            %prec COMPARISON_OP\n                        | GT            %prec COMPARISON_OP\n                        | LTE           %prec COMPARISON_OP\n                        | GTE           %prec COMPARISON_OP\n                        | EQUALITY      %prec COMPARISON_OP\n                        | INEQUALITY    %prec COMPARISON_OP\n                        | AND           %prec COMPARISON_OP\n                        | OR            %prec COMPARISON_OP\n    \n    mathoperator : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MOD\n                    | POW\n    \n    booleanexp  : primaryexp\n                | primaryexp comparisonoperator booleanexp\n                | primaryexp comparisonoperator LBRACE booleanexp RBRACE\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,29,35,40,41,42,43,44,47,52,53,54,55,56,58,59,60,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,108,109,110,114,117,119,120,123,124,125,126,128,129,130,131,134,136,137,138,139,140,141,144,146,149,152,163,164,169,175,176,194,196,202,204,206,209,216,219,220,221,],[-126,0,-1,-2,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-54,-71,-72,-73,-74,-95,-96,-101,-78,-64,-81,-65,-75,-77,-55,-121,-122,-123,-124,-125,-126,-9,-10,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-34,-62,-63,-61,-87,-28,-44,-35,-32,-3,-56,-57,-68,-69,-70,-48,-58,-29,-30,-37,-38,-36,-42,-84,-91,-46,-88,-85,-92,-43,-31,-45,-49,-52,-47,-50,-39,-24,-53,-51,-40,-41,]),'NULAR_FNC':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[23,23,23,23,23,23,23,-86,23,23,-9,-10,23,23,23,23,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,23,23,23,23,23,-59,-60,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'UNARY_FNC':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[25,25,25,25,25,25,25,-86,25,25,-9,-10,25,25,25,25,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,25,25,25,25,25,-59,-60,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PLUS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,38,40,41,42,43,44,46,47,51,52,53,54,55,56,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,106,107,108,109,110,114,116,117,118,119,120,123,126,127,128,129,130,131,134,135,138,139,142,143,144,146,149,152,153,155,163,164,169,170,171,173,174,179,180,181,183,184,186,187,189,190,192,194,195,196,200,202,203,204,206,211,214,216,219,220,221,],[26,-82,-80,-79,26,-54,76,-71,-72,-73,-74,-95,-76,26,26,26,26,-101,-17,-83,-18,-19,-78,26,-86,-64,-81,-65,-75,-77,26,-55,-20,-121,-122,-123,-124,-125,26,-9,-10,26,26,26,26,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,26,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,26,26,-82,26,-62,-63,-61,-87,76,-28,26,-44,-35,-32,76,-59,76,76,76,-48,76,-60,-78,76,26,76,-84,-91,-46,-88,26,76,-85,-92,-43,26,26,26,26,26,26,76,26,76,76,76,76,76,26,-49,26,-52,26,-47,26,-50,76,76,26,-53,-51,76,-41,]),'MINUS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,37,38,40,41,42,43,44,46,47,51,52,53,54,55,56,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,101,105,106,107,108,109,110,114,116,117,118,119,120,123,126,127,128,129,130,131,134,135,138,139,142,143,144,146,149,152,153,155,163,164,169,170,171,173,174,179,180,181,183,184,186,187,189,190,192,194,195,196,200,202,203,204,206,211,214,216,219,220,221,],[27,-82,-80,-79,27,-54,77,-71,-72,-73,-74,-95,-76,27,27,27,27,-101,-17,-83,-18,-19,-78,27,-86,-64,-81,-65,-75,-77,27,-55,-20,-121,-122,-123,-124,-125,27,-9,-10,27,27,27,27,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,27,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,27,27,-82,27,-62,-63,-61,-87,77,-28,27,-44,-35,-32,77,-59,77,77,77,-48,77,-60,-78,77,27,77,-84,-91,-46,-88,27,77,-85,-92,-43,27,27,27,27,27,27,77,27,77,77,77,77,77,27,-49,27,-52,27,-47,27,-50,77,77,27,-53,-51,77,-41,]),'NOT':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[28,28,28,28,28,28,28,-86,28,28,-9,-10,28,28,28,28,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,28,28,28,28,28,-59,-60,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'SWITCH':([0,15,38,58,59,60,107,127,135,142,183,],[36,36,-86,36,-9,-10,36,-59,-60,36,-86,]),'PRIVATE':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[39,39,39,39,39,39,39,-86,39,39,-9,-10,39,39,39,39,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,39,39,39,39,39,-59,-60,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'PRIVATE_ID':([0,15,25,26,27,28,37,38,39,46,48,49,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,185,192,195,200,203,214,],[40,40,89,89,89,89,89,-86,108,89,89,89,40,-9,-10,89,89,89,89,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,89,89,89,40,89,-59,-60,40,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'GLOBAL_ID':([0,15,25,26,27,28,37,38,46,48,49,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,185,192,195,200,203,214,],[42,42,90,90,90,90,90,-86,90,90,90,42,-9,-10,90,90,90,90,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,90,90,90,42,90,-59,-60,42,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'LPAREN':([0,15,25,26,27,28,36,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[37,37,37,37,37,37,105,37,-86,37,37,-9,-10,37,37,37,37,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,37,37,37,37,37,-59,-60,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'NAMESPACE':([0,15,25,26,27,28,37,38,46,57,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[45,45,45,45,45,45,45,-86,45,123,45,-9,-10,45,45,45,45,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,45,45,45,45,45,-59,-60,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'IF':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[48,48,48,48,48,48,48,-86,48,48,-9,-10,48,48,48,48,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,48,48,48,48,48,-59,-60,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'WHILE':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[49,49,49,49,49,49,49,-86,49,49,-9,-10,49,49,49,49,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,49,49,49,49,49,-59,-60,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'FOR':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[50,50,50,50,50,50,50,-86,50,50,-9,-10,50,50,50,50,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,50,50,50,50,50,-59,-60,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'LBRACE':([0,15,25,26,27,28,34,37,38,46,48,49,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,99,100,101,102,103,105,107,118,122,127,135,142,153,157,160,170,171,173,174,177,179,180,183,185,192,195,200,201,203,207,214,218,],[38,38,38,38,38,38,38,38,-86,38,118,118,38,-9,-10,127,38,38,38,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,135,38,38,38,38,142,38,38,38,-33,-59,-60,38,38,142,38,183,38,38,38,188,38,38,38,118,38,38,38,38,38,142,38,38,]),'NUMBER_REAL':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[52,52,52,52,52,52,52,-86,52,52,-9,-10,52,52,52,52,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,52,52,52,52,52,-59,-60,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'NUMBER_EXP':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[53,53,53,53,53,53,53,-86,53,53,-9,-10,53,53,53,53,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,53,53,53,53,53,-59,-60,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'NUMBER_HEX':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[54,54,54,54,54,54,54,-86,54,54,-9,-10,54,54,54,54,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,54,54,54,54,54,-59,-60,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'LSPAREN':([0,15,25,26,27,28,37,38,39,46,50,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,112,113,118,121,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[46,46,46,46,46,46,46,-86,111,46,-86,46,-9,-10,46,46,46,46,132,133,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,46,46,46,46,150,151,46,157,-59,-60,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'STRING_SINGLE':([0,15,25,26,27,28,37,38,39,46,50,58,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,111,112,118,121,127,132,133,135,142,150,151,153,165,170,171,173,174,179,180,183,192,195,200,203,214,],[55,55,55,55,55,55,55,-86,55,55,-86,55,-9,-10,55,55,55,55,55,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,55,55,55,55,55,55,55,55,-59,55,55,-60,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'STRING_DOUBLE':([0,15,25,26,27,28,37,38,39,46,50,58,59,60,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,111,112,118,121,127,132,133,135,142,150,151,153,165,170,171,173,174,179,180,183,192,195,200,203,214,],[56,56,56,56,56,56,56,-86,56,56,-86,56,-9,-10,56,56,56,56,56,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,56,56,56,56,56,56,56,56,-59,56,56,-60,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'WITH':([0,15,25,26,27,28,37,38,46,58,59,60,62,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,101,105,107,118,127,135,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[57,57,57,57,57,57,57,-86,57,57,-9,-10,57,57,57,57,-102,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,57,57,57,57,57,-59,-60,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,29,35,38,40,41,42,43,44,47,52,53,54,55,56,58,59,60,61,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,107,108,109,110,114,117,119,120,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,144,145,146,149,152,154,155,161,163,164,169,175,176,181,182,183,188,191,194,196,197,198,199,202,204,205,206,209,210,211,212,216,217,219,220,221,222,],[-1,-2,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-126,-54,-71,-72,-73,-74,-95,-96,-101,-78,-86,-64,-81,-65,-75,-77,-55,-121,-122,-123,-124,-125,-126,-9,-10,125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-34,-126,-62,-63,-61,-87,-28,-44,-35,-32,-3,-56,-57,-59,-68,-69,-70,-48,-58,-60,-29,-30,-37,-38,-36,-42,-126,-84,163,-91,-46,-88,169,-116,176,-85,-92,-43,-31,-45,-69,-117,-86,-126,205,-49,-52,209,-25,-26,-47,-50,-118,-39,-24,-126,-22,-23,-53,-27,-51,-40,-41,-21,]),'SEMI_COLON':([3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,29,35,40,41,42,43,44,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,108,109,110,114,117,119,120,123,125,126,128,129,130,131,134,136,137,138,139,140,141,144,146,149,152,163,164,169,175,176,194,196,199,202,204,206,209,211,212,216,219,220,221,222,],[59,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-54,-71,-72,-73,-74,-95,-96,-101,-78,-64,-81,-65,-75,-77,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-34,-62,-63,-61,-87,-28,-44,-35,-32,-56,-57,-68,-69,-70,-48,-58,-29,-30,-37,-38,-36,-42,-84,-91,-46,-88,-85,-92,-43,-31,-45,-49,-52,59,-47,-50,-39,-24,-22,-23,-53,-51,-40,-41,-21,]),'COMMA':([3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,29,35,40,41,42,43,44,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,104,108,109,110,114,116,117,119,120,123,125,126,128,129,130,131,134,136,137,138,139,140,141,144,146,148,149,152,158,159,163,164,166,167,169,172,175,176,187,190,193,194,196,199,202,204,206,209,211,212,216,219,220,221,222,],[60,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-54,-71,-72,-73,-74,-95,-96,-101,-78,-64,-81,-65,-75,-77,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-34,-62,-63,-61,-87,153,-28,-44,-35,-32,-56,-57,-68,-69,-70,-48,-58,-29,-30,-37,-38,-36,-42,-84,-91,165,-46,-88,173,174,-85,-92,179,180,-43,185,-31,-45,195,203,207,-49,-52,60,-47,-50,-39,-24,-22,-23,-53,-51,-40,-41,-21,]),'BINARY_FNC':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,63,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,63,-28,-44,-35,-32,63,-68,-69,-70,-48,63,-78,63,63,-84,-91,-46,-88,63,-85,-92,-43,-69,63,63,63,63,63,-49,-52,-47,-50,63,63,-53,-51,63,-41,]),'GETVARIABLE':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,45,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,66,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,112,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,66,-28,-44,-35,-32,66,-68,-69,-70,-48,66,-78,66,66,-84,-91,-46,-88,66,-85,-92,-43,-69,66,66,66,66,66,-49,-52,-47,-50,66,66,-53,-51,66,-41,]),'SETVARIABLE':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,45,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,67,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,113,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,67,-28,-44,-35,-32,67,-68,-69,-70,-48,67,-78,67,67,-84,-91,-46,-88,67,-85,-92,-43,-69,67,67,67,67,67,-49,-52,-47,-50,67,67,-53,-51,67,-41,]),'LT':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,68,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,68,-28,-44,-35,-32,68,-68,-69,-70,-48,68,-78,68,68,-84,-91,-46,-88,68,-85,-92,-43,-69,68,68,68,68,68,-49,-52,-47,-50,68,68,-53,-51,68,-41,]),'GT':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,69,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,69,-28,-44,-35,-32,69,-68,-69,-70,-48,69,-78,69,69,-84,-91,-46,-88,69,-85,-92,-43,-69,69,69,69,69,69,-49,-52,-47,-50,69,69,-53,-51,69,-41,]),'LTE':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,70,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,70,-28,-44,-35,-32,70,-68,-69,-70,-48,70,-78,70,70,-84,-91,-46,-88,70,-85,-92,-43,-69,70,70,70,70,70,-49,-52,-47,-50,70,70,-53,-51,70,-41,]),'GTE':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,71,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,71,-28,-44,-35,-32,71,-68,-69,-70,-48,71,-78,71,71,-84,-91,-46,-88,71,-85,-92,-43,-69,71,71,71,71,71,-49,-52,-47,-50,71,71,-53,-51,71,-41,]),'EQUALITY':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,72,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,72,-28,-44,-35,-32,72,-68,-69,-70,-48,72,-78,72,72,-84,-91,-46,-88,72,-85,-92,-43,-69,72,72,72,72,72,-49,-52,-47,-50,72,72,-53,-51,72,-41,]),'INEQUALITY':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,73,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,73,-28,-44,-35,-32,73,-68,-69,-70,-48,73,-78,73,73,-84,-91,-46,-88,73,-85,-92,-43,-69,73,73,73,73,73,-49,-52,-47,-50,73,73,-53,-51,73,-41,]),'AND':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,74,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,74,-28,-44,-35,-32,74,-68,-69,-70,-48,74,-78,74,74,-84,-91,-46,-88,74,-85,-92,-43,-69,74,74,74,74,74,-49,-52,-47,-50,74,74,-53,-51,74,-41,]),'OR':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,75,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,75,-28,-44,-35,-32,75,-68,-69,-70,-48,75,-78,75,75,-84,-91,-46,-88,75,-85,-92,-43,-69,75,75,75,75,75,-49,-52,-47,-50,75,75,-53,-51,75,-41,]),'TIMES':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,78,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,78,-28,-44,-35,-32,78,78,78,78,-48,78,-78,78,78,-84,-91,-46,-88,78,-85,-92,-43,78,78,78,78,78,78,-49,-52,-47,-50,78,78,-53,-51,78,-41,]),'DIVIDE':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,79,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,79,-28,-44,-35,-32,79,79,79,79,-48,79,-78,79,79,-84,-91,-46,-88,79,-85,-92,-43,79,79,79,79,79,79,-49,-52,-47,-50,79,79,-53,-51,79,-41,]),'MOD':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,80,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,80,-28,-44,-35,-32,80,80,80,80,-48,80,-78,80,80,-84,-91,-46,-88,80,-85,-92,-43,80,80,80,80,80,80,-49,-52,-47,-50,80,80,-53,-51,80,-41,]),'POW':([6,7,8,16,17,19,20,21,22,23,24,29,30,31,32,33,35,40,41,42,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,116,117,119,120,123,126,128,129,130,131,134,138,139,143,144,146,149,152,155,163,164,169,181,184,186,187,189,190,194,196,202,204,206,211,216,219,220,221,],[-82,-80,-79,-54,81,-71,-72,-73,-74,-95,-76,-101,-17,-83,-18,-19,-78,-64,-81,-65,-75,-77,-55,-20,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-82,-62,-63,-61,-87,81,-28,-44,-35,-32,81,81,81,81,-48,81,-78,81,81,-84,-91,-46,-88,81,-85,-92,-43,81,81,81,81,81,81,-49,-52,-47,-50,81,81,-53,-51,81,-41,]),'EQUAL':([16,18,40,42,55,56,108,109,],[62,82,-66,-67,-124,-125,-62,-63,]),'RSPAREN':([19,20,21,22,23,29,35,41,43,44,46,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,111,114,115,116,117,119,120,123,128,129,130,131,144,146,147,148,149,152,155,163,164,168,169,176,178,181,182,186,187,189,190,194,196,202,204,205,206,208,213,215,216,219,220,221,],[-71,-72,-73,-74,-95,-101,-78,-81,-75,-77,114,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-62,-63,-61,146,-87,152,-89,-28,-44,-35,-32,-68,-69,-70,-48,-84,-91,164,-93,-46,-88,-116,-85,-92,-90,-43,-45,-94,-69,-117,194,196,202,204,-49,-52,-47,-50,-118,-39,216,219,221,-53,-51,-40,-41,]),'RPAREN':([19,20,21,22,23,29,35,41,43,44,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,106,108,109,110,114,117,119,120,123,128,129,130,131,143,144,146,149,152,163,164,169,194,196,202,204,206,216,219,220,221,],[-71,-72,-73,-74,-95,-101,-78,-81,-75,-77,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,144,-62,-63,-61,-87,-28,-44,-35,-32,-68,-69,-70,-48,162,-84,-91,-46,-88,-85,-92,-43,-49,-52,-47,-50,-39,-53,-51,-40,-41,]),'TO':([19,20,21,22,23,29,35,41,43,44,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,114,117,119,120,123,128,129,130,131,144,146,149,152,163,164,169,184,194,196,202,204,206,216,219,220,221,],[-71,-72,-73,-74,-95,-101,-78,-81,-75,-77,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-62,-63,-61,-87,-28,-44,-35,-32,-68,-69,-70,-48,-84,-91,-46,-88,-85,-92,-43,192,-49,-52,-47,-50,-39,-53,-51,-40,-41,]),'STEP':([19,20,21,22,23,29,35,41,43,44,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,114,117,119,120,123,128,129,130,131,144,146,149,152,163,164,169,194,196,202,204,206,216,219,220,221,],[-71,-72,-73,-74,-95,-101,-78,-81,-75,-77,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-62,-63,-61,-87,-28,-44,-35,-32,-68,-69,-70,-48,-84,-91,-46,-88,-85,-92,-43,-49,-52,-47,-50,214,-53,-51,-40,-41,]),'DO':([19,20,21,22,23,29,32,33,35,41,43,44,47,51,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,114,117,119,120,123,128,129,130,131,144,146,149,152,162,163,164,169,194,196,202,204,206,216,219,220,221,],[-71,-72,-73,-74,-95,-101,102,103,-78,-81,-75,-77,-55,122,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-62,-63,-61,-87,-28,-44,-35,-32,-68,-69,-70,-48,-84,-91,-46,-88,177,-85,-92,-43,-49,-52,-47,-50,-39,-53,-51,-40,-41,]),'COLON':([19,20,21,22,23,29,35,41,43,44,47,52,53,54,55,56,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,109,110,114,117,119,120,123,128,129,130,131,144,146,149,152,163,164,169,194,196,202,204,206,211,216,219,220,221,],[-71,-72,-73,-74,-95,-101,-78,-81,-75,-77,-55,-121,-122,-123,-124,-125,-97,-76,-79,-80,-82,-83,-64,-65,-17,-18,-19,-20,-54,-98,-99,-100,-62,-63,-61,-87,-28,-44,-35,-32,-68,-69,-70,-48,-84,-91,-46,-88,-85,-92,-43,-49,-52,-47,-50,-39,218,-53,-51,-40,-41,]),'THEN':([30,89,90,117,119,169,],[99,-64,-65,-28,-44,-43,]),'EXITWITH':([30,89,90,117,119,169,],[100,-64,-65,-28,-44,-43,]),'FOREACH':([31,163,],[101,-85,]),'FROM':([55,56,156,],[-124,-125,171,]),'CASE':([59,60,188,210,],[-9,-10,200,200,]),'DEFAULT':([59,60,188,210,],[-9,-10,201,201,]),'ELSE':([136,163,],[160,-85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,15,58,107,142,],[1,61,124,145,161,]),'empty':([0,15,58,107,142,188,210,],[2,2,2,2,2,198,198,]),'statement':([0,15,58,107,142,],[3,3,3,3,3,]),'controlstructure':([0,15,58,107,142,],[4,4,4,4,4,]),'assignment':([0,15,58,107,142,],[5,5,5,5,5,]),'binaryexp':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[6,6,87,87,87,87,106,87,6,87,87,87,87,87,87,87,6,87,6,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'nularexp':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[7,7,86,86,86,86,86,86,7,86,86,86,86,86,86,86,7,86,7,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'unaryexp':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[8,8,85,85,85,85,85,85,8,85,85,85,85,85,85,85,8,85,8,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'ifstatement':([0,15,58,107,142,],[9,9,9,9,9,]),'whileloop':([0,15,58,107,142,],[10,10,10,10,10,]),'forloop':([0,15,58,107,142,],[11,11,11,11,11,]),'withstatement':([0,15,58,107,142,],[12,12,12,12,12,]),'foreachloop':([0,15,58,107,142,],[13,13,13,13,13,]),'switchstatement':([0,15,58,107,142,],[14,14,14,14,14,]),'assignment_code':([0,15,58,107,142,],[15,15,15,15,15,]),'definition':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[16,16,95,95,95,95,95,95,16,95,95,95,95,95,95,95,16,95,16,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'primaryexp':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[17,17,83,96,97,98,17,116,17,126,128,129,130,134,139,143,17,155,17,116,181,184,186,187,189,190,155,206,155,211,155,220,]),'variable':([0,15,58,107,142,],[18,18,18,18,18,]),'getvariable_ns':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'getvariable_any':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'setvariable_ns':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'setvariable_any':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'identifier':([0,15,25,26,27,28,37,46,48,49,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,185,192,195,200,203,214,],[24,24,84,84,84,84,84,84,119,119,24,84,84,84,84,84,84,84,24,84,24,84,84,84,84,84,84,84,84,119,84,84,84,84,84,]),'vardefinition':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'iftype':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[30,30,91,91,91,91,91,91,30,91,91,91,91,91,91,91,30,91,30,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'bracedexp':([0,15,25,26,27,28,34,37,46,58,62,63,64,65,82,99,100,101,102,105,107,118,142,153,160,170,171,173,174,179,180,183,192,195,200,201,203,214,218,],[31,31,88,88,88,88,104,88,88,31,88,88,88,88,88,136,137,88,140,88,31,88,31,88,175,88,88,88,88,88,88,88,88,88,88,212,88,88,222,]),'whiletype':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[32,32,92,92,92,92,92,92,32,92,92,92,92,92,92,92,32,92,32,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'fortype':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[33,33,93,93,93,93,93,93,33,93,93,93,93,93,93,93,33,93,33,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'withstatementinit':([0,15,58,107,142,],[34,34,34,34,34,]),'array':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,138,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'string':([0,15,25,26,27,28,37,39,46,58,62,63,64,65,66,82,101,105,107,111,112,118,121,132,133,142,150,151,153,165,170,171,173,174,179,180,183,192,195,200,203,214,],[41,41,41,41,41,41,41,109,41,41,41,41,41,41,131,41,41,41,41,148,149,41,156,158,159,41,166,167,41,148,41,41,41,41,41,41,41,41,41,41,41,41,]),'number':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'helpertype':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'arraydefinition':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'withtype':([0,15,25,26,27,28,37,46,58,62,63,64,65,82,101,105,107,118,142,153,170,171,173,174,179,180,183,192,195,200,203,214,],[51,51,94,94,94,94,94,94,51,94,94,94,94,94,94,94,51,94,51,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'terminator':([3,199,],[58,210,]),'comparisonoperator':([17,83,96,97,98,116,126,128,129,130,134,139,143,155,181,184,186,187,189,190,206,211,220,],[64,64,64,64,64,64,64,64,64,64,64,64,64,170,170,64,64,64,64,64,64,64,64,]),'mathoperator':([17,83,96,97,98,116,126,128,129,130,134,139,143,155,181,184,186,187,189,190,206,211,220,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'new_scope':([38,50,127,135,183,],[107,121,107,107,107,]),'stringarray':([39,],[110,]),'arrayelement':([46,153,],[115,168,]),'forloop_condition':([48,49,185,],[117,120,193,]),'bracedexp_noscope':([103,157,207,],[141,172,215,]),'stringarrayelement':([111,165,],[147,178,]),'booleanexp':([118,170,183,195,203,],[154,182,191,208,213,]),'switchbody':([188,210,],[197,217,]),'case':([188,210,],[199,199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc.py',36),
  ('code -> statement','code',1,'p_code','sqf_yacc.py',37),
  ('code -> statement terminator code','code',3,'p_code','sqf_yacc.py',38),
  ('statement -> controlstructure','statement',1,'p_statement','sqf_yacc.py',45),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc.py',46),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc.py',47),
  ('statement -> nularexp','statement',1,'p_statement','sqf_yacc.py',48),
  ('statement -> unaryexp','statement',1,'p_statement','sqf_yacc.py',49),
  ('terminator -> SEMI_COLON','terminator',1,'p_terminator','sqf_yacc.py',56),
  ('terminator -> COMMA','terminator',1,'p_terminator','sqf_yacc.py',57),
  ('controlstructure -> ifstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',71),
  ('controlstructure -> whileloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',72),
  ('controlstructure -> forloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',73),
  ('controlstructure -> withstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',74),
  ('controlstructure -> foreachloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',75),
  ('controlstructure -> switchstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',76),
  ('helpertype -> iftype','helpertype',1,'p_helpertype','sqf_yacc.py',83),
  ('helpertype -> whiletype','helpertype',1,'p_helpertype','sqf_yacc.py',84),
  ('helpertype -> fortype','helpertype',1,'p_helpertype','sqf_yacc.py',85),
  ('helpertype -> withtype','helpertype',1,'p_helpertype','sqf_yacc.py',86),
  ('case -> CASE primaryexp COLON bracedexp','case',4,'p_case','sqf_yacc.py',93),
  ('case -> CASE primaryexp','case',2,'p_case','sqf_yacc.py',94),
  ('case -> DEFAULT bracedexp','case',2,'p_case','sqf_yacc.py',95),
  ('switchstatement -> SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE','switchstatement',8,'p_switchstatement','sqf_yacc.py',101),
  ('switchbody -> empty','switchbody',1,'p_switchbody','sqf_yacc.py',107),
  ('switchbody -> case','switchbody',1,'p_switchbody','sqf_yacc.py',108),
  ('switchbody -> case terminator switchbody','switchbody',3,'p_switchbody','sqf_yacc.py',109),
  ('iftype -> IF forloop_condition','iftype',2,'p_iftype','sqf_yacc.py',115),
  ('ifstatement -> iftype THEN bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',122),
  ('ifstatement -> iftype EXITWITH bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',123),
  ('ifstatement -> iftype THEN bracedexp ELSE bracedexp','ifstatement',5,'p_ifstatement','sqf_yacc.py',124),
  ('withtype -> WITH NAMESPACE','withtype',2,'p_withtype','sqf_yacc.py',131),
  ('withstatementinit -> withtype DO','withstatementinit',2,'p_withstatementinit','sqf_yacc.py',138),
  ('withstatement -> withstatementinit bracedexp','withstatement',2,'p_withstatement','sqf_yacc.py',148),
  ('whiletype -> WHILE forloop_condition','whiletype',2,'p_whiletype','sqf_yacc.py',155),
  ('whileloop -> whiletype DO bracedexp','whileloop',3,'p_whileloop','sqf_yacc.py',161),
  ('foreachloop -> bracedexp FOREACH array','foreachloop',3,'p_foreachloop','sqf_yacc.py',168),
  ('foreachloop -> bracedexp FOREACH primaryexp','foreachloop',3,'p_foreachloop','sqf_yacc.py',169),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp','fortype',7,'p_fortype','sqf_yacc.py',175),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp','fortype',9,'p_fortype','sqf_yacc.py',176),
  ('fortype -> FOR new_scope LSPAREN bracedexp_noscope COMMA forloop_condition COMMA bracedexp_noscope RSPAREN','fortype',9,'p_fortype','sqf_yacc.py',177),
  ('forloop -> fortype DO bracedexp_noscope','forloop',3,'p_forloop','sqf_yacc.py',199),
  ('forloop_condition -> LBRACE booleanexp RBRACE','forloop_condition',3,'p_bracedexp_condition','sqf_yacc.py',207),
  ('forloop_condition -> identifier','forloop_condition',1,'p_bracedexp_condition','sqf_yacc.py',208),
  ('bracedexp_noscope -> LBRACE code RBRACE','bracedexp_noscope',3,'p_bracedexp_noscope','sqf_yacc.py',218),
  ('getvariable_ns -> NAMESPACE GETVARIABLE string','getvariable_ns',3,'p_getvariable_ns','sqf_yacc.py',225),
  ('getvariable_ns -> NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_ns',7,'p_getvariable_ns','sqf_yacc.py',226),
  ('getvariable_any -> primaryexp GETVARIABLE string','getvariable_any',3,'p_getvariable_any','sqf_yacc.py',249),
  ('getvariable_any -> primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_any',7,'p_getvariable_any','sqf_yacc.py',250),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_ns',7,'p_setvariable_ns','sqf_yacc.py',258),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_ns',9,'p_setvariable_ns','sqf_yacc.py',259),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_any',7,'p_setvariable_any','sqf_yacc.py',266),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_any',9,'p_setvariable_any','sqf_yacc.py',267),
  ('vardefinition -> definition','vardefinition',1,'p_vardefinition','sqf_yacc.py',275),
  ('vardefinition -> arraydefinition','vardefinition',1,'p_vardefinition','sqf_yacc.py',276),
  ('assignment -> assignment_code code RBRACE','assignment',3,'p_assignment','sqf_yacc.py',282),
  ('assignment -> definition EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',283),
  ('assignment -> variable EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',284),
  ('assignment_code -> definition EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',301),
  ('assignment_code -> variable EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',302),
  ('arraydefinition -> PRIVATE stringarray','arraydefinition',2,'p_arraydefinition','sqf_yacc.py',311),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc.py',330),
  ('definition -> PRIVATE string','definition',2,'p_definition','sqf_yacc.py',331),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc.py',350),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc.py',351),
  ('variable -> PRIVATE_ID','variable',1,'p_variable','sqf_yacc.py',371),
  ('variable -> GLOBAL_ID','variable',1,'p_variable','sqf_yacc.py',372),
  ('binaryexp -> primaryexp BINARY_FNC primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',379),
  ('binaryexp -> primaryexp comparisonoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',380),
  ('binaryexp -> primaryexp mathoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',381),
  ('binaryexp -> getvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',382),
  ('binaryexp -> getvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',383),
  ('binaryexp -> setvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',384),
  ('binaryexp -> setvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',385),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc.py',391),
  ('primaryexp -> identifier','primaryexp',1,'p_primaryexp','sqf_yacc.py',392),
  ('primaryexp -> helpertype','primaryexp',1,'p_primaryexp','sqf_yacc.py',393),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc.py',394),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',395),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',396),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc.py',397),
  ('primaryexp -> binaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',398),
  ('primaryexp -> bracedexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',399),
  ('primaryexp -> LPAREN binaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc.py',400),
  ('bracedexp -> LBRACE new_scope code RBRACE','bracedexp',4,'p_bracedexp','sqf_yacc.py',410),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','sqf_yacc.py',417),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc.py',423),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc.py',424),
  ('arrayelement -> primaryexp','arrayelement',1,'p_arrayelement','sqf_yacc.py',434),
  ('arrayelement -> primaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc.py',435),
  ('stringarray -> LSPAREN RSPAREN','stringarray',2,'p_stringarray','sqf_yacc.py',448),
  ('stringarray -> LSPAREN stringarrayelement RSPAREN','stringarray',3,'p_stringarray','sqf_yacc.py',449),
  ('stringarrayelement -> string','stringarrayelement',1,'p_stringarrayelement','sqf_yacc.py',459),
  ('stringarrayelement -> string COMMA stringarrayelement','stringarrayelement',3,'p_stringarrayelement','sqf_yacc.py',460),
  ('nularexp -> NULAR_FNC','nularexp',1,'p_nularexp','sqf_yacc.py',474),
  ('nularexp -> identifier','nularexp',1,'p_nularexp','sqf_yacc.py',475),
  ('unaryexp -> UNARY_FNC primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',482),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',483),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',484),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',485),
  ('unaryexp -> vardefinition','unaryexp',1,'p_unaryexp','sqf_yacc.py',486),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',492),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',493),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',494),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',495),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',496),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',497),
  ('comparisonoperator -> AND','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',498),
  ('comparisonoperator -> OR','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',499),
  ('mathoperator -> PLUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',506),
  ('mathoperator -> MINUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',507),
  ('mathoperator -> TIMES','mathoperator',1,'p_mathoperator','sqf_yacc.py',508),
  ('mathoperator -> DIVIDE','mathoperator',1,'p_mathoperator','sqf_yacc.py',509),
  ('mathoperator -> MOD','mathoperator',1,'p_mathoperator','sqf_yacc.py',510),
  ('mathoperator -> POW','mathoperator',1,'p_mathoperator','sqf_yacc.py',511),
  ('booleanexp -> primaryexp','booleanexp',1,'p_booleanexp','sqf_yacc.py',518),
  ('booleanexp -> primaryexp comparisonoperator booleanexp','booleanexp',3,'p_booleanexp','sqf_yacc.py',519),
  ('booleanexp -> primaryexp comparisonoperator LBRACE booleanexp RBRACE','booleanexp',5,'p_booleanexp','sqf_yacc.py',520),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc.py',526),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc.py',527),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc.py',534),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc.py',535),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc.py',536),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc.py',543),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc.py',544),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc.py',551),
]
