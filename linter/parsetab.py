
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftELSEleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BINARY_FNC BOOL CASE COLON COMMA COMMENT_MULTI COMMENT_SINGLE DEFAULT DIVIDE DO ELSE EQUAL EQUALITY EXITWITH FOR FOREACH FROM GETVARIABLE GLOBAL_ID GT GTE IF INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NAMESPACE NEWLINE NOT NULAR_FNC NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PARAM PARAMS PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SEMI_COLON SETVARIABLE STEP STRING_DOUBLE STRING_SINGLE SWITCH THEN TIMES TO UNARY_FNC WHILE WITH\n    code    : empty\n            | statement\n            | statement terminator code\n    \n    statement   : controlstructure\n                | assignment\n                | binaryexp\n                | nularexp\n                | unaryexp\n    \n    terminator  : SEMI_COLON\n                | COMMA\n    \n    controlstructure    : ifstatement\n                        | whileloop\n                        | forloop\n                        | withstatement\n                        | foreachloop\n                        | switchstatement\n    \n    helpertype  : iftype\n                | whiletype\n                | fortype\n                | withtype\n    \n    case    : CASE primaryexp COLON bracedexp\n            | CASE primaryexp\n            | DEFAULT bracedexp\n    \n    switchstatement : SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE\n    \n    switchbody  : empty\n                | case\n                | case terminator switchbody\n    \n    iftype : IF forloop_condition\n    \n    ifstatement : iftype THEN bracedexp\n                | iftype EXITWITH bracedexp\n                | iftype THEN bracedexp ELSE bracedexp\n    \n    withtype : WITH NAMESPACE\n    \n    withstatementinit : withtype DO\n    \n    withstatement : withstatementinit bracedexp\n    \n    whiletype   : WHILE forloop_condition\n    \n    whileloop : whiletype DO bracedexp\n    \n    foreachloop : bracedexp FOREACH array\n                | bracedexp FOREACH primaryexp\n    \n    fortype : FOR new_scope string FROM primaryexp TO primaryexp\n            | FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp\n            | FOR new_scope LSPAREN bracedexp_noscope COMMA forloop_condition COMMA bracedexp_noscope RSPAREN\n    \n    forloop : fortype DO bracedexp_noscope\n    \n    forloop_condition   : LBRACE booleanexp RBRACE\n                        | identifier\n    \n     bracedexp_noscope : LBRACE code RBRACE\n    \n    getvariable_ns  : NAMESPACE GETVARIABLE string\n                    | NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    getvariable_any : primaryexp GETVARIABLE string\n                    | primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    setvariable_ns  : NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                    | NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    setvariable_any     : primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                        | primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    param_unaray    : PARAM LSPAREN number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    param_binary    : primaryexp PARAM LSPAREN number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    vardefinition   : definition\n                    | arraydefinition\n    \n    assignment  : assignment_code code RBRACE\n                | definition EQUAL primaryexp\n                | variable EQUAL primaryexp\n    \n    assignment_code : definition EQUAL LBRACE\n                    | variable EQUAL LBRACE\n    \n    arraydefinition : PRIVATE stringarray\n    \n    definition  : PRIVATE PRIVATE_ID\n                | PRIVATE string\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    variable    : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID %prec VARIABLE\n    \n    binaryexp   : primaryexp BINARY_FNC primaryexp          %prec BINARY_OP\n                | primaryexp comparisonoperator primaryexp  %prec BINARY_OP\n                | primaryexp mathoperator primaryexp        %prec BINARY_OP\n                | getvariable_ns                            %prec BINARY_OP\n                | getvariable_any                           %prec BINARY_OP\n                | setvariable_ns                            %prec BINARY_OP\n                | setvariable_any                           %prec BINARY_OP\n                | param_binary                              %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | identifier                %prec VALUE\n                | helpertype                %prec VALUE\n                | array                     %prec VALUE\n                | unaryexp                  %prec UNARY_OP\n                | nularexp                  %prec NULAR_OP\n                | string                    %prec VALUE\n                | binaryexp                 %prec BINARY_OP\n                | bracedexp                 %prec BRACED_EXP\n                | LPAREN binaryexp RPAREN   %prec BRACED_EXP\n    \n    bracedexp : LBRACE new_scope code RBRACE\n    new_scope :\n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : primaryexp\n                    | primaryexp COMMA arrayelement\n    \n    stringarray : LSPAREN RSPAREN\n                | LSPAREN stringarrayelement RSPAREN\n    \n    stringarrayelement  : string\n                        | string COMMA stringarrayelement\n    \n    nularexp    : NULAR_FNC     %prec NULAR_OP\n                | identifier    %prec NULAR_OP\n    \n    unaryexp    : UNARY_FNC primaryexp  %prec UNARY_OP\n                | PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | vardefinition         %prec UNARY_OP\n                | param_unaray           %prec UNARY_OP\n    \n    comparisonoperator  : LT            %prec COMPARISON_OP\n                        | GT            %prec COMPARISON_OP\n                        | LTE           %prec COMPARISON_OP\n                        | GTE           %prec COMPARISON_OP\n                        | EQUALITY      %prec COMPARISON_OP\n                        | INEQUALITY    %prec COMPARISON_OP\n                        | AND           %prec COMPARISON_OP\n                        | OR            %prec COMPARISON_OP\n    \n    mathoperator : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MOD\n                    | POW\n    \n    booleanexp  : primaryexp\n                | primaryexp comparisonoperator booleanexp\n                | primaryexp comparisonoperator LBRACE booleanexp RBRACE\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,30,31,37,42,43,44,45,46,50,55,56,57,58,59,61,62,63,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,112,113,114,118,122,124,125,128,129,130,131,133,134,135,136,140,142,143,144,145,146,147,150,152,155,158,171,172,177,179,185,187,188,206,210,212,214,220,222,225,229,235,238,240,243,246,247,251,252,253,254,],[-138,0,-1,-2,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-64,-81,-82,-83,-84,-85,-106,-107,-112,-113,-89,-74,-92,-75,-86,-88,-65,-133,-134,-135,-136,-137,-138,-9,-10,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-34,-72,-73,-71,-98,-28,-44,-35,-32,-3,-66,-67,-78,-79,-80,-48,-68,-29,-30,-37,-38,-36,-42,-95,-102,-46,-99,-96,-103,-54,-43,-59,-31,-45,-55,-49,-52,-60,-47,-50,-39,-24,-56,-53,-61,-51,-40,-41,-57,-58,-62,-63,]),'NULAR_FNC':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[24,24,24,24,24,24,24,-97,24,24,-9,-10,24,24,24,24,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,24,24,24,24,24,-69,-70,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'UNARY_FNC':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[26,26,26,26,26,26,26,-97,26,26,-9,-10,26,26,26,26,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,26,26,26,26,26,-69,-70,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'PLUS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,48,50,54,55,56,57,58,59,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,109,110,111,112,113,114,118,120,122,123,124,125,128,131,132,133,134,135,136,140,141,144,145,148,149,150,152,155,158,159,162,171,172,177,178,179,180,181,183,184,185,186,191,192,193,194,196,197,199,200,201,203,204,206,208,210,211,212,214,218,220,221,222,225,231,235,236,238,240,243,246,247,251,252,253,254,],[27,-93,-91,-90,27,-64,80,-81,-82,-83,-84,-85,-106,-87,27,27,27,27,-112,-113,-17,-94,-18,-19,-89,27,-97,-74,-92,-75,-86,-88,27,-65,-20,-133,-134,-135,-136,-137,27,-9,-10,27,27,27,27,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,27,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,27,27,-93,27,-72,-73,-71,-98,80,-28,27,-44,-35,-32,80,-69,80,80,80,-48,80,-70,-89,80,27,80,-95,-102,-46,-99,27,80,-96,-103,-54,27,-43,27,27,27,27,-59,27,27,27,80,80,27,80,80,80,80,80,80,-55,27,-49,27,-52,-60,27,-47,27,-50,80,80,-56,27,-53,-61,-51,80,-41,-57,-58,-62,-63,]),'MINUS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,48,50,54,55,56,57,58,59,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,109,110,111,112,113,114,118,120,122,123,124,125,128,131,132,133,134,135,136,140,141,144,145,148,149,150,152,155,158,159,162,171,172,177,178,179,180,181,183,184,185,186,191,192,193,194,196,197,199,200,201,203,204,206,208,210,211,212,214,218,220,221,222,225,231,235,236,238,240,243,246,247,251,252,253,254,],[28,-93,-91,-90,28,-64,81,-81,-82,-83,-84,-85,-106,-87,28,28,28,28,-112,-113,-17,-94,-18,-19,-89,28,-97,-74,-92,-75,-86,-88,28,-65,-20,-133,-134,-135,-136,-137,28,-9,-10,28,28,28,28,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,28,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,28,28,-93,28,-72,-73,-71,-98,81,-28,28,-44,-35,-32,81,-69,81,81,81,-48,81,-70,-89,81,28,81,-95,-102,-46,-99,28,81,-96,-103,-54,28,-43,28,28,28,28,-59,28,28,28,81,81,28,81,81,81,81,81,81,-55,28,-49,28,-52,-60,28,-47,28,-50,81,81,-56,28,-53,-61,-51,81,-41,-57,-58,-62,-63,]),'NOT':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[29,29,29,29,29,29,29,-97,29,29,-9,-10,29,29,29,29,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,29,29,29,29,29,-69,-70,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'SWITCH':([0,15,40,61,62,63,111,132,141,148,196,],[38,38,-97,38,-9,-10,38,-69,-70,38,-97,]),'PRIVATE':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[41,41,41,41,41,41,41,-97,41,41,-9,-10,41,41,41,41,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,41,41,41,41,41,-69,-70,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'PRIVATE_ID':([0,15,26,27,28,29,39,40,41,48,51,52,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,198,208,211,218,221,236,],[42,42,93,93,93,93,93,-97,112,93,93,93,42,-9,-10,93,93,93,93,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,93,93,93,42,93,-69,-70,42,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'GLOBAL_ID':([0,15,26,27,28,29,39,40,48,51,52,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,198,208,211,218,221,236,],[44,44,94,94,94,94,94,-97,94,94,94,44,-9,-10,94,94,94,94,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,94,94,94,44,94,-69,-70,44,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'LPAREN':([0,15,26,27,28,29,38,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[39,39,39,39,39,39,109,39,-97,39,39,-9,-10,39,39,39,39,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,39,39,39,39,39,-69,-70,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'NAMESPACE':([0,15,26,27,28,29,39,40,48,60,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[47,47,47,47,47,47,47,-97,47,128,47,-9,-10,47,47,47,47,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,47,47,47,47,47,-69,-70,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'PARAM':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,37,39,40,42,43,44,45,46,48,50,54,55,56,57,58,59,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,105,109,110,111,112,113,114,118,120,122,123,124,125,128,131,132,133,134,135,136,140,141,144,145,148,149,150,152,155,158,159,162,171,172,177,178,179,180,181,183,184,185,186,191,192,193,194,196,197,199,200,201,203,204,206,208,210,211,212,214,218,220,221,222,225,231,235,236,238,240,243,246,247,251,252,253,254,],[49,-93,-91,-90,49,-64,71,-81,-82,-83,-84,-85,-106,-87,49,49,49,49,-112,-113,-17,-94,-18,-19,-89,49,-97,-74,-92,-75,-86,-88,49,-65,-20,-133,-134,-135,-136,-137,49,-9,-10,49,49,49,49,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,49,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,49,49,-93,49,-72,-73,-71,-98,71,-28,49,-44,-35,-32,71,-69,-78,-79,-80,-48,71,-70,-89,71,49,71,-95,-102,-46,-99,49,71,-96,-103,-54,49,-43,49,49,49,49,-59,49,49,49,71,-79,49,71,71,71,71,71,71,-55,49,-49,49,-52,-60,49,-47,49,-50,71,71,-56,49,-53,-61,-51,71,-41,-57,-58,-62,-63,]),'IF':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[51,51,51,51,51,51,51,-97,51,51,-9,-10,51,51,51,51,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,51,51,51,51,51,-69,-70,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'WHILE':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[52,52,52,52,52,52,52,-97,52,52,-9,-10,52,52,52,52,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,52,52,52,52,52,-69,-70,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FOR':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[53,53,53,53,53,53,53,-97,53,53,-9,-10,53,53,53,53,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,53,53,53,53,53,-69,-70,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LBRACE':([0,15,26,27,28,29,36,39,40,48,51,52,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,103,104,105,106,107,109,111,123,127,132,141,148,159,164,168,178,180,181,183,184,186,189,191,192,196,198,208,211,218,219,221,226,236,242,],[40,40,40,40,40,40,40,40,-97,40,123,123,40,-9,-10,132,40,40,40,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,141,40,40,40,40,148,40,40,40,-33,-69,-70,40,40,148,40,40,196,40,40,40,40,202,40,40,40,123,40,40,40,40,40,148,40,40,]),'NUMBER_REAL':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,121,123,132,139,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,234,236,239,],[55,55,55,55,55,55,55,-97,55,55,-9,-10,55,55,55,55,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,55,55,55,55,55,55,-69,55,-70,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NUMBER_EXP':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,121,123,132,139,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,234,236,239,],[56,56,56,56,56,56,56,-97,56,56,-9,-10,56,56,56,56,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,56,56,56,56,56,56,-69,56,-70,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'NUMBER_HEX':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,121,123,132,139,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,234,236,239,],[57,57,57,57,57,57,57,-97,57,57,-9,-10,57,57,57,57,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,57,57,57,57,57,57,-69,57,-70,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'LSPAREN':([0,15,26,27,28,29,39,40,41,48,49,53,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,116,117,123,126,132,141,148,159,178,180,181,183,184,186,191,192,196,205,208,211,213,218,221,234,236,239,],[48,48,48,48,48,48,48,-97,115,48,121,-97,48,-9,-10,48,48,48,48,137,138,139,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,48,48,48,48,156,157,48,164,-69,-70,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'STRING_SINGLE':([0,15,26,27,28,29,39,40,41,48,53,61,62,63,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,115,116,123,126,132,137,138,141,148,156,157,159,173,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[58,58,58,58,58,58,58,-97,58,58,-97,58,-9,-10,58,58,58,58,58,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,58,58,58,58,58,58,58,58,-69,58,58,-70,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'STRING_DOUBLE':([0,15,26,27,28,29,39,40,41,48,53,61,62,63,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,115,116,123,126,132,137,138,141,148,156,157,159,173,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[59,59,59,59,59,59,59,-97,59,59,-97,59,-9,-10,59,59,59,59,59,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,59,59,59,59,59,59,59,59,-69,59,59,-70,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'WITH':([0,15,26,27,28,29,39,40,48,61,62,63,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,105,109,111,123,132,141,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[60,60,60,60,60,60,60,-97,60,60,-9,-10,60,60,60,60,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,60,60,60,60,60,-69,-70,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,30,31,37,40,42,43,44,45,46,50,55,56,57,58,59,61,62,63,64,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,111,112,113,114,118,122,124,125,128,129,130,131,132,133,134,135,136,140,141,142,143,144,145,146,147,148,150,151,152,155,158,161,162,169,171,172,177,179,185,187,188,194,195,196,202,206,207,210,212,214,215,216,217,220,222,224,225,229,230,231,232,235,238,240,241,243,246,247,250,251,252,253,254,],[-1,-2,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-138,-64,-81,-82,-83,-84,-85,-106,-107,-112,-113,-89,-97,-74,-92,-75,-86,-88,-65,-133,-134,-135,-136,-137,-138,-9,-10,130,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-34,-138,-72,-73,-71,-98,-28,-44,-35,-32,-3,-66,-67,-69,-78,-79,-80,-48,-68,-70,-29,-30,-37,-38,-36,-42,-138,-95,171,-102,-46,-99,179,-128,188,-96,-103,-54,-43,-59,-31,-45,-79,-129,-97,-138,-55,224,-49,-52,-60,229,-25,-26,-47,-50,-130,-39,-24,-138,-22,-23,-56,-53,-61,-27,-51,-40,-41,-21,-57,-58,-62,-63,]),'SEMI_COLON':([3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,30,31,37,42,43,44,45,46,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,112,113,114,118,122,124,125,128,130,131,133,134,135,136,140,142,143,144,145,146,147,150,152,155,158,171,172,177,179,185,187,188,206,210,212,214,217,220,222,225,229,231,232,235,238,240,243,246,247,250,251,252,253,254,],[62,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-64,-81,-82,-83,-84,-85,-106,-107,-112,-113,-89,-74,-92,-75,-86,-88,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-34,-72,-73,-71,-98,-28,-44,-35,-32,-66,-67,-78,-79,-80,-48,-68,-29,-30,-37,-38,-36,-42,-95,-102,-46,-99,-96,-103,-54,-43,-59,-31,-45,-55,-49,-52,-60,62,-47,-50,-39,-24,-22,-23,-56,-53,-61,-51,-40,-41,-21,-57,-58,-62,-63,]),'COMMA':([3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,30,31,37,42,43,44,45,46,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,108,112,113,114,118,120,122,124,125,128,130,131,133,134,135,136,140,142,143,144,145,146,147,150,152,154,155,158,160,165,166,167,171,172,174,175,177,179,182,185,187,188,193,200,201,204,206,209,210,212,214,217,220,222,223,225,228,229,231,232,235,238,240,243,246,247,250,251,252,253,254,],[63,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-64,-81,-82,-83,-84,-85,-106,-107,-112,-113,-89,-74,-92,-75,-86,-88,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-34,-72,-73,-71,-98,159,-28,-44,-35,-32,-66,-67,-78,-79,-80,-48,-68,-29,-30,-37,-38,-36,-42,-95,-102,173,-46,-99,178,183,184,186,-96,-103,191,192,-54,-43,198,-59,-31,-45,205,211,213,221,-55,226,-49,-52,-60,63,-47,-50,234,-39,239,-24,-22,-23,-56,-53,-61,-51,-40,-41,-21,-57,-58,-62,-63,]),'BINARY_FNC':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,66,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,66,-28,-44,-35,-32,66,-78,-79,-80,-48,66,-89,66,66,-95,-102,-46,-99,66,-96,-103,-54,-43,-59,66,-79,66,66,66,66,66,66,-55,-49,-52,-60,-47,-50,66,66,-56,-53,-61,-51,66,-41,-57,-58,-62,-63,]),'GETVARIABLE':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,47,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,69,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,116,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,69,-28,-44,-35,-32,69,-78,-79,-80,-48,69,-89,69,69,-95,-102,-46,-99,69,-96,-103,-54,-43,-59,69,-79,69,69,69,69,69,69,-55,-49,-52,-60,-47,-50,69,69,-56,-53,-61,-51,69,-41,-57,-58,-62,-63,]),'SETVARIABLE':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,47,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,70,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,117,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,70,-28,-44,-35,-32,70,-78,-79,-80,-48,70,-89,70,70,-95,-102,-46,-99,70,-96,-103,-54,-43,-59,70,-79,70,70,70,70,70,70,-55,-49,-52,-60,-47,-50,70,70,-56,-53,-61,-51,70,-41,-57,-58,-62,-63,]),'LT':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,72,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,72,-28,-44,-35,-32,72,-78,-79,-80,-48,72,-89,72,72,-95,-102,-46,-99,72,-96,-103,-54,-43,-59,72,-79,72,72,72,72,72,72,-55,-49,-52,-60,-47,-50,72,72,-56,-53,-61,-51,72,-41,-57,-58,-62,-63,]),'GT':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,73,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,73,-28,-44,-35,-32,73,-78,-79,-80,-48,73,-89,73,73,-95,-102,-46,-99,73,-96,-103,-54,-43,-59,73,-79,73,73,73,73,73,73,-55,-49,-52,-60,-47,-50,73,73,-56,-53,-61,-51,73,-41,-57,-58,-62,-63,]),'LTE':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,74,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,74,-28,-44,-35,-32,74,-78,-79,-80,-48,74,-89,74,74,-95,-102,-46,-99,74,-96,-103,-54,-43,-59,74,-79,74,74,74,74,74,74,-55,-49,-52,-60,-47,-50,74,74,-56,-53,-61,-51,74,-41,-57,-58,-62,-63,]),'GTE':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,75,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,75,-28,-44,-35,-32,75,-78,-79,-80,-48,75,-89,75,75,-95,-102,-46,-99,75,-96,-103,-54,-43,-59,75,-79,75,75,75,75,75,75,-55,-49,-52,-60,-47,-50,75,75,-56,-53,-61,-51,75,-41,-57,-58,-62,-63,]),'EQUALITY':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,76,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,76,-28,-44,-35,-32,76,-78,-79,-80,-48,76,-89,76,76,-95,-102,-46,-99,76,-96,-103,-54,-43,-59,76,-79,76,76,76,76,76,76,-55,-49,-52,-60,-47,-50,76,76,-56,-53,-61,-51,76,-41,-57,-58,-62,-63,]),'INEQUALITY':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,77,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,77,-28,-44,-35,-32,77,-78,-79,-80,-48,77,-89,77,77,-95,-102,-46,-99,77,-96,-103,-54,-43,-59,77,-79,77,77,77,77,77,77,-55,-49,-52,-60,-47,-50,77,77,-56,-53,-61,-51,77,-41,-57,-58,-62,-63,]),'AND':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,78,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,78,-28,-44,-35,-32,78,-78,-79,-80,-48,78,-89,78,78,-95,-102,-46,-99,78,-96,-103,-54,-43,-59,78,-79,78,78,78,78,78,78,-55,-49,-52,-60,-47,-50,78,78,-56,-53,-61,-51,78,-41,-57,-58,-62,-63,]),'OR':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,79,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,79,-28,-44,-35,-32,79,-78,-79,-80,-48,79,-89,79,79,-95,-102,-46,-99,79,-96,-103,-54,-43,-59,79,-79,79,79,79,79,79,79,-55,-49,-52,-60,-47,-50,79,79,-56,-53,-61,-51,79,-41,-57,-58,-62,-63,]),'TIMES':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,82,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,82,-28,-44,-35,-32,82,82,82,82,-48,82,-89,82,82,-95,-102,-46,-99,82,-96,-103,-54,-43,-59,82,82,82,82,82,82,82,82,-55,-49,-52,-60,-47,-50,82,82,-56,-53,-61,-51,82,-41,-57,-58,-62,-63,]),'DIVIDE':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,83,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,83,-28,-44,-35,-32,83,83,83,83,-48,83,-89,83,83,-95,-102,-46,-99,83,-96,-103,-54,-43,-59,83,83,83,83,83,83,83,83,-55,-49,-52,-60,-47,-50,83,83,-56,-53,-61,-51,83,-41,-57,-58,-62,-63,]),'MOD':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,84,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,84,-28,-44,-35,-32,84,84,84,84,-48,84,-89,84,84,-95,-102,-46,-99,84,-96,-103,-54,-43,-59,84,84,84,84,84,84,84,84,-55,-49,-52,-60,-47,-50,84,84,-56,-53,-61,-51,84,-41,-57,-58,-62,-63,]),'POW':([6,7,8,16,17,19,20,21,22,23,24,25,30,31,32,33,34,35,37,42,43,44,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,120,122,124,125,128,131,133,134,135,136,140,144,145,149,150,152,155,158,162,171,172,177,179,185,193,194,197,199,200,201,203,204,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-93,-91,-90,-64,85,-81,-82,-83,-84,-85,-106,-87,-112,-113,-17,-94,-18,-19,-89,-74,-92,-75,-86,-88,-65,-20,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-93,-72,-73,-71,-98,85,-28,-44,-35,-32,85,85,85,85,-48,85,-89,85,85,-95,-102,-46,-99,85,-96,-103,-54,-43,-59,85,85,85,85,85,85,85,85,-55,-49,-52,-60,-47,-50,85,85,-56,-53,-61,-51,85,-41,-57,-58,-62,-63,]),'EQUAL':([16,18,42,44,58,59,112,113,],[65,86,-76,-77,-136,-137,-72,-73,]),'RSPAREN':([19,20,21,22,23,24,30,31,37,43,45,46,48,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,113,114,115,118,119,120,122,124,125,128,133,134,135,136,150,152,153,154,155,158,160,162,167,171,172,176,177,179,185,188,190,193,194,195,199,200,201,203,204,206,210,212,214,220,222,223,224,225,227,228,233,235,237,238,240,243,244,245,246,247,248,249,251,252,253,254,],[-81,-82,-83,-84,-85,-106,-112,-113,-89,-92,-86,-88,118,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-72,-73,-71,152,-98,158,-100,-28,-44,-35,-32,-78,-79,-80,-48,-95,-102,172,-104,-46,-99,177,-128,185,-96,-103,-101,-54,-43,-59,-45,-105,206,-79,-129,210,212,214,220,222,-55,-49,-52,-60,-47,-50,235,-130,-39,238,240,243,-56,247,-53,-61,-51,251,252,-40,-41,253,254,-57,-58,-62,-63,]),'RPAREN':([19,20,21,22,23,24,30,31,37,43,45,46,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,110,112,113,114,118,122,124,125,128,133,134,135,136,149,150,152,155,158,171,172,177,179,185,206,210,212,214,220,222,225,235,238,240,243,246,247,251,252,253,254,],[-81,-82,-83,-84,-85,-106,-112,-113,-89,-92,-86,-88,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,150,-72,-73,-71,-98,-28,-44,-35,-32,-78,-79,-80,-48,170,-95,-102,-46,-99,-96,-103,-54,-43,-59,-55,-49,-52,-60,-47,-50,-39,-56,-53,-61,-51,-40,-41,-57,-58,-62,-63,]),'TO':([19,20,21,22,23,24,30,31,37,43,45,46,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,113,114,118,122,124,125,128,133,134,135,136,150,152,155,158,171,172,177,179,185,197,206,210,212,214,220,222,225,235,238,240,243,246,247,251,252,253,254,],[-81,-82,-83,-84,-85,-106,-112,-113,-89,-92,-86,-88,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-72,-73,-71,-98,-28,-44,-35,-32,-78,-79,-80,-48,-95,-102,-46,-99,-96,-103,-54,-43,-59,208,-55,-49,-52,-60,-47,-50,-39,-56,-53,-61,-51,-40,-41,-57,-58,-62,-63,]),'STEP':([19,20,21,22,23,24,30,31,37,43,45,46,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,113,114,118,122,124,125,128,133,134,135,136,150,152,155,158,171,172,177,179,185,206,210,212,214,220,222,225,235,238,240,243,246,247,251,252,253,254,],[-81,-82,-83,-84,-85,-106,-112,-113,-89,-92,-86,-88,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-72,-73,-71,-98,-28,-44,-35,-32,-78,-79,-80,-48,-95,-102,-46,-99,-96,-103,-54,-43,-59,-55,-49,-52,-60,-47,-50,236,-56,-53,-61,-51,-40,-41,-57,-58,-62,-63,]),'DO':([19,20,21,22,23,24,30,31,34,35,37,43,45,46,50,54,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,113,114,118,122,124,125,128,133,134,135,136,150,152,155,158,170,171,172,177,179,185,206,210,212,214,220,222,225,235,238,240,243,246,247,251,252,253,254,],[-81,-82,-83,-84,-85,-106,-112,-113,106,107,-89,-92,-86,-88,-65,127,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-72,-73,-71,-98,-28,-44,-35,-32,-78,-79,-80,-48,-95,-102,-46,-99,189,-96,-103,-54,-43,-59,-55,-49,-52,-60,-47,-50,-39,-56,-53,-61,-51,-40,-41,-57,-58,-62,-63,]),'COLON':([19,20,21,22,23,24,30,31,37,43,45,46,50,55,56,57,58,59,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,113,114,118,122,124,125,128,133,134,135,136,150,152,155,158,171,172,177,179,185,206,210,212,214,220,222,225,231,235,238,240,243,246,247,251,252,253,254,],[-81,-82,-83,-84,-85,-106,-112,-113,-89,-92,-86,-88,-65,-133,-134,-135,-136,-137,-108,-87,-90,-91,-93,-94,-74,-75,-17,-18,-19,-20,-64,-109,-110,-111,-72,-73,-71,-98,-28,-44,-35,-32,-78,-79,-80,-48,-95,-102,-46,-99,-96,-103,-54,-43,-59,-55,-49,-52,-60,-47,-50,-39,242,-56,-53,-61,-51,-40,-41,-57,-58,-62,-63,]),'THEN':([32,93,94,122,124,179,],[103,-74,-75,-28,-44,-43,]),'EXITWITH':([32,93,94,122,124,179,],[104,-74,-75,-28,-44,-43,]),'FOREACH':([33,171,],[105,-96,]),'FROM':([58,59,163,],[-136,-137,181,]),'CASE':([62,63,202,230,],[-9,-10,218,218,]),'DEFAULT':([62,63,202,230,],[-9,-10,219,219,]),'ELSE':([142,171,],[168,-96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,15,61,111,148,],[1,64,129,151,169,]),'empty':([0,15,61,111,148,202,230,],[2,2,2,2,2,216,216,]),'statement':([0,15,61,111,148,],[3,3,3,3,3,]),'controlstructure':([0,15,61,111,148,],[4,4,4,4,4,]),'assignment':([0,15,61,111,148,],[5,5,5,5,5,]),'binaryexp':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[6,6,91,91,91,91,110,91,6,91,91,91,91,91,91,91,6,91,6,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'nularexp':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[7,7,90,90,90,90,90,90,7,90,90,90,90,90,90,90,7,90,7,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'unaryexp':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[8,8,89,89,89,89,89,89,8,89,89,89,89,89,89,89,8,89,8,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'ifstatement':([0,15,61,111,148,],[9,9,9,9,9,]),'whileloop':([0,15,61,111,148,],[10,10,10,10,10,]),'forloop':([0,15,61,111,148,],[11,11,11,11,11,]),'withstatement':([0,15,61,111,148,],[12,12,12,12,12,]),'foreachloop':([0,15,61,111,148,],[13,13,13,13,13,]),'switchstatement':([0,15,61,111,148,],[14,14,14,14,14,]),'assignment_code':([0,15,61,111,148,],[15,15,15,15,15,]),'definition':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[16,16,99,99,99,99,99,99,16,99,99,99,99,99,99,99,16,99,16,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'primaryexp':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[17,17,87,100,101,102,17,120,17,131,133,134,135,140,145,149,17,162,17,120,193,194,197,199,200,201,203,204,162,225,162,231,162,246,]),'variable':([0,15,61,111,148,],[18,18,18,18,18,]),'getvariable_ns':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'getvariable_any':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'setvariable_ns':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'setvariable_any':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'param_binary':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'identifier':([0,15,26,27,28,29,39,48,51,52,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,198,208,211,218,221,236,],[25,25,88,88,88,88,88,88,124,124,25,88,88,88,88,88,88,88,25,88,25,88,88,88,88,88,88,88,88,88,88,124,88,88,88,88,88,]),'vardefinition':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'param_unaray':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'iftype':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[32,32,95,95,95,95,95,95,32,95,95,95,95,95,95,95,32,95,32,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'bracedexp':([0,15,26,27,28,29,36,39,48,61,65,66,67,68,86,103,104,105,106,109,111,123,148,159,168,178,180,181,183,184,186,191,192,196,208,211,218,219,221,236,242,],[33,33,92,92,92,92,108,92,92,33,92,92,92,92,92,142,143,92,146,92,33,92,33,92,187,92,92,92,92,92,92,92,92,92,92,92,92,232,92,92,250,]),'whiletype':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[34,34,96,96,96,96,96,96,34,96,96,96,96,96,96,96,34,96,34,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'fortype':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[35,35,97,97,97,97,97,97,35,97,97,97,97,97,97,97,35,97,35,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'withstatementinit':([0,15,61,111,148,],[36,36,36,36,36,]),'array':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,205,208,211,213,218,221,234,236,239,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,144,37,37,37,37,37,37,37,37,37,37,37,37,37,37,223,37,37,228,37,37,245,37,249,]),'string':([0,15,26,27,28,29,39,41,48,61,65,66,67,68,69,86,105,109,111,115,116,123,126,137,138,148,156,157,159,173,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[43,43,43,43,43,43,43,113,43,43,43,43,43,43,136,43,43,43,43,154,155,43,163,165,166,43,174,175,43,154,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'number':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,121,123,139,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,234,236,239,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,160,45,167,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,244,45,248,]),'helpertype':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'arraydefinition':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'withtype':([0,15,26,27,28,29,39,48,61,65,66,67,68,86,105,109,111,123,148,159,178,180,181,183,184,186,191,192,196,208,211,218,221,236,],[54,54,98,98,98,98,98,98,54,98,98,98,98,98,98,98,54,98,54,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'terminator':([3,217,],[61,230,]),'comparisonoperator':([17,87,100,101,102,120,131,133,134,135,140,145,149,162,193,194,197,199,200,201,203,204,225,231,246,],[67,67,67,67,67,67,67,67,67,67,67,67,67,180,67,180,67,67,67,67,67,67,67,67,67,]),'mathoperator':([17,87,100,101,102,120,131,133,134,135,140,145,149,162,193,194,197,199,200,201,203,204,225,231,246,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'new_scope':([40,53,132,141,196,],[111,126,111,111,111,]),'stringarray':([41,],[114,]),'arrayelement':([48,159,],[119,176,]),'forloop_condition':([51,52,198,],[122,125,209,]),'bracedexp_noscope':([107,164,226,],[147,182,237,]),'stringarrayelement':([115,173,],[153,190,]),'booleanexp':([123,180,196,211,221,],[161,195,207,227,233,]),'switchbody':([202,230,],[215,241,]),'case':([202,230,],[217,217,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc.py',36),
  ('code -> statement','code',1,'p_code','sqf_yacc.py',37),
  ('code -> statement terminator code','code',3,'p_code','sqf_yacc.py',38),
  ('statement -> controlstructure','statement',1,'p_statement','sqf_yacc.py',45),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc.py',46),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc.py',47),
  ('statement -> nularexp','statement',1,'p_statement','sqf_yacc.py',48),
  ('statement -> unaryexp','statement',1,'p_statement','sqf_yacc.py',49),
  ('terminator -> SEMI_COLON','terminator',1,'p_terminator','sqf_yacc.py',56),
  ('terminator -> COMMA','terminator',1,'p_terminator','sqf_yacc.py',57),
  ('controlstructure -> ifstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',71),
  ('controlstructure -> whileloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',72),
  ('controlstructure -> forloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',73),
  ('controlstructure -> withstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',74),
  ('controlstructure -> foreachloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',75),
  ('controlstructure -> switchstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',76),
  ('helpertype -> iftype','helpertype',1,'p_helpertype','sqf_yacc.py',83),
  ('helpertype -> whiletype','helpertype',1,'p_helpertype','sqf_yacc.py',84),
  ('helpertype -> fortype','helpertype',1,'p_helpertype','sqf_yacc.py',85),
  ('helpertype -> withtype','helpertype',1,'p_helpertype','sqf_yacc.py',86),
  ('case -> CASE primaryexp COLON bracedexp','case',4,'p_case','sqf_yacc.py',93),
  ('case -> CASE primaryexp','case',2,'p_case','sqf_yacc.py',94),
  ('case -> DEFAULT bracedexp','case',2,'p_case','sqf_yacc.py',95),
  ('switchstatement -> SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE','switchstatement',8,'p_switchstatement','sqf_yacc.py',101),
  ('switchbody -> empty','switchbody',1,'p_switchbody','sqf_yacc.py',107),
  ('switchbody -> case','switchbody',1,'p_switchbody','sqf_yacc.py',108),
  ('switchbody -> case terminator switchbody','switchbody',3,'p_switchbody','sqf_yacc.py',109),
  ('iftype -> IF forloop_condition','iftype',2,'p_iftype','sqf_yacc.py',115),
  ('ifstatement -> iftype THEN bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',122),
  ('ifstatement -> iftype EXITWITH bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',123),
  ('ifstatement -> iftype THEN bracedexp ELSE bracedexp','ifstatement',5,'p_ifstatement','sqf_yacc.py',124),
  ('withtype -> WITH NAMESPACE','withtype',2,'p_withtype','sqf_yacc.py',131),
  ('withstatementinit -> withtype DO','withstatementinit',2,'p_withstatementinit','sqf_yacc.py',138),
  ('withstatement -> withstatementinit bracedexp','withstatement',2,'p_withstatement','sqf_yacc.py',148),
  ('whiletype -> WHILE forloop_condition','whiletype',2,'p_whiletype','sqf_yacc.py',155),
  ('whileloop -> whiletype DO bracedexp','whileloop',3,'p_whileloop','sqf_yacc.py',161),
  ('foreachloop -> bracedexp FOREACH array','foreachloop',3,'p_foreachloop','sqf_yacc.py',168),
  ('foreachloop -> bracedexp FOREACH primaryexp','foreachloop',3,'p_foreachloop','sqf_yacc.py',169),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp','fortype',7,'p_fortype','sqf_yacc.py',175),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp','fortype',9,'p_fortype','sqf_yacc.py',176),
  ('fortype -> FOR new_scope LSPAREN bracedexp_noscope COMMA forloop_condition COMMA bracedexp_noscope RSPAREN','fortype',9,'p_fortype','sqf_yacc.py',177),
  ('forloop -> fortype DO bracedexp_noscope','forloop',3,'p_forloop','sqf_yacc.py',199),
  ('forloop_condition -> LBRACE booleanexp RBRACE','forloop_condition',3,'p_bracedexp_condition','sqf_yacc.py',207),
  ('forloop_condition -> identifier','forloop_condition',1,'p_bracedexp_condition','sqf_yacc.py',208),
  ('bracedexp_noscope -> LBRACE code RBRACE','bracedexp_noscope',3,'p_bracedexp_noscope','sqf_yacc.py',218),
  ('getvariable_ns -> NAMESPACE GETVARIABLE string','getvariable_ns',3,'p_getvariable_ns','sqf_yacc.py',225),
  ('getvariable_ns -> NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_ns',7,'p_getvariable_ns','sqf_yacc.py',226),
  ('getvariable_any -> primaryexp GETVARIABLE string','getvariable_any',3,'p_getvariable_any','sqf_yacc.py',249),
  ('getvariable_any -> primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_any',7,'p_getvariable_any','sqf_yacc.py',250),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_ns',7,'p_setvariable_ns','sqf_yacc.py',258),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_ns',9,'p_setvariable_ns','sqf_yacc.py',259),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_any',7,'p_setvariable_any','sqf_yacc.py',268),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_any',9,'p_setvariable_any','sqf_yacc.py',269),
  ('param_unaray -> PARAM LSPAREN number RSPAREN','param_unaray',4,'p_param_unary','sqf_yacc.py',277),
  ('param_unaray -> PARAM LSPAREN number COMMA primaryexp RSPAREN','param_unaray',6,'p_param_unary','sqf_yacc.py',278),
  ('param_unaray -> PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_unaray',8,'p_param_unary','sqf_yacc.py',279),
  ('param_unaray -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_unaray',10,'p_param_unary','sqf_yacc.py',280),
  ('param_unaray -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_unaray',10,'p_param_unary','sqf_yacc.py',281),
  ('param_binary -> primaryexp PARAM LSPAREN number RSPAREN','param_binary',5,'p_param_binary','sqf_yacc.py',291),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN','param_binary',7,'p_param_binary','sqf_yacc.py',292),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_binary',9,'p_param_binary','sqf_yacc.py',293),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',294),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',295),
  ('vardefinition -> definition','vardefinition',1,'p_vardefinition','sqf_yacc.py',306),
  ('vardefinition -> arraydefinition','vardefinition',1,'p_vardefinition','sqf_yacc.py',307),
  ('assignment -> assignment_code code RBRACE','assignment',3,'p_assignment','sqf_yacc.py',313),
  ('assignment -> definition EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',314),
  ('assignment -> variable EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',315),
  ('assignment_code -> definition EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',332),
  ('assignment_code -> variable EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',333),
  ('arraydefinition -> PRIVATE stringarray','arraydefinition',2,'p_arraydefinition','sqf_yacc.py',342),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc.py',361),
  ('definition -> PRIVATE string','definition',2,'p_definition','sqf_yacc.py',362),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc.py',381),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc.py',382),
  ('variable -> PRIVATE_ID','variable',1,'p_variable','sqf_yacc.py',402),
  ('variable -> GLOBAL_ID','variable',1,'p_variable','sqf_yacc.py',403),
  ('binaryexp -> primaryexp BINARY_FNC primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',410),
  ('binaryexp -> primaryexp comparisonoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',411),
  ('binaryexp -> primaryexp mathoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',412),
  ('binaryexp -> getvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',413),
  ('binaryexp -> getvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',414),
  ('binaryexp -> setvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',415),
  ('binaryexp -> setvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',416),
  ('binaryexp -> param_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',417),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc.py',423),
  ('primaryexp -> identifier','primaryexp',1,'p_primaryexp','sqf_yacc.py',424),
  ('primaryexp -> helpertype','primaryexp',1,'p_primaryexp','sqf_yacc.py',425),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc.py',426),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',427),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',428),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc.py',429),
  ('primaryexp -> binaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',430),
  ('primaryexp -> bracedexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',431),
  ('primaryexp -> LPAREN binaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc.py',432),
  ('bracedexp -> LBRACE new_scope code RBRACE','bracedexp',4,'p_bracedexp','sqf_yacc.py',442),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','sqf_yacc.py',449),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc.py',455),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc.py',456),
  ('arrayelement -> primaryexp','arrayelement',1,'p_arrayelement','sqf_yacc.py',466),
  ('arrayelement -> primaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc.py',467),
  ('stringarray -> LSPAREN RSPAREN','stringarray',2,'p_stringarray','sqf_yacc.py',480),
  ('stringarray -> LSPAREN stringarrayelement RSPAREN','stringarray',3,'p_stringarray','sqf_yacc.py',481),
  ('stringarrayelement -> string','stringarrayelement',1,'p_stringarrayelement','sqf_yacc.py',491),
  ('stringarrayelement -> string COMMA stringarrayelement','stringarrayelement',3,'p_stringarrayelement','sqf_yacc.py',492),
  ('nularexp -> NULAR_FNC','nularexp',1,'p_nularexp','sqf_yacc.py',506),
  ('nularexp -> identifier','nularexp',1,'p_nularexp','sqf_yacc.py',507),
  ('unaryexp -> UNARY_FNC primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',514),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',515),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',516),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',517),
  ('unaryexp -> vardefinition','unaryexp',1,'p_unaryexp','sqf_yacc.py',518),
  ('unaryexp -> param_unaray','unaryexp',1,'p_unaryexp','sqf_yacc.py',519),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',525),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',526),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',527),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',528),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',529),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',530),
  ('comparisonoperator -> AND','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',531),
  ('comparisonoperator -> OR','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',532),
  ('mathoperator -> PLUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',539),
  ('mathoperator -> MINUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',540),
  ('mathoperator -> TIMES','mathoperator',1,'p_mathoperator','sqf_yacc.py',541),
  ('mathoperator -> DIVIDE','mathoperator',1,'p_mathoperator','sqf_yacc.py',542),
  ('mathoperator -> MOD','mathoperator',1,'p_mathoperator','sqf_yacc.py',543),
  ('mathoperator -> POW','mathoperator',1,'p_mathoperator','sqf_yacc.py',544),
  ('booleanexp -> primaryexp','booleanexp',1,'p_booleanexp','sqf_yacc.py',551),
  ('booleanexp -> primaryexp comparisonoperator booleanexp','booleanexp',3,'p_booleanexp','sqf_yacc.py',552),
  ('booleanexp -> primaryexp comparisonoperator LBRACE booleanexp RBRACE','booleanexp',5,'p_booleanexp','sqf_yacc.py',553),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc.py',559),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc.py',560),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc.py',567),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc.py',568),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc.py',569),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc.py',576),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc.py',577),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc.py',584),
]
