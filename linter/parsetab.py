
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftELSEleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BINARY_FNC BOOL CASE COLON COMMA COMMENT_MULTI COMMENT_SINGLE DEFAULT DIVIDE DO ELSE EQUAL EQUALITY EXITWITH FOR FOREACH FROM GETVARIABLE GLOBAL_ID GT GTE IF INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NAMESPACE NEWLINE NOT NULAR_FNC NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PARAM PARAMS PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SEMI_COLON SETVARIABLE STEP STRING_DOUBLE STRING_SINGLE SWITCH THEN TIMES TO UNARY_FNC WHILE WITH\n    code    : empty\n            | statement\n            | statement terminator code\n    \n    statement   : controlstructure\n                | assignment\n                | binaryexp\n                | nularexp\n                | unaryexp\n                | primaryexp\n    \n    terminator  : SEMI_COLON\n                | COMMA\n    \n    controlstructure    : ifstatement\n                        | whileloop\n                        | forloop\n                        | withstatement\n                        | foreachloop\n                        | switchstatement\n    \n    helpertype  : iftype\n                | whiletype\n                | fortype\n                | withtype\n    \n    case    : CASE primaryexp COLON bracedexp\n            | CASE primaryexp\n            | DEFAULT bracedexp\n    \n    switchstatement : SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE\n    \n    switchbody  : empty\n                | case\n                | case terminator switchbody\n    \n    iftype  : IF bracedexp_condition\n            | IF LPAREN primaryexp RPAREN\n    \n    ifstatement : iftype THEN bracedexp ELSE bracedexp\n                | iftype THEN bracedexp\n                | iftype EXITWITH bracedexp\n    \n    withtype : WITH NAMESPACE\n    \n    withstatementinit : withtype DO\n    \n    withstatement : withstatementinit bracedexp\n    \n    whiletype   : WHILE bracedexp_condition\n    \n    whileloop : whiletype DO bracedexp\n    \n    foreachloop : bracedexp FOREACH array\n                | bracedexp FOREACH primaryexp\n                | bracedexp FOREACH LPAREN primaryexp RPAREN\n    \n    fortype : FOR new_scope string FROM primaryexp TO primaryexp\n            | FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp\n            | FOR new_scope LSPAREN bracedexp_noscope COMMA bracedexp_condition COMMA bracedexp_noscope RSPAREN\n    \n    forloop : fortype DO bracedexp_noscope\n    \n    bracedexp_condition   : LBRACE booleanexp RBRACE\n                        | identifier\n    \n     bracedexp_noscope : LBRACE code RBRACE\n    \n    getvariable_ns  : NAMESPACE GETVARIABLE string\n                    | NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    getvariable_any : primaryexp GETVARIABLE string\n                    | primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    setvariable_ns  : NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                    | NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    setvariable_any     : primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                        | primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    param_unary     : PARAM LSPAREN number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    param_binary    : primaryexp PARAM LSPAREN number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    params_unary : PARAMS params_array\n    \n    params_binary : primaryexp PARAMS params_array\n    \n    params_array    : LSPAREN RSPAREN\n                    | LSPAREN params_element RSPAREN\n    \n    params_element  : params_array_entry\n                    | params_array_entry COMMA params_element\n    \n    params_array_entry  : string\n                        | LSPAREN string COMMA primaryexp RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array COMMA number RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    vardefinition   : definition\n                    | arraydefinition\n    \n    assignment  : assignment_code code RBRACE\n                | definition EQUAL primaryexp\n                | variable EQUAL primaryexp\n    \n    assignment_code : definition EQUAL LBRACE\n                    | variable EQUAL LBRACE\n    \n    arraydefinition : PRIVATE stringarray\n    \n    definition  : PRIVATE PRIVATE_ID\n                | PRIVATE string\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    variable    : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID %prec VARIABLE\n    \n    binaryexp   : primaryexp BINARY_FNC primaryexp          %prec BINARY_OP\n                | primaryexp comparisonoperator primaryexp  %prec BINARY_OP\n                | primaryexp mathoperator primaryexp        %prec BINARY_OP\n                | getvariable_ns                            %prec BINARY_OP\n                | getvariable_any                           %prec BINARY_OP\n                | setvariable_ns                            %prec BINARY_OP\n                | setvariable_any                           %prec BINARY_OP\n                | param_binary                              %prec BINARY_OP\n                | params_binary                             %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | identifier                %prec VALUE\n                | controlstructure\n                | helpertype\n                | array                     %prec VALUE\n                | unaryexp                  %prec UNARY_OP\n                | nularexp                  %prec NULAR_OP\n                | string                    %prec VALUE\n                | binaryexp                 %prec BINARY_OP\n                | bracedexp                 %prec BRACED_EXP\n                | LPAREN primaryexp RPAREN  %prec VALUE\n    \n    bracedexp   : LBRACE new_scope code RBRACE\n                | LBRACE RBRACE\n    new_scope :\n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : primaryexp\n                    | primaryexp COMMA arrayelement\n    \n    stringarray : LSPAREN RSPAREN\n                | LSPAREN stringarrayelement RSPAREN\n    \n    stringarrayelement  : string\n                        | string COMMA stringarrayelement\n    \n    nularexp    : NULAR_FNC     %prec NULAR_OP\n                | identifier    %prec NULAR_OP\n    \n    unaryexp    : UNARY_FNC primaryexp  %prec UNARY_OP\n                | PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | vardefinition         %prec UNARY_OP\n                | param_unary           %prec UNARY_OP\n                | params_unary          %prec UNARY_OP\n    \n    comparisonoperator  : LT            %prec COMPARISON_OP\n                        | GT            %prec COMPARISON_OP\n                        | LTE           %prec COMPARISON_OP\n                        | GTE           %prec COMPARISON_OP\n                        | EQUALITY      %prec COMPARISON_OP\n                        | INEQUALITY    %prec COMPARISON_OP\n                        | AND           %prec COMPARISON_OP\n                        | OR            %prec COMPARISON_OP\n    \n    mathoperator : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MOD\n                    | POW\n    \n    booleanexp  : primaryexp\n                | primaryexp comparisonoperator booleanexp\n                | primaryexp comparisonoperator LBRACE booleanexp RBRACE\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,64,65,66,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,126,129,132,133,135,136,137,138,139,140,144,145,146,148,150,151,153,154,155,156,157,161,164,167,171,187,188,193,196,198,199,205,207,208,209,229,234,236,238,244,246,251,255,261,265,267,270,275,276,280,281,284,285,],[-156,0,-1,-2,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-156,-10,-11,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-3,-92,-93,-94,-51,-68,-80,-81,-82,-39,-40,-111,-32,-33,-38,-45,-119,-49,-116,-69,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'NULAR_FNC':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[25,25,25,25,25,25,25,-114,25,25,-10,-11,25,25,25,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,25,25,25,25,25,25,25,-83,-84,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'UNARY_FNC':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[27,27,27,27,27,27,27,-114,27,27,-10,-11,27,27,27,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,27,27,27,27,27,27,27,-83,-84,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PLUS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,113,114,115,116,117,118,122,124,126,129,130,131,132,133,135,137,138,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,164,167,168,171,175,177,183,187,188,193,194,196,198,199,200,201,203,204,205,206,207,208,209,212,213,214,215,217,219,220,222,223,224,226,227,229,230,232,234,235,236,238,242,244,245,246,251,255,257,261,263,265,267,270,275,276,280,281,284,285,],[28,-103,-109,-107,-106,82,-12,-13,-14,-15,-16,-17,28,-78,-95,-96,-97,-98,-99,-100,-123,-102,28,28,28,28,-129,-130,-131,-101,-104,-105,-108,-110,28,-18,-19,-20,-114,-88,-89,28,-79,-151,-152,-153,-21,-154,-155,28,-10,-11,28,28,28,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,28,28,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,28,82,-36,28,28,-113,-86,-87,-85,-115,82,-67,-29,28,28,-47,-37,-34,82,82,82,-51,-68,82,-83,82,-84,-39,82,28,-111,-32,-33,-38,-45,28,82,-119,-49,-116,28,-69,82,82,82,-112,-120,-57,28,-70,-30,-46,28,28,28,28,-62,28,-41,-31,-48,28,28,82,28,82,28,82,82,82,82,82,82,-58,82,28,-52,28,-55,-63,28,-50,28,-53,82,-25,82,-59,28,-56,-64,-54,82,-44,-60,-61,-65,-66,]),'MINUS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,113,114,115,116,117,118,122,124,126,129,130,131,132,133,135,137,138,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,164,167,168,171,175,177,183,187,188,193,194,196,198,199,200,201,203,204,205,206,207,208,209,212,213,214,215,217,219,220,222,223,224,226,227,229,230,232,234,235,236,238,242,244,245,246,251,255,257,261,263,265,267,270,275,276,280,281,284,285,],[29,-103,-109,-107,-106,83,-12,-13,-14,-15,-16,-17,29,-78,-95,-96,-97,-98,-99,-100,-123,-102,29,29,29,29,-129,-130,-131,-101,-104,-105,-108,-110,29,-18,-19,-20,-114,-88,-89,29,-79,-151,-152,-153,-21,-154,-155,29,-10,-11,29,29,29,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,29,29,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,29,83,-36,29,29,-113,-86,-87,-85,-115,83,-67,-29,29,29,-47,-37,-34,83,83,83,-51,-68,83,-83,83,-84,-39,83,29,-111,-32,-33,-38,-45,29,83,-119,-49,-116,29,-69,83,83,83,-112,-120,-57,29,-70,-30,-46,29,29,29,29,-62,29,-41,-31,-48,29,29,83,29,83,29,83,83,83,83,83,83,-58,83,29,-52,29,-55,-63,29,-50,29,-53,83,-25,83,-59,29,-56,-64,-54,83,-44,-60,-61,-65,-66,]),'NOT':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[30,30,30,30,30,30,30,-114,30,30,-10,-11,30,30,30,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,30,30,30,30,30,30,30,-83,-84,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'LPAREN':([0,16,27,28,29,30,39,44,45,50,60,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[39,39,39,39,39,39,39,113,-114,39,130,39,-10,-11,39,39,39,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,39,39,152,39,39,39,39,-83,-84,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SWITCH':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[44,44,44,44,44,44,44,-114,44,44,-10,-11,44,44,44,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,44,44,44,44,44,44,44,-83,-84,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'PRIVATE':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[46,46,46,46,46,46,46,-114,46,46,-10,-11,46,46,46,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,46,46,46,46,46,46,46,-83,-84,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'PRIVATE_ID':([0,16,27,28,29,30,39,45,46,50,60,61,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,221,232,235,242,245,263,],[47,47,97,97,97,97,97,-114,116,97,97,97,47,-10,-11,97,97,97,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,97,97,97,97,47,97,97,-83,-84,97,47,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'GLOBAL_ID':([0,16,27,28,29,30,39,45,50,60,61,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,221,232,235,242,245,263,],[48,48,98,98,98,98,98,-114,98,98,98,48,-10,-11,98,98,98,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,98,98,98,98,48,98,98,-83,-84,98,48,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'NAMESPACE':([0,16,27,28,29,30,39,45,50,63,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[49,49,49,49,49,49,49,-114,49,135,49,-10,-11,49,49,49,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,49,49,49,49,49,49,49,-83,-84,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'PARAM':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,113,114,115,116,117,118,122,124,126,129,130,131,132,133,135,137,138,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,164,167,168,171,175,177,183,187,188,193,194,196,198,199,200,201,203,204,205,206,207,208,209,212,213,214,215,217,219,220,222,223,224,226,227,229,230,232,234,235,236,238,242,244,245,246,251,255,257,261,263,265,267,270,275,276,280,281,284,285,],[51,-103,-109,-107,-106,72,-12,-13,-14,-15,-16,-17,51,-78,-95,-96,-97,-98,-99,-100,-123,-102,51,51,51,51,-129,-130,-131,-101,-104,-105,-108,-110,51,-18,-19,-20,-114,-88,-89,51,-79,-151,-152,-153,-21,-154,-155,51,-10,-11,51,51,51,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,51,51,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,51,72,-36,51,51,-113,-86,-87,-85,-115,72,-67,-29,51,51,-47,-37,-34,-92,-93,-94,-51,-68,72,-83,72,-84,-39,72,51,-111,-32,-33,-38,-45,51,72,-119,-49,-116,51,-69,72,72,72,-112,-120,-57,51,-70,-30,-46,51,51,51,51,-62,51,-41,-31,-48,51,51,72,51,-93,51,72,72,72,72,72,72,-58,72,51,-52,51,-55,-63,51,-50,51,-53,72,-25,72,-59,51,-56,-64,-54,72,-44,-60,-61,-65,-66,]),'PARAMS':([0,4,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,47,48,50,53,54,55,56,57,58,59,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,112,113,114,115,116,117,118,122,124,126,129,130,131,132,133,135,137,138,139,140,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,164,167,168,171,175,177,183,187,188,193,194,196,198,199,200,201,203,204,205,206,207,208,209,212,213,214,215,217,219,220,222,223,224,226,227,229,230,232,234,235,236,238,242,244,245,246,251,255,257,261,263,265,267,270,275,276,280,281,284,285,],[52,-103,-109,-107,-106,73,-12,-13,-14,-15,-16,-17,52,-78,-95,-96,-97,-98,-99,-100,-123,-102,52,52,52,52,-129,-130,-131,-101,-104,-105,-108,-110,52,-18,-19,-20,-114,-88,-89,52,-79,-151,-152,-153,-21,-154,-155,52,-10,-11,52,52,52,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,52,52,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,52,73,-36,52,52,-113,-86,-87,-85,-115,73,-67,-29,52,52,-47,-37,-34,-92,-93,-94,-51,-68,73,-83,73,-84,-39,73,52,-111,-32,-33,-38,-45,52,73,-119,-49,-116,52,-69,73,73,73,-112,-120,-57,52,-70,-30,-46,52,52,52,52,-62,52,-41,-31,-48,52,52,73,52,-93,52,73,73,73,73,73,73,-58,73,52,-52,52,-55,-63,52,-50,52,-53,73,-25,73,-59,52,-56,-64,-54,73,-44,-60,-61,-65,-66,]),'NUMBER_REAL':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,125,130,131,143,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,260,263,266,273,],[54,54,54,54,54,54,54,-114,54,54,-10,-11,54,54,54,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,54,54,54,54,54,54,54,54,54,-83,-84,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'NUMBER_EXP':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,125,130,131,143,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,260,263,266,273,],[55,55,55,55,55,55,55,-114,55,55,-10,-11,55,55,55,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,55,55,55,55,55,55,55,55,55,-83,-84,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'NUMBER_HEX':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,125,130,131,143,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,260,263,266,273,],[56,56,56,56,56,56,56,-114,56,56,-10,-11,56,56,56,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,56,56,56,56,56,56,56,56,56,-83,-84,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LSPAREN':([0,16,27,28,29,30,39,45,46,50,51,52,62,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,120,121,127,130,131,134,147,149,152,158,168,194,197,200,201,203,204,206,212,213,215,219,228,232,235,237,242,245,248,260,263,266,273,],[50,50,50,50,50,50,50,-114,119,50,125,127,-114,50,-10,-11,50,50,50,141,142,143,127,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,50,50,50,50,50,165,166,170,50,50,179,-83,-84,50,50,50,50,170,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'STRING_SINGLE':([0,16,27,28,29,30,39,45,46,50,62,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,119,120,127,130,131,134,141,142,147,149,152,158,165,166,168,170,189,194,197,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[58,58,58,58,58,58,58,-114,58,58,-114,58,-10,-11,58,58,58,58,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,58,58,58,58,58,58,58,58,58,58,58,58,58,-83,-84,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'STRING_DOUBLE':([0,16,27,28,29,30,39,45,46,50,62,64,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,119,120,127,130,131,134,141,142,147,149,152,158,165,166,168,170,189,194,197,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[59,59,59,59,59,59,59,-114,59,59,-114,59,-10,-11,59,59,59,59,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,59,59,59,59,59,59,59,59,59,59,59,59,59,-83,-84,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LBRACE':([0,16,27,28,29,30,39,43,45,50,60,61,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,108,109,110,111,113,114,128,130,131,147,149,152,158,168,179,184,194,200,201,203,204,206,210,212,213,215,219,221,232,235,242,243,245,252,263,269,],[45,45,45,45,45,45,45,45,-114,45,131,131,45,-10,-11,45,45,45,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,147,149,45,45,45,45,158,45,45,-35,45,45,-83,-84,45,45,45,158,45,45,219,45,45,45,45,225,45,45,45,45,131,45,45,45,45,45,158,45,45,]),'IF':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[60,60,60,60,60,60,60,-114,60,60,-10,-11,60,60,60,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,60,60,60,60,60,60,60,-83,-84,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'WHILE':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[61,61,61,61,61,61,61,-114,61,61,-10,-11,61,61,61,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,61,61,61,61,61,61,61,-83,-84,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'FOR':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[62,62,62,62,62,62,62,-114,62,62,-10,-11,62,62,62,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,62,62,62,62,62,62,62,-83,-84,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'WITH':([0,16,27,28,29,30,39,45,50,64,65,66,67,68,69,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,106,113,114,130,131,147,149,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[63,63,63,63,63,63,63,-114,63,63,-10,-11,63,63,63,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,63,63,63,63,63,63,63,-83,-84,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,45,47,48,53,54,55,56,57,58,59,64,65,66,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,114,115,116,117,118,122,126,129,132,133,135,136,137,138,139,140,144,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,164,167,171,176,177,185,187,188,193,196,198,199,205,207,208,209,217,218,219,225,229,231,234,236,238,239,240,241,244,246,250,251,255,256,257,258,261,265,267,268,270,275,276,279,280,281,284,285,],[-1,-2,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-156,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,115,-88,-89,-79,-151,-152,-153,-21,-154,-155,-156,-10,-11,145,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-156,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-3,-92,-93,-94,-51,-68,-80,-81,115,-82,115,-39,-40,-111,-32,-33,-38,-45,-156,187,-119,-49,-116,-69,199,-146,209,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-93,-147,115,-156,-58,250,-52,-55,-63,255,-26,-27,-50,-53,-148,-42,-25,-156,-23,-24,-59,-56,-64,-28,-54,-43,-44,-22,-60,-61,-65,-66,]),'SEMI_COLON':([3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,126,129,132,133,135,137,138,139,140,144,145,146,148,150,151,153,154,155,156,157,161,164,167,171,187,188,193,196,198,199,205,207,208,209,229,234,236,238,241,244,246,251,255,257,258,261,265,267,270,275,276,279,280,281,284,285,],[65,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-80,-81,-82,-39,-40,-111,-32,-33,-38,-45,-119,-49,-116,-69,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,65,-50,-53,-42,-25,-23,-24,-59,-56,-64,-54,-43,-44,-22,-60,-61,-65,-66,]),'COMMA':([3,4,5,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,145,146,148,150,151,153,154,155,156,157,161,163,164,167,169,171,173,174,180,181,182,187,188,190,191,193,195,196,198,199,202,205,207,208,209,214,223,224,227,229,230,233,234,236,238,241,244,246,247,249,251,254,255,257,258,261,262,265,267,270,274,275,276,279,280,281,284,285,286,287,],[66,-4,-5,-6,-7,-8,-9,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,168,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-80,-81,-82,-39,-40,-111,-32,-33,-38,-45,-119,189,-49,-116,194,-69,197,-73,203,204,206,-112,-120,212,213,-57,215,-70,-30,-46,221,-62,-41,-31,-48,228,235,237,245,-58,248,252,-52,-55,-63,66,-50,-53,260,-74,-42,266,-25,-23,-24,-59,273,-56,-64,-54,-75,-43,-44,-22,-60,-61,-65,-66,-77,-76,]),'BINARY_FNC':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,67,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,67,-36,-113,-86,-87,-85,-115,67,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,67,67,-39,67,-111,-32,-33,-38,-45,67,-119,-49,-116,-69,67,67,67,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,67,-93,67,67,67,67,67,67,-58,67,-52,-55,-63,-50,-53,67,-25,67,-59,-56,-64,-54,67,-44,-60,-61,-65,-66,]),'GETVARIABLE':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,49,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,70,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,120,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,70,-36,-113,-86,-87,-85,-115,70,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,70,70,-39,70,-111,-32,-33,-38,-45,70,-119,-49,-116,-69,70,70,70,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,70,-93,70,70,70,70,70,70,-58,70,-52,-55,-63,-50,-53,70,-25,70,-59,-56,-64,-54,70,-44,-60,-61,-65,-66,]),'SETVARIABLE':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,49,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,71,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,121,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,71,-36,-113,-86,-87,-85,-115,71,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,71,71,-39,71,-111,-32,-33,-38,-45,71,-119,-49,-116,-69,71,71,71,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,71,-93,71,71,71,71,71,71,-58,71,-52,-55,-63,-50,-53,71,-25,71,-59,-56,-64,-54,71,-44,-60,-61,-65,-66,]),'LT':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,74,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,74,-36,-113,-86,-87,-85,-115,74,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,74,74,-39,74,-111,-32,-33,-38,-45,74,-119,-49,-116,-69,74,74,74,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,74,-93,74,74,74,74,74,74,-58,74,-52,-55,-63,-50,-53,74,-25,74,-59,-56,-64,-54,74,-44,-60,-61,-65,-66,]),'GT':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,75,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,75,-36,-113,-86,-87,-85,-115,75,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,75,75,-39,75,-111,-32,-33,-38,-45,75,-119,-49,-116,-69,75,75,75,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,75,-93,75,75,75,75,75,75,-58,75,-52,-55,-63,-50,-53,75,-25,75,-59,-56,-64,-54,75,-44,-60,-61,-65,-66,]),'LTE':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,76,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,76,-36,-113,-86,-87,-85,-115,76,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,76,76,-39,76,-111,-32,-33,-38,-45,76,-119,-49,-116,-69,76,76,76,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,76,-93,76,76,76,76,76,76,-58,76,-52,-55,-63,-50,-53,76,-25,76,-59,-56,-64,-54,76,-44,-60,-61,-65,-66,]),'GTE':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,77,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,77,-36,-113,-86,-87,-85,-115,77,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,77,77,-39,77,-111,-32,-33,-38,-45,77,-119,-49,-116,-69,77,77,77,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,77,-93,77,77,77,77,77,77,-58,77,-52,-55,-63,-50,-53,77,-25,77,-59,-56,-64,-54,77,-44,-60,-61,-65,-66,]),'EQUALITY':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,78,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,78,-36,-113,-86,-87,-85,-115,78,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,78,78,-39,78,-111,-32,-33,-38,-45,78,-119,-49,-116,-69,78,78,78,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,78,-93,78,78,78,78,78,78,-58,78,-52,-55,-63,-50,-53,78,-25,78,-59,-56,-64,-54,78,-44,-60,-61,-65,-66,]),'INEQUALITY':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,79,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,79,-36,-113,-86,-87,-85,-115,79,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,79,79,-39,79,-111,-32,-33,-38,-45,79,-119,-49,-116,-69,79,79,79,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,79,-93,79,79,79,79,79,79,-58,79,-52,-55,-63,-50,-53,79,-25,79,-59,-56,-64,-54,79,-44,-60,-61,-65,-66,]),'AND':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,80,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,80,-36,-113,-86,-87,-85,-115,80,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,80,80,-39,80,-111,-32,-33,-38,-45,80,-119,-49,-116,-69,80,80,80,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,80,-93,80,80,80,80,80,80,-58,80,-52,-55,-63,-50,-53,80,-25,80,-59,-56,-64,-54,80,-44,-60,-61,-65,-66,]),'OR':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,81,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,81,-36,-113,-86,-87,-85,-115,81,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,81,81,-39,81,-111,-32,-33,-38,-45,81,-119,-49,-116,-69,81,81,81,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,81,-93,81,81,81,81,81,81,-58,81,-52,-55,-63,-50,-53,81,-25,81,-59,-56,-64,-54,81,-44,-60,-61,-65,-66,]),'TIMES':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,84,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,84,-36,-113,-86,-87,-85,-115,84,-67,-29,-47,-37,-34,84,84,84,-51,-68,84,84,-39,84,-111,-32,-33,-38,-45,84,-119,-49,-116,-69,84,84,84,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,84,84,84,84,84,84,84,84,-58,84,-52,-55,-63,-50,-53,84,-25,84,-59,-56,-64,-54,84,-44,-60,-61,-65,-66,]),'DIVIDE':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,85,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,85,-36,-113,-86,-87,-85,-115,85,-67,-29,-47,-37,-34,85,85,85,-51,-68,85,85,-39,85,-111,-32,-33,-38,-45,85,-119,-49,-116,-69,85,85,85,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,85,85,85,85,85,85,85,85,-58,85,-52,-55,-63,-50,-53,85,-25,85,-59,-56,-64,-54,85,-44,-60,-61,-65,-66,]),'MOD':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,86,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,86,-36,-113,-86,-87,-85,-115,86,-67,-29,-47,-37,-34,86,86,86,-51,-68,86,86,-39,86,-111,-32,-33,-38,-45,86,-119,-49,-116,-69,86,86,86,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,86,86,86,86,86,86,86,86,-58,86,-52,-55,-63,-50,-53,86,-25,86,-59,-56,-64,-54,86,-44,-60,-61,-65,-66,]),'POW':([4,6,7,8,9,10,11,12,13,14,15,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,38,40,41,42,47,48,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,124,126,129,132,133,135,137,138,139,140,144,146,148,150,151,153,154,155,156,157,159,161,164,167,171,175,177,183,187,188,193,196,198,199,205,207,208,209,214,217,220,222,223,224,226,227,229,230,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-103,-109,-107,-106,87,-12,-13,-14,-15,-16,-17,-78,-95,-96,-97,-98,-99,-100,-123,-102,-129,-130,-131,-101,-104,-105,-108,-110,-18,-19,-20,-88,-89,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,87,-36,-113,-86,-87,-85,-115,87,-67,-29,-47,-37,-34,87,87,87,-51,-68,87,87,-39,87,-111,-32,-33,-38,-45,87,-119,-49,-116,-69,87,87,87,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,87,87,87,87,87,87,87,87,-58,87,-52,-55,-63,-50,-53,87,-25,87,-59,-56,-64,-54,87,-44,-60,-61,-65,-66,]),'RPAREN':([10,11,12,13,14,15,19,20,21,22,23,24,25,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,112,115,116,117,118,122,126,129,132,133,135,137,138,139,140,144,150,151,153,154,155,156,157,159,161,164,167,171,175,183,187,188,193,196,198,199,205,207,208,209,229,234,236,238,244,246,251,255,261,265,267,270,275,276,280,281,284,285,],[-12,-13,-14,-15,-16,-17,-95,-96,-97,-98,-99,-100,-123,-129,-130,-131,-101,-104,-105,-108,-110,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,153,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-39,-40,-111,-32,-33,-38,-45,186,-119,-49,-116,-69,198,207,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'RSPAREN':([10,11,12,13,14,15,19,20,21,22,23,24,25,31,32,33,34,35,36,37,38,50,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,119,122,123,124,126,127,129,132,133,135,137,138,139,140,144,150,151,153,154,155,156,157,161,162,163,164,167,169,171,172,173,174,177,182,187,188,192,193,196,198,199,205,207,208,209,211,214,216,217,218,222,223,224,226,227,229,230,234,236,238,244,246,247,249,250,251,253,254,255,259,261,262,264,265,267,270,271,272,274,275,276,277,278,280,281,282,283,284,285,286,287,],[-12,-13,-14,-15,-16,-17,-95,-96,-97,-98,-99,-100,-123,-129,-130,-131,-101,-104,-105,-108,-110,122,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,161,-115,167,-117,-67,171,-29,-47,-37,-34,-92,-93,-94,-51,-68,-39,-40,-111,-32,-33,-38,-45,-119,188,-121,-49,-116,193,-69,196,-71,-73,-146,205,-112,-120,-118,-57,-70,-30,-46,-62,-41,-31,-48,-122,229,-72,-93,-147,234,236,238,244,246,-58,249,-52,-55,-63,-50,-53,261,-74,-148,-42,265,267,-25,270,-59,274,276,-56,-64,-54,280,281,-75,-43,-44,284,285,-60,-61,286,287,-65,-66,-77,-76,]),'TO':([10,11,12,13,14,15,19,20,21,22,23,24,25,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,126,129,132,133,135,137,138,139,140,144,150,151,153,154,155,156,157,161,164,167,171,187,188,193,196,198,199,205,207,208,209,220,229,234,236,238,244,246,251,255,261,265,267,270,275,276,280,281,284,285,],[-12,-13,-14,-15,-16,-17,-95,-96,-97,-98,-99,-100,-123,-129,-130,-131,-101,-104,-105,-108,-110,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-39,-40,-111,-32,-33,-38,-45,-119,-49,-116,-69,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,232,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'STEP':([10,11,12,13,14,15,19,20,21,22,23,24,25,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,126,129,132,133,135,137,138,139,140,144,150,151,153,154,155,156,157,161,164,167,171,187,188,193,196,198,199,205,207,208,209,229,234,236,238,244,246,251,255,261,265,267,270,275,276,280,281,284,285,],[-12,-13,-14,-15,-16,-17,-95,-96,-97,-98,-99,-100,-123,-129,-130,-131,-101,-104,-105,-108,-110,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-39,-40,-111,-32,-33,-38,-45,-119,-49,-116,-69,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,263,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'DO':([10,11,12,13,14,15,19,20,21,22,23,24,25,31,32,33,34,35,36,37,38,41,42,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,126,129,132,133,135,137,138,139,140,144,150,151,153,154,155,156,157,161,164,167,171,186,187,188,193,196,198,199,205,207,208,209,229,234,236,238,244,246,251,255,261,265,267,270,275,276,280,281,284,285,],[-12,-13,-14,-15,-16,-17,-95,-96,-97,-98,-99,-100,-123,-129,-130,-131,-101,-104,-105,-108,-110,110,111,-79,-151,-152,-153,128,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,110,111,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-39,-40,-111,-32,-33,-38,-45,-119,-49,-116,-69,210,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'COLON':([10,11,12,13,14,15,19,20,21,22,23,24,25,31,32,33,34,35,36,37,38,53,54,55,56,57,58,59,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,112,115,116,117,118,122,126,129,132,133,135,137,138,139,140,144,150,151,153,154,155,156,157,161,164,167,171,187,188,193,196,198,199,205,207,208,209,229,234,236,238,244,246,251,255,257,261,265,267,270,275,276,280,281,284,285,],[-12,-13,-14,-15,-16,-17,-95,-96,-97,-98,-99,-100,-123,-129,-130,-131,-101,-104,-105,-108,-110,-79,-151,-152,-153,-21,-154,-155,-125,-102,-103,-106,-107,-109,-88,-89,-18,-19,-20,-78,-126,-127,-128,-36,-113,-86,-87,-85,-115,-67,-29,-47,-37,-34,-92,-93,-94,-51,-68,-39,-40,-111,-32,-33,-38,-45,-119,-49,-116,-69,-112,-120,-57,-70,-30,-46,-62,-41,-31,-48,-58,-52,-55,-63,-50,-53,-42,-25,269,-59,-56,-64,-54,-43,-44,-60,-61,-65,-66,]),'EQUAL':([17,18,47,48,58,59,116,117,],[89,90,-90,-91,-154,-155,-86,-87,]),'FOREACH':([38,115,187,],[106,-113,-112,]),'THEN':([40,97,98,99,129,132,198,199,],[108,-88,-89,108,-29,-47,-30,-46,]),'EXITWITH':([40,97,98,99,129,132,198,199,],[109,-88,-89,109,-29,-47,-30,-46,]),'FROM':([58,59,178,],[-154,-155,201,]),'CASE':([65,66,225,256,],[-10,-11,242,242,]),'DEFAULT':([65,66,225,256,],[-10,-11,243,243,]),'ELSE':([115,154,187,],[-113,184,-112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,16,64,114,158,],[1,88,136,160,185,]),'empty':([0,16,64,114,158,225,256,],[2,2,2,2,2,240,240,]),'statement':([0,16,64,114,158,],[3,3,3,3,3,]),'controlstructure':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[4,4,93,93,93,93,93,93,4,93,93,93,93,93,93,93,4,93,93,93,4,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'assignment':([0,16,64,114,158,],[5,5,5,5,5,]),'binaryexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[6,6,96,96,96,96,96,96,6,96,96,96,96,96,96,96,6,96,96,96,6,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'nularexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[7,7,95,95,95,95,95,95,7,95,95,95,95,95,95,95,7,95,95,95,7,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'unaryexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[8,8,94,94,94,94,94,94,8,94,94,94,94,94,94,94,8,94,94,94,8,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'primaryexp':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[9,9,91,103,104,105,107,124,9,137,138,139,146,148,151,159,9,175,177,183,9,124,214,217,220,222,223,224,226,227,230,177,251,177,257,177,275,]),'ifstatement':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'whileloop':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'forloop':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'withstatement':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'foreachloop':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'switchstatement':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'assignment_code':([0,16,64,114,158,],[16,16,16,16,16,]),'definition':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[17,17,102,102,102,102,102,102,17,102,102,102,102,102,102,102,17,102,102,102,17,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'variable':([0,16,64,114,158,],[18,18,18,18,18,]),'getvariable_ns':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'getvariable_any':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'setvariable_ns':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'setvariable_any':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'param_binary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'params_binary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'identifier':([0,16,27,28,29,30,39,50,60,61,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,221,232,235,242,245,263,],[26,26,92,92,92,92,92,92,132,132,26,92,92,92,92,92,92,92,26,92,92,92,26,92,92,92,92,92,92,92,92,92,92,92,132,92,92,92,92,92,]),'vardefinition':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'param_unary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'params_unary':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'number':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,125,130,131,143,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,260,263,266,273,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,169,34,34,182,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,271,34,277,283,]),'helpertype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'array':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,228,232,235,237,242,245,248,260,263,266,273,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,150,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,247,36,36,254,36,36,262,272,36,278,282,]),'string':([0,16,27,28,29,30,39,46,50,64,67,68,69,70,89,90,106,113,114,119,120,127,130,131,134,141,142,152,158,165,166,168,170,189,194,197,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[37,37,37,37,37,37,37,117,37,37,37,37,37,140,37,37,37,37,37,163,164,174,37,37,178,180,181,37,37,190,191,37,195,163,37,174,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'bracedexp':([0,16,27,28,29,30,39,43,50,64,67,68,69,89,90,106,108,109,110,113,114,130,131,152,158,168,184,194,200,201,203,204,206,212,213,215,219,232,235,242,243,245,263,269,],[38,38,38,38,38,38,38,112,38,38,38,38,38,38,38,38,154,155,156,38,38,38,38,38,38,38,208,38,38,38,38,38,38,38,38,38,38,38,38,38,258,38,38,279,]),'iftype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[40,40,99,99,99,99,99,99,40,99,99,99,99,99,99,99,40,99,99,99,40,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'whiletype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[41,41,100,100,100,100,100,100,41,100,100,100,100,100,100,100,41,100,100,100,41,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'fortype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[42,42,101,101,101,101,101,101,42,101,101,101,101,101,101,101,42,101,101,101,42,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'withstatementinit':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'arraydefinition':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'withtype':([0,16,27,28,29,30,39,50,64,67,68,69,89,90,106,113,114,130,131,152,158,168,194,200,201,203,204,206,212,213,215,219,232,235,242,245,263,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'terminator':([3,241,],[64,256,]),'comparisonoperator':([9,91,103,104,105,107,124,137,138,139,146,148,151,159,175,177,183,214,217,220,222,223,224,226,227,230,251,257,275,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,200,68,68,200,68,68,68,68,68,68,68,68,68,68,]),'mathoperator':([9,91,103,104,105,107,124,137,138,139,146,148,151,159,175,177,183,214,217,220,222,223,224,226,227,230,251,257,275,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'new_scope':([45,62,147,149,219,],[114,134,114,114,114,]),'stringarray':([46,],[118,]),'arrayelement':([50,168,],[123,192,]),'params_array':([52,73,],[126,144,]),'bracedexp_condition':([60,61,221,],[129,133,233,]),'bracedexp_noscope':([111,179,252,],[157,202,264,]),'stringarrayelement':([119,189,],[162,211,]),'params_element':([127,197,],[172,216,]),'params_array_entry':([127,197,],[173,173,]),'booleanexp':([131,200,219,235,245,],[176,218,231,253,259,]),'switchbody':([225,256,],[239,268,]),'case':([225,256,],[241,241,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc.py',36),
  ('code -> statement','code',1,'p_code','sqf_yacc.py',37),
  ('code -> statement terminator code','code',3,'p_code','sqf_yacc.py',38),
  ('statement -> controlstructure','statement',1,'p_statement','sqf_yacc.py',45),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc.py',46),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc.py',47),
  ('statement -> nularexp','statement',1,'p_statement','sqf_yacc.py',48),
  ('statement -> unaryexp','statement',1,'p_statement','sqf_yacc.py',49),
  ('statement -> primaryexp','statement',1,'p_statement','sqf_yacc.py',50),
  ('terminator -> SEMI_COLON','terminator',1,'p_terminator','sqf_yacc.py',57),
  ('terminator -> COMMA','terminator',1,'p_terminator','sqf_yacc.py',58),
  ('controlstructure -> ifstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',72),
  ('controlstructure -> whileloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',73),
  ('controlstructure -> forloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',74),
  ('controlstructure -> withstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',75),
  ('controlstructure -> foreachloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',76),
  ('controlstructure -> switchstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',77),
  ('helpertype -> iftype','helpertype',1,'p_helpertype','sqf_yacc.py',84),
  ('helpertype -> whiletype','helpertype',1,'p_helpertype','sqf_yacc.py',85),
  ('helpertype -> fortype','helpertype',1,'p_helpertype','sqf_yacc.py',86),
  ('helpertype -> withtype','helpertype',1,'p_helpertype','sqf_yacc.py',87),
  ('case -> CASE primaryexp COLON bracedexp','case',4,'p_case','sqf_yacc.py',94),
  ('case -> CASE primaryexp','case',2,'p_case','sqf_yacc.py',95),
  ('case -> DEFAULT bracedexp','case',2,'p_case','sqf_yacc.py',96),
  ('switchstatement -> SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE','switchstatement',8,'p_switchstatement','sqf_yacc.py',102),
  ('switchbody -> empty','switchbody',1,'p_switchbody','sqf_yacc.py',108),
  ('switchbody -> case','switchbody',1,'p_switchbody','sqf_yacc.py',109),
  ('switchbody -> case terminator switchbody','switchbody',3,'p_switchbody','sqf_yacc.py',110),
  ('iftype -> IF bracedexp_condition','iftype',2,'p_iftype','sqf_yacc.py',116),
  ('iftype -> IF LPAREN primaryexp RPAREN','iftype',4,'p_iftype','sqf_yacc.py',117),
  ('ifstatement -> iftype THEN bracedexp ELSE bracedexp','ifstatement',5,'p_ifstatement','sqf_yacc.py',124),
  ('ifstatement -> iftype THEN bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',125),
  ('ifstatement -> iftype EXITWITH bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',126),
  ('withtype -> WITH NAMESPACE','withtype',2,'p_withtype','sqf_yacc.py',133),
  ('withstatementinit -> withtype DO','withstatementinit',2,'p_withstatementinit','sqf_yacc.py',140),
  ('withstatement -> withstatementinit bracedexp','withstatement',2,'p_withstatement','sqf_yacc.py',150),
  ('whiletype -> WHILE bracedexp_condition','whiletype',2,'p_whiletype','sqf_yacc.py',157),
  ('whileloop -> whiletype DO bracedexp','whileloop',3,'p_whileloop','sqf_yacc.py',163),
  ('foreachloop -> bracedexp FOREACH array','foreachloop',3,'p_foreachloop','sqf_yacc.py',170),
  ('foreachloop -> bracedexp FOREACH primaryexp','foreachloop',3,'p_foreachloop','sqf_yacc.py',171),
  ('foreachloop -> bracedexp FOREACH LPAREN primaryexp RPAREN','foreachloop',5,'p_foreachloop','sqf_yacc.py',172),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp','fortype',7,'p_fortype','sqf_yacc.py',178),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp','fortype',9,'p_fortype','sqf_yacc.py',179),
  ('fortype -> FOR new_scope LSPAREN bracedexp_noscope COMMA bracedexp_condition COMMA bracedexp_noscope RSPAREN','fortype',9,'p_fortype','sqf_yacc.py',180),
  ('forloop -> fortype DO bracedexp_noscope','forloop',3,'p_forloop','sqf_yacc.py',202),
  ('bracedexp_condition -> LBRACE booleanexp RBRACE','bracedexp_condition',3,'p_bracedexp_condition','sqf_yacc.py',210),
  ('bracedexp_condition -> identifier','bracedexp_condition',1,'p_bracedexp_condition','sqf_yacc.py',211),
  ('bracedexp_noscope -> LBRACE code RBRACE','bracedexp_noscope',3,'p_bracedexp_noscope','sqf_yacc.py',221),
  ('getvariable_ns -> NAMESPACE GETVARIABLE string','getvariable_ns',3,'p_getvariable_ns','sqf_yacc.py',228),
  ('getvariable_ns -> NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_ns',7,'p_getvariable_ns','sqf_yacc.py',229),
  ('getvariable_any -> primaryexp GETVARIABLE string','getvariable_any',3,'p_getvariable_any','sqf_yacc.py',252),
  ('getvariable_any -> primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_any',7,'p_getvariable_any','sqf_yacc.py',253),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_ns',7,'p_setvariable_ns','sqf_yacc.py',261),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_ns',9,'p_setvariable_ns','sqf_yacc.py',262),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_any',7,'p_setvariable_any','sqf_yacc.py',271),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_any',9,'p_setvariable_any','sqf_yacc.py',272),
  ('param_unary -> PARAM LSPAREN number RSPAREN','param_unary',4,'p_param_unary','sqf_yacc.py',280),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp RSPAREN','param_unary',6,'p_param_unary','sqf_yacc.py',281),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_unary',8,'p_param_unary','sqf_yacc.py',282),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_unary',10,'p_param_unary','sqf_yacc.py',283),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_unary',10,'p_param_unary','sqf_yacc.py',284),
  ('param_binary -> primaryexp PARAM LSPAREN number RSPAREN','param_binary',5,'p_param_binary','sqf_yacc.py',294),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN','param_binary',7,'p_param_binary','sqf_yacc.py',295),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_binary',9,'p_param_binary','sqf_yacc.py',296),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',297),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',298),
  ('params_unary -> PARAMS params_array','params_unary',2,'p_params_unary','sqf_yacc.py',308),
  ('params_binary -> primaryexp PARAMS params_array','params_binary',3,'p_params_binary','sqf_yacc.py',314),
  ('params_array -> LSPAREN RSPAREN','params_array',2,'p_params_array','sqf_yacc.py',320),
  ('params_array -> LSPAREN params_element RSPAREN','params_array',3,'p_params_array','sqf_yacc.py',321),
  ('params_element -> params_array_entry','params_element',1,'p_params_array_element','sqf_yacc.py',331),
  ('params_element -> params_array_entry COMMA params_element','params_element',3,'p_params_array_element','sqf_yacc.py',332),
  ('params_array_entry -> string','params_array_entry',1,'p_params_array_entry','sqf_yacc.py',345),
  ('params_array_entry -> LSPAREN string COMMA primaryexp RSPAREN','params_array_entry',5,'p_params_array_entry','sqf_yacc.py',346),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array RSPAREN','params_array_entry',7,'p_params_array_entry','sqf_yacc.py',347),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array COMMA number RSPAREN','params_array_entry',9,'p_params_array_entry','sqf_yacc.py',348),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array COMMA array RSPAREN','params_array_entry',9,'p_params_array_entry','sqf_yacc.py',349),
  ('vardefinition -> definition','vardefinition',1,'p_vardefinition','sqf_yacc.py',369),
  ('vardefinition -> arraydefinition','vardefinition',1,'p_vardefinition','sqf_yacc.py',370),
  ('assignment -> assignment_code code RBRACE','assignment',3,'p_assignment','sqf_yacc.py',376),
  ('assignment -> definition EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',377),
  ('assignment -> variable EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',378),
  ('assignment_code -> definition EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',395),
  ('assignment_code -> variable EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',396),
  ('arraydefinition -> PRIVATE stringarray','arraydefinition',2,'p_arraydefinition','sqf_yacc.py',405),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc.py',423),
  ('definition -> PRIVATE string','definition',2,'p_definition','sqf_yacc.py',424),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc.py',443),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc.py',444),
  ('variable -> PRIVATE_ID','variable',1,'p_variable','sqf_yacc.py',466),
  ('variable -> GLOBAL_ID','variable',1,'p_variable','sqf_yacc.py',467),
  ('binaryexp -> primaryexp BINARY_FNC primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',474),
  ('binaryexp -> primaryexp comparisonoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',475),
  ('binaryexp -> primaryexp mathoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',476),
  ('binaryexp -> getvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',477),
  ('binaryexp -> getvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',478),
  ('binaryexp -> setvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',479),
  ('binaryexp -> setvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',480),
  ('binaryexp -> param_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',481),
  ('binaryexp -> params_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',482),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc.py',488),
  ('primaryexp -> identifier','primaryexp',1,'p_primaryexp','sqf_yacc.py',489),
  ('primaryexp -> controlstructure','primaryexp',1,'p_primaryexp','sqf_yacc.py',490),
  ('primaryexp -> helpertype','primaryexp',1,'p_primaryexp','sqf_yacc.py',491),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc.py',492),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',493),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',494),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc.py',495),
  ('primaryexp -> binaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',496),
  ('primaryexp -> bracedexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',497),
  ('primaryexp -> LPAREN primaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc.py',498),
  ('bracedexp -> LBRACE new_scope code RBRACE','bracedexp',4,'p_bracedexp','sqf_yacc.py',508),
  ('bracedexp -> LBRACE RBRACE','bracedexp',2,'p_bracedexp','sqf_yacc.py',509),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','sqf_yacc.py',517),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc.py',523),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc.py',524),
  ('arrayelement -> primaryexp','arrayelement',1,'p_arrayelement','sqf_yacc.py',534),
  ('arrayelement -> primaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc.py',535),
  ('stringarray -> LSPAREN RSPAREN','stringarray',2,'p_stringarray','sqf_yacc.py',548),
  ('stringarray -> LSPAREN stringarrayelement RSPAREN','stringarray',3,'p_stringarray','sqf_yacc.py',549),
  ('stringarrayelement -> string','stringarrayelement',1,'p_stringarrayelement','sqf_yacc.py',559),
  ('stringarrayelement -> string COMMA stringarrayelement','stringarrayelement',3,'p_stringarrayelement','sqf_yacc.py',560),
  ('nularexp -> NULAR_FNC','nularexp',1,'p_nularexp','sqf_yacc.py',573),
  ('nularexp -> identifier','nularexp',1,'p_nularexp','sqf_yacc.py',574),
  ('unaryexp -> UNARY_FNC primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',581),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',582),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',583),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',584),
  ('unaryexp -> vardefinition','unaryexp',1,'p_unaryexp','sqf_yacc.py',585),
  ('unaryexp -> param_unary','unaryexp',1,'p_unaryexp','sqf_yacc.py',586),
  ('unaryexp -> params_unary','unaryexp',1,'p_unaryexp','sqf_yacc.py',587),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',593),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',594),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',595),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',596),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',597),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',598),
  ('comparisonoperator -> AND','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',599),
  ('comparisonoperator -> OR','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',600),
  ('mathoperator -> PLUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',607),
  ('mathoperator -> MINUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',608),
  ('mathoperator -> TIMES','mathoperator',1,'p_mathoperator','sqf_yacc.py',609),
  ('mathoperator -> DIVIDE','mathoperator',1,'p_mathoperator','sqf_yacc.py',610),
  ('mathoperator -> MOD','mathoperator',1,'p_mathoperator','sqf_yacc.py',611),
  ('mathoperator -> POW','mathoperator',1,'p_mathoperator','sqf_yacc.py',612),
  ('booleanexp -> primaryexp','booleanexp',1,'p_booleanexp','sqf_yacc.py',619),
  ('booleanexp -> primaryexp comparisonoperator booleanexp','booleanexp',3,'p_booleanexp','sqf_yacc.py',620),
  ('booleanexp -> primaryexp comparisonoperator LBRACE booleanexp RBRACE','booleanexp',5,'p_booleanexp','sqf_yacc.py',621),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc.py',627),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc.py',628),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc.py',635),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc.py',636),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc.py',637),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc.py',644),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc.py',645),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc.py',652),
]
