
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftELSEleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BINARY_FNC BOOL CASE COLON COMMA COMMENT_MULTI COMMENT_SINGLE DEFAULT DIVIDE DO ELSE EQUAL EQUALITY EXITWITH FOR FOREACH FROM GETVARIABLE GLOBAL_ID GT GTE IF INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NAMESPACE NEWLINE NOT NULAR_FNC NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PARAM PARAMS PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SEMI_COLON SETVARIABLE STEP STRING_DOUBLE STRING_SINGLE SWITCH THEN TIMES TO UNARY_FNC WHILE WITH\n    code    : empty\n            | statement\n            | statement terminator code\n    \n    statement   : controlstructure\n                | assignment\n                | binaryexp\n                | nularexp\n                | unaryexp\n    \n    terminator  : SEMI_COLON\n                | COMMA\n    \n    controlstructure    : ifstatement\n                        | whileloop\n                        | forloop\n                        | withstatement\n                        | foreachloop\n                        | switchstatement\n    \n    helpertype  : iftype\n                | whiletype\n                | fortype\n                | withtype\n    \n    case    : CASE primaryexp COLON bracedexp\n            | CASE primaryexp\n            | DEFAULT bracedexp\n    \n    switchstatement : SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE\n    \n    switchbody  : empty\n                | case\n                | case terminator switchbody\n    \n    iftype  : IF forloop_condition\n            | IF LPAREN primaryexp RPAREN\n    \n    ifstatement : iftype THEN bracedexp ELSE bracedexp\n                | iftype THEN bracedexp\n                | iftype EXITWITH bracedexp\n    \n    withtype : WITH NAMESPACE\n    \n    withstatementinit : withtype DO\n    \n    withstatement : withstatementinit bracedexp\n    \n    whiletype   : WHILE forloop_condition\n    \n    whileloop : whiletype DO bracedexp\n    \n    foreachloop : bracedexp FOREACH array\n                | bracedexp FOREACH primaryexp\n                | bracedexp FOREACH LPAREN primaryexp RPAREN\n    \n    fortype : FOR new_scope string FROM primaryexp TO primaryexp\n            | FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp\n            | FOR new_scope LSPAREN bracedexp_noscope COMMA forloop_condition COMMA bracedexp_noscope RSPAREN\n    \n    forloop : fortype DO bracedexp_noscope\n    \n    forloop_condition   : LBRACE booleanexp RBRACE\n                        | identifier\n    \n     bracedexp_noscope : LBRACE code RBRACE\n    \n    getvariable_ns  : NAMESPACE GETVARIABLE string\n                    | NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    getvariable_any : primaryexp GETVARIABLE string\n                    | primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n    \n    setvariable_ns  : NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                    | NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    setvariable_any     : primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN\n                        | primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN\n    \n    param_unary     : PARAM LSPAREN number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    param_binary    : primaryexp PARAM LSPAREN number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN\n                    | primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    params_unary : PARAMS params_array\n    \n    params_binary : primaryexp PARAMS params_array\n    \n    params_array    : LSPAREN RSPAREN\n                    | LSPAREN params_element RSPAREN\n    \n    params_element  : params_array_entry\n                    | params_array_entry COMMA params_element\n    \n    params_array_entry  : string\n                        | LSPAREN string COMMA primaryexp RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array COMMA number RSPAREN\n                        | LSPAREN string COMMA primaryexp COMMA array COMMA array RSPAREN\n    \n    vardefinition   : definition\n                    | arraydefinition\n    \n    assignment  : assignment_code code RBRACE\n                | definition EQUAL primaryexp\n                | variable EQUAL primaryexp\n    \n    assignment_code : definition EQUAL LBRACE\n                    | variable EQUAL LBRACE\n    \n    arraydefinition : PRIVATE stringarray\n    \n    definition  : PRIVATE PRIVATE_ID\n                | PRIVATE string\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    variable    : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID %prec VARIABLE\n    \n    binaryexp   : primaryexp BINARY_FNC primaryexp          %prec BINARY_OP\n                | primaryexp comparisonoperator primaryexp  %prec BINARY_OP\n                | primaryexp mathoperator primaryexp        %prec BINARY_OP\n                | getvariable_ns                            %prec BINARY_OP\n                | getvariable_any                           %prec BINARY_OP\n                | setvariable_ns                            %prec BINARY_OP\n                | setvariable_any                           %prec BINARY_OP\n                | param_binary                              %prec BINARY_OP\n                | params_binary                             %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | identifier                %prec VALUE\n                | helpertype                %prec VALUE\n                | array                     %prec VALUE\n                | unaryexp                  %prec UNARY_OP\n                | nularexp                  %prec NULAR_OP\n                | string                    %prec VALUE\n                | binaryexp                 %prec BINARY_OP\n                | bracedexp                 %prec BRACED_EXP\n                | LPAREN primaryexp RPAREN  %prec VALUE\n    \n    bracedexp   : LBRACE new_scope code RBRACE\n                | LBRACE RBRACE\n    new_scope :\n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : primaryexp\n                    | primaryexp COMMA arrayelement\n    \n    stringarray : LSPAREN RSPAREN\n                | LSPAREN stringarrayelement RSPAREN\n    \n    stringarrayelement  : string\n                        | string COMMA stringarrayelement\n    \n    nularexp    : NULAR_FNC     %prec NULAR_OP\n                | identifier    %prec NULAR_OP\n    \n    unaryexp    : UNARY_FNC primaryexp  %prec UNARY_OP\n                | PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | vardefinition         %prec UNARY_OP\n                | param_unary           %prec UNARY_OP\n                | params_unary          %prec UNARY_OP\n    \n    comparisonoperator  : LT            %prec COMPARISON_OP\n                        | GT            %prec COMPARISON_OP\n                        | LTE           %prec COMPARISON_OP\n                        | GTE           %prec COMPARISON_OP\n                        | EQUALITY      %prec COMPARISON_OP\n                        | INEQUALITY    %prec COMPARISON_OP\n                        | AND           %prec COMPARISON_OP\n                        | OR            %prec COMPARISON_OP\n    \n    mathoperator : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MOD\n                    | POW\n    \n    booleanexp  : primaryexp\n                | primaryexp comparisonoperator booleanexp\n                | primaryexp comparisonoperator LBRACE booleanexp RBRACE\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,31,32,33,39,44,45,46,47,48,53,58,59,60,61,62,64,65,66,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,116,117,118,119,123,127,129,132,133,136,137,138,139,141,142,143,144,148,149,151,152,153,154,156,157,159,162,165,168,172,188,189,194,197,199,200,206,208,209,210,230,235,237,239,245,247,252,256,262,266,268,271,276,277,281,282,285,286,],[-154,0,-1,-2,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-77,-94,-95,-96,-97,-98,-99,-121,-122,-127,-128,-129,-103,-87,-106,-88,-100,-102,-78,-149,-150,-151,-152,-153,-154,-9,-10,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-35,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-3,-79,-80,-91,-92,-93,-50,-67,-81,-31,-32,-38,-39,-37,-44,-109,-117,-48,-114,-68,-110,-118,-56,-69,-29,-45,-61,-30,-40,-47,-57,-51,-54,-62,-49,-52,-41,-24,-58,-55,-63,-53,-42,-43,-59,-60,-64,-65,]),'NULAR_FNC':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[25,25,25,25,25,25,25,-112,25,25,-9,-10,25,25,25,25,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,25,25,25,25,25,25,-82,-83,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'UNARY_FNC':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[27,27,27,27,27,27,27,-112,27,27,-9,-10,27,27,27,27,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,27,27,27,27,27,27,-82,-83,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PLUS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,45,46,47,48,50,53,57,58,59,60,61,62,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,113,114,115,116,117,118,119,123,125,127,129,130,131,132,133,136,139,140,141,142,143,144,148,149,150,153,154,155,158,159,160,162,165,168,169,172,176,178,185,188,189,194,195,197,199,200,201,202,204,205,206,207,209,213,214,215,216,218,220,221,223,224,225,227,228,230,231,233,235,236,237,239,243,245,246,247,252,258,262,264,266,268,271,276,277,281,282,285,286,],[28,-107,-105,-104,28,-77,84,-94,-95,-96,-97,-98,-99,-121,-101,28,28,28,28,-127,-128,-129,-17,-108,-18,-19,-103,28,-112,-87,-106,-88,-100,-102,28,-78,-20,-149,-150,-151,-152,-153,28,-9,-10,28,28,28,28,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,28,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,28,84,28,28,-111,-85,-86,-84,-113,84,-66,-28,28,28,-46,-36,-33,84,-82,84,84,84,-50,-67,84,-83,-103,84,28,28,-109,84,-117,-48,-114,28,-68,84,84,84,-110,-118,-56,28,-69,-29,-45,28,28,28,28,-61,28,-109,28,28,84,28,84,28,84,84,84,84,84,84,-57,84,28,-51,28,-54,-62,28,-49,28,-52,84,84,-58,28,-55,-63,-53,84,-43,-59,-60,-64,-65,]),'MINUS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,45,46,47,48,50,53,57,58,59,60,61,62,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,113,114,115,116,117,118,119,123,125,127,129,130,131,132,133,136,139,140,141,142,143,144,148,149,150,153,154,155,158,159,160,162,165,168,169,172,176,178,185,188,189,194,195,197,199,200,201,202,204,205,206,207,209,213,214,215,216,218,220,221,223,224,225,227,228,230,231,233,235,236,237,239,243,245,246,247,252,258,262,264,266,268,271,276,277,281,282,285,286,],[29,-107,-105,-104,29,-77,85,-94,-95,-96,-97,-98,-99,-121,-101,29,29,29,29,-127,-128,-129,-17,-108,-18,-19,-103,29,-112,-87,-106,-88,-100,-102,29,-78,-20,-149,-150,-151,-152,-153,29,-9,-10,29,29,29,29,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,29,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,29,85,29,29,-111,-85,-86,-84,-113,85,-66,-28,29,29,-46,-36,-33,85,-82,85,85,85,-50,-67,85,-83,-103,85,29,29,-109,85,-117,-48,-114,29,-68,85,85,85,-110,-118,-56,29,-69,-29,-45,29,29,29,29,-61,29,-109,29,29,85,29,85,29,85,85,85,85,85,85,-57,85,29,-51,29,-54,-62,29,-49,29,-52,85,85,-58,29,-55,-63,-53,85,-43,-59,-60,-64,-65,]),'NOT':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[30,30,30,30,30,30,30,-112,30,30,-9,-10,30,30,30,30,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,30,30,30,30,30,30,-82,-83,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'SWITCH':([0,15,42,64,65,66,115,140,150,158,220,],[41,41,-112,41,-9,-10,41,-82,-83,41,-112,]),'PRIVATE':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[43,43,43,43,43,43,43,-112,43,43,-9,-10,43,43,43,43,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,43,43,43,43,43,43,-82,-83,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'PRIVATE_ID':([0,15,27,28,29,30,40,42,43,50,54,55,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,222,233,236,243,246,264,],[44,44,97,97,97,97,97,-112,117,97,97,97,44,-9,-10,97,97,97,97,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,97,97,97,44,97,97,-82,-83,97,44,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'GLOBAL_ID':([0,15,27,28,29,30,40,42,50,54,55,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,222,233,236,243,246,264,],[46,46,98,98,98,98,98,-112,98,98,98,46,-9,-10,98,98,98,98,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,98,98,98,46,98,98,-82,-83,98,46,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'LPAREN':([0,15,27,28,29,30,40,41,42,50,54,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[40,40,40,40,40,40,40,114,-112,40,130,40,-9,-10,40,40,40,40,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,40,155,40,40,40,40,-82,-83,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'NAMESPACE':([0,15,27,28,29,30,40,42,50,63,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[49,49,49,49,49,49,49,-112,49,136,49,-9,-10,49,49,49,49,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,49,49,49,49,49,49,-82,-83,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'PARAM':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,45,46,47,48,50,53,57,58,59,60,61,62,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,113,114,115,116,117,118,119,123,125,127,129,130,131,132,133,136,139,140,141,142,143,144,148,149,150,153,154,155,158,159,160,162,165,168,169,172,176,178,185,188,189,194,195,197,199,200,201,202,204,205,206,207,209,213,214,215,216,218,220,221,223,224,225,227,228,230,231,233,235,236,237,239,243,245,246,247,252,258,262,264,266,268,271,276,277,281,282,285,286,],[51,-107,-105,-104,51,-77,74,-94,-95,-96,-97,-98,-99,-121,-101,51,51,51,51,-127,-128,-129,-17,-108,-18,-19,-103,51,-112,-87,-106,-88,-100,-102,51,-78,-20,-149,-150,-151,-152,-153,51,-9,-10,51,51,51,51,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,51,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,51,74,51,51,-111,-85,-86,-84,-113,74,-66,-28,51,51,-46,-36,-33,74,-82,-91,-92,-93,-50,-67,74,-83,-103,74,51,51,-109,74,-117,-48,-114,51,-68,74,74,74,-110,-118,-56,51,-69,-29,-45,51,51,51,51,-61,51,-109,51,51,74,51,-92,51,74,74,74,74,74,74,-57,74,51,-51,51,-54,-62,51,-49,51,-52,74,74,-58,51,-55,-63,-53,74,-43,-59,-60,-64,-65,]),'PARAMS':([0,6,7,8,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,42,44,45,46,47,48,50,53,57,58,59,60,61,62,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,113,114,115,116,117,118,119,123,125,127,129,130,131,132,133,136,139,140,141,142,143,144,148,149,150,153,154,155,158,159,160,162,165,168,169,172,176,178,185,188,189,194,195,197,199,200,201,202,204,205,206,207,209,213,214,215,216,218,220,221,223,224,225,227,228,230,231,233,235,236,237,239,243,245,246,247,252,258,262,264,266,268,271,276,277,281,282,285,286,],[52,-107,-105,-104,52,-77,75,-94,-95,-96,-97,-98,-99,-121,-101,52,52,52,52,-127,-128,-129,-17,-108,-18,-19,-103,52,-112,-87,-106,-88,-100,-102,52,-78,-20,-149,-150,-151,-152,-153,52,-9,-10,52,52,52,52,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,52,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,52,75,52,52,-111,-85,-86,-84,-113,75,-66,-28,52,52,-46,-36,-33,75,-82,-91,-92,-93,-50,-67,75,-83,-103,75,52,52,-109,75,-117,-48,-114,52,-68,75,75,75,-110,-118,-56,52,-69,-29,-45,52,52,52,52,-61,52,-109,52,52,75,52,-92,52,75,75,75,75,75,75,-57,75,52,-51,52,-54,-62,52,-49,52,-52,75,75,-58,52,-55,-63,-53,75,-43,-59,-60,-64,-65,]),'IF':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[54,54,54,54,54,54,54,-112,54,54,-9,-10,54,54,54,54,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,54,54,54,54,54,54,-82,-83,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'WHILE':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[55,55,55,55,55,55,55,-112,55,55,-9,-10,55,55,55,55,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,55,55,55,55,55,55,-82,-83,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'FOR':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[56,56,56,56,56,56,56,-112,56,56,-9,-10,56,56,56,56,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,56,56,56,56,56,56,-82,-83,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LBRACE':([0,15,27,28,29,30,38,40,42,50,54,55,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,107,108,109,110,111,114,115,130,131,135,140,150,155,158,169,180,184,195,201,202,204,205,207,211,213,214,216,220,222,233,236,243,244,246,253,264,270,],[42,42,42,42,42,42,42,42,-112,42,131,131,42,-9,-10,140,42,42,42,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,150,42,42,42,42,158,42,42,42,42,-34,-82,-83,42,42,42,158,42,42,220,42,42,42,42,226,42,42,42,42,131,42,42,42,42,42,158,42,42,]),'NUMBER_REAL':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,126,130,131,140,147,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,261,264,267,274,],[58,58,58,58,58,58,58,-112,58,58,-9,-10,58,58,58,58,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,58,58,58,58,58,58,58,-82,58,-83,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'NUMBER_EXP':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,126,130,131,140,147,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,261,264,267,274,],[59,59,59,59,59,59,59,-112,59,59,-9,-10,59,59,59,59,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,59,59,59,59,59,59,59,-82,59,-83,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'NUMBER_HEX':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,126,130,131,140,147,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,261,264,267,274,],[60,60,60,60,60,60,60,-112,60,60,-9,-10,60,60,60,60,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,60,60,60,60,60,60,60,-82,60,-83,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'LSPAREN':([0,15,27,28,29,30,40,42,43,50,51,52,56,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,121,122,128,130,131,134,140,150,155,158,169,195,198,201,202,204,205,207,213,214,216,220,229,233,236,238,243,246,249,261,264,267,274,],[50,50,50,50,50,50,50,-112,120,50,126,128,-112,50,-9,-10,50,50,50,50,145,146,147,128,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,50,50,50,50,166,167,171,50,50,180,-82,-83,50,50,50,50,171,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'STRING_SINGLE':([0,15,27,28,29,30,40,42,43,50,56,64,65,66,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,120,121,128,130,131,134,140,145,146,150,155,158,166,167,169,171,190,195,198,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[61,61,61,61,61,61,61,-112,61,61,-112,61,-9,-10,61,61,61,61,61,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,61,61,61,61,61,61,61,61,61,61,-82,61,61,-83,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'STRING_DOUBLE':([0,15,27,28,29,30,40,42,43,50,56,64,65,66,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,120,121,128,130,131,134,140,145,146,150,155,158,166,167,169,171,190,195,198,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[62,62,62,62,62,62,62,-112,62,62,-112,62,-9,-10,62,62,62,62,62,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,62,62,62,62,62,62,62,62,62,62,-82,62,62,-83,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'WITH':([0,15,27,28,29,30,40,42,50,64,65,66,68,69,70,71,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,109,114,115,130,131,140,150,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[63,63,63,63,63,63,63,-112,63,63,-9,-10,63,63,63,63,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,63,63,63,63,63,63,-82,-83,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,22,23,24,25,26,31,32,33,39,42,44,45,46,47,48,53,58,59,60,61,62,64,65,66,67,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,115,116,117,118,119,123,127,129,132,133,136,137,138,139,140,141,142,143,144,148,149,150,151,152,153,154,156,157,158,159,161,162,165,168,172,177,178,186,188,189,194,197,199,200,206,208,209,210,218,219,220,226,230,232,235,237,239,240,241,242,245,247,251,252,256,257,258,259,262,266,268,269,271,276,277,280,281,282,285,286,],[-1,-2,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-154,-77,-94,-95,-96,-97,-98,-99,-121,-122,-127,-128,-129,-103,116,-87,-106,-88,-100,-102,-78,-149,-150,-151,-152,-153,-154,-9,-10,138,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-35,-154,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-3,-79,-80,116,-91,-92,-93,-50,-67,-81,116,-31,-32,-38,-39,-37,-44,-154,-109,188,-117,-48,-114,-68,200,-144,210,-110,-118,-56,-69,-29,-45,-61,-30,-40,-47,-92,-145,116,-154,-57,251,-51,-54,-62,256,-25,-26,-49,-52,-146,-41,-24,-154,-22,-23,-58,-55,-63,-27,-53,-42,-43,-21,-59,-60,-64,-65,]),'SEMI_COLON':([3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,31,32,33,39,44,45,46,47,48,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,116,117,118,119,123,127,129,132,133,136,138,139,141,142,143,144,148,149,151,152,153,154,156,157,159,162,165,168,172,188,189,194,197,199,200,206,208,209,210,230,235,237,239,242,245,247,252,256,258,259,262,266,268,271,276,277,280,281,282,285,286,],[65,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-77,-94,-95,-96,-97,-98,-99,-121,-122,-127,-128,-129,-103,-87,-106,-88,-100,-102,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-35,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-79,-80,-91,-92,-93,-50,-67,-81,-31,-32,-38,-39,-37,-44,-109,-117,-48,-114,-68,-110,-118,-56,-69,-29,-45,-61,-30,-40,-47,-57,-51,-54,-62,65,-49,-52,-41,-24,-22,-23,-58,-55,-63,-53,-42,-43,-21,-59,-60,-64,-65,]),'COMMA':([3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,31,32,33,39,44,45,46,47,48,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,112,116,117,118,119,123,125,127,129,132,133,136,138,139,141,142,143,144,148,149,151,152,153,154,156,157,159,162,164,165,168,170,172,174,175,181,182,183,188,189,191,192,194,196,197,199,200,203,206,208,209,210,215,224,225,228,230,231,234,235,237,239,242,245,247,248,250,252,255,256,258,259,262,263,266,268,271,275,276,277,280,281,282,285,286,287,288,],[66,-4,-5,-6,-7,-8,-11,-12,-13,-14,-15,-16,-77,-94,-95,-96,-97,-98,-99,-121,-122,-127,-128,-129,-103,-87,-106,-88,-100,-102,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-35,-111,-85,-86,-84,-113,169,-66,-28,-46,-36,-33,-79,-80,-91,-92,-93,-50,-67,-81,-31,-32,-38,-39,-37,-44,-109,-117,190,-48,-114,195,-68,198,-72,204,205,207,-110,-118,213,214,-56,216,-69,-29,-45,222,-61,-30,-40,-47,229,236,238,246,-57,249,253,-51,-54,-62,66,-49,-52,261,-73,-41,267,-24,-22,-23,-58,274,-55,-63,-53,-74,-42,-43,-21,-59,-60,-64,-65,-76,-75,]),'BINARY_FNC':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,69,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,69,-111,-85,-86,-84,-113,69,-66,-28,-46,-36,-33,69,-91,-92,-93,-50,-67,69,-103,69,-109,69,-117,-48,-114,-68,69,69,69,-110,-118,-56,-69,-29,-45,-61,-109,69,-92,69,69,69,69,69,69,-57,69,-51,-54,-62,-49,-52,69,69,-58,-55,-63,-53,69,-43,-59,-60,-64,-65,]),'GETVARIABLE':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,49,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,72,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,121,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,72,-111,-85,-86,-84,-113,72,-66,-28,-46,-36,-33,72,-91,-92,-93,-50,-67,72,-103,72,-109,72,-117,-48,-114,-68,72,72,72,-110,-118,-56,-69,-29,-45,-61,-109,72,-92,72,72,72,72,72,72,-57,72,-51,-54,-62,-49,-52,72,72,-58,-55,-63,-53,72,-43,-59,-60,-64,-65,]),'SETVARIABLE':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,49,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,73,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,122,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,73,-111,-85,-86,-84,-113,73,-66,-28,-46,-36,-33,73,-91,-92,-93,-50,-67,73,-103,73,-109,73,-117,-48,-114,-68,73,73,73,-110,-118,-56,-69,-29,-45,-61,-109,73,-92,73,73,73,73,73,73,-57,73,-51,-54,-62,-49,-52,73,73,-58,-55,-63,-53,73,-43,-59,-60,-64,-65,]),'LT':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,76,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,76,-111,-85,-86,-84,-113,76,-66,-28,-46,-36,-33,76,-91,-92,-93,-50,-67,76,-103,76,-109,76,-117,-48,-114,-68,76,76,76,-110,-118,-56,-69,-29,-45,-61,-109,76,-92,76,76,76,76,76,76,-57,76,-51,-54,-62,-49,-52,76,76,-58,-55,-63,-53,76,-43,-59,-60,-64,-65,]),'GT':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,77,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,77,-111,-85,-86,-84,-113,77,-66,-28,-46,-36,-33,77,-91,-92,-93,-50,-67,77,-103,77,-109,77,-117,-48,-114,-68,77,77,77,-110,-118,-56,-69,-29,-45,-61,-109,77,-92,77,77,77,77,77,77,-57,77,-51,-54,-62,-49,-52,77,77,-58,-55,-63,-53,77,-43,-59,-60,-64,-65,]),'LTE':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,78,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,78,-111,-85,-86,-84,-113,78,-66,-28,-46,-36,-33,78,-91,-92,-93,-50,-67,78,-103,78,-109,78,-117,-48,-114,-68,78,78,78,-110,-118,-56,-69,-29,-45,-61,-109,78,-92,78,78,78,78,78,78,-57,78,-51,-54,-62,-49,-52,78,78,-58,-55,-63,-53,78,-43,-59,-60,-64,-65,]),'GTE':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,79,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,79,-111,-85,-86,-84,-113,79,-66,-28,-46,-36,-33,79,-91,-92,-93,-50,-67,79,-103,79,-109,79,-117,-48,-114,-68,79,79,79,-110,-118,-56,-69,-29,-45,-61,-109,79,-92,79,79,79,79,79,79,-57,79,-51,-54,-62,-49,-52,79,79,-58,-55,-63,-53,79,-43,-59,-60,-64,-65,]),'EQUALITY':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,80,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,80,-111,-85,-86,-84,-113,80,-66,-28,-46,-36,-33,80,-91,-92,-93,-50,-67,80,-103,80,-109,80,-117,-48,-114,-68,80,80,80,-110,-118,-56,-69,-29,-45,-61,-109,80,-92,80,80,80,80,80,80,-57,80,-51,-54,-62,-49,-52,80,80,-58,-55,-63,-53,80,-43,-59,-60,-64,-65,]),'INEQUALITY':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,81,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,81,-111,-85,-86,-84,-113,81,-66,-28,-46,-36,-33,81,-91,-92,-93,-50,-67,81,-103,81,-109,81,-117,-48,-114,-68,81,81,81,-110,-118,-56,-69,-29,-45,-61,-109,81,-92,81,81,81,81,81,81,-57,81,-51,-54,-62,-49,-52,81,81,-58,-55,-63,-53,81,-43,-59,-60,-64,-65,]),'AND':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,82,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,82,-111,-85,-86,-84,-113,82,-66,-28,-46,-36,-33,82,-91,-92,-93,-50,-67,82,-103,82,-109,82,-117,-48,-114,-68,82,82,82,-110,-118,-56,-69,-29,-45,-61,-109,82,-92,82,82,82,82,82,82,-57,82,-51,-54,-62,-49,-52,82,82,-58,-55,-63,-53,82,-43,-59,-60,-64,-65,]),'OR':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,83,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,83,-111,-85,-86,-84,-113,83,-66,-28,-46,-36,-33,83,-91,-92,-93,-50,-67,83,-103,83,-109,83,-117,-48,-114,-68,83,83,83,-110,-118,-56,-69,-29,-45,-61,-109,83,-92,83,83,83,83,83,83,-57,83,-51,-54,-62,-49,-52,83,83,-58,-55,-63,-53,83,-43,-59,-60,-64,-65,]),'TIMES':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,86,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,86,-111,-85,-86,-84,-113,86,-66,-28,-46,-36,-33,86,86,86,86,-50,-67,86,-103,86,-109,86,-117,-48,-114,-68,86,86,86,-110,-118,-56,-69,-29,-45,-61,-109,86,86,86,86,86,86,86,86,-57,86,-51,-54,-62,-49,-52,86,86,-58,-55,-63,-53,86,-43,-59,-60,-64,-65,]),'DIVIDE':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,87,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,87,-111,-85,-86,-84,-113,87,-66,-28,-46,-36,-33,87,87,87,87,-50,-67,87,-103,87,-109,87,-117,-48,-114,-68,87,87,87,-110,-118,-56,-69,-29,-45,-61,-109,87,87,87,87,87,87,87,87,-57,87,-51,-54,-62,-49,-52,87,87,-58,-55,-63,-53,87,-43,-59,-60,-64,-65,]),'MOD':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,88,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,88,-111,-85,-86,-84,-113,88,-66,-28,-46,-36,-33,88,88,88,88,-50,-67,88,-103,88,-109,88,-117,-48,-114,-68,88,88,88,-110,-118,-56,-69,-29,-45,-61,-109,88,88,88,88,88,88,88,88,-57,88,-51,-54,-62,-49,-52,88,88,-58,-55,-63,-53,88,-43,-59,-60,-64,-65,]),'POW':([6,7,8,16,17,19,20,21,22,23,24,25,26,31,32,33,34,35,36,37,39,44,45,46,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,125,127,129,132,133,136,139,141,142,143,144,148,149,153,154,159,160,162,165,168,172,176,178,185,188,189,194,197,199,200,206,209,215,218,221,223,224,225,227,228,230,231,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-107,-105,-104,-77,89,-94,-95,-96,-97,-98,-99,-121,-101,-127,-128,-129,-17,-108,-18,-19,-103,-87,-106,-88,-100,-102,-78,-20,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,89,-111,-85,-86,-84,-113,89,-66,-28,-46,-36,-33,89,89,89,89,-50,-67,89,-103,89,-109,89,-117,-48,-114,-68,89,89,89,-110,-118,-56,-69,-29,-45,-61,-109,89,89,89,89,89,89,89,89,-57,89,-51,-54,-62,-49,-52,89,89,-58,-55,-63,-53,89,-43,-59,-60,-64,-65,]),'EQUAL':([16,18,44,46,61,62,117,118,],[68,90,-89,-90,-152,-153,-85,-86,]),'RPAREN':([19,20,21,22,23,24,25,31,32,33,39,45,47,48,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,113,116,117,118,119,123,127,129,132,133,136,141,142,143,144,148,159,160,162,165,168,172,176,185,188,189,194,197,199,200,206,230,235,237,239,245,247,252,262,266,268,271,276,277,281,282,285,286,],[-94,-95,-96,-97,-98,-99,-121,-127,-128,-129,-103,-106,-100,-102,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,159,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-91,-92,-93,-50,-67,-109,187,-117,-48,-114,-68,199,209,-110,-118,-56,-69,-29,-45,-61,-57,-51,-54,-62,-49,-52,-41,-58,-55,-63,-53,-42,-43,-59,-60,-64,-65,]),'RSPAREN':([19,20,21,22,23,24,25,31,32,33,39,45,47,48,50,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,117,118,119,120,123,124,125,127,128,129,132,133,136,141,142,143,144,148,159,162,163,164,165,168,170,172,173,174,175,178,183,188,189,193,194,197,199,200,206,210,212,215,217,218,219,223,224,225,227,228,230,231,235,237,239,245,247,248,250,251,252,254,255,260,262,263,265,266,268,271,272,273,275,276,277,278,279,281,282,283,284,285,286,287,288,],[-94,-95,-96,-97,-98,-99,-121,-127,-128,-129,-103,-106,-100,-102,123,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-111,-85,-86,-84,162,-113,168,-115,-66,172,-28,-46,-36,-33,-91,-92,-93,-50,-67,-109,-117,189,-119,-48,-114,194,-68,197,-70,-72,-144,206,-110,-118,-116,-56,-69,-29,-45,-61,-47,-120,230,-71,-92,-145,235,237,239,245,247,-57,250,-51,-54,-62,-49,-52,262,-73,-146,-41,266,268,271,-58,275,277,-55,-63,-53,281,282,-74,-42,-43,285,286,-59,-60,287,288,-64,-65,-76,-75,]),'TO':([19,20,21,22,23,24,25,31,32,33,39,45,47,48,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,117,118,119,123,127,129,132,133,136,141,142,143,144,148,159,162,165,168,172,188,189,194,197,199,200,206,221,230,235,237,239,245,247,252,262,266,268,271,276,277,281,282,285,286,],[-94,-95,-96,-97,-98,-99,-121,-127,-128,-129,-103,-106,-100,-102,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-91,-92,-93,-50,-67,-109,-117,-48,-114,-68,-110,-118,-56,-69,-29,-45,-61,233,-57,-51,-54,-62,-49,-52,-41,-58,-55,-63,-53,-42,-43,-59,-60,-64,-65,]),'STEP':([19,20,21,22,23,24,25,31,32,33,39,45,47,48,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,117,118,119,123,127,129,132,133,136,141,142,143,144,148,159,162,165,168,172,188,189,194,197,199,200,206,230,235,237,239,245,247,252,262,266,268,271,276,277,281,282,285,286,],[-94,-95,-96,-97,-98,-99,-121,-127,-128,-129,-103,-106,-100,-102,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-91,-92,-93,-50,-67,-109,-117,-48,-114,-68,-110,-118,-56,-69,-29,-45,-61,-57,-51,-54,-62,-49,-52,264,-58,-55,-63,-53,-42,-43,-59,-60,-64,-65,]),'DO':([19,20,21,22,23,24,25,31,32,33,36,37,39,45,47,48,53,57,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,117,118,119,123,127,129,132,133,136,141,142,143,144,148,159,162,165,168,172,187,188,189,194,197,199,200,206,230,235,237,239,245,247,252,262,266,268,271,276,277,281,282,285,286,],[-94,-95,-96,-97,-98,-99,-121,-127,-128,-129,110,111,-103,-106,-100,-102,-78,135,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-91,-92,-93,-50,-67,-109,-117,-48,-114,-68,211,-110,-118,-56,-69,-29,-45,-61,-57,-51,-54,-62,-49,-52,-41,-58,-55,-63,-53,-42,-43,-59,-60,-64,-65,]),'COLON':([19,20,21,22,23,24,25,31,32,33,39,45,47,48,53,58,59,60,61,62,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,117,118,119,123,127,129,132,133,136,141,142,143,144,148,159,162,165,168,172,188,189,194,197,199,200,206,230,235,237,239,245,247,252,258,262,266,268,271,276,277,281,282,285,286,],[-94,-95,-96,-97,-98,-99,-121,-127,-128,-129,-103,-106,-100,-102,-78,-149,-150,-151,-152,-153,-123,-101,-104,-105,-107,-108,-87,-88,-17,-18,-19,-20,-77,-124,-125,-126,-111,-85,-86,-84,-113,-66,-28,-46,-36,-33,-91,-92,-93,-50,-67,-109,-117,-48,-114,-68,-110,-118,-56,-69,-29,-45,-61,-57,-51,-54,-62,-49,-52,-41,270,-58,-55,-63,-53,-42,-43,-59,-60,-64,-65,]),'THEN':([34,97,98,129,132,199,200,],[107,-87,-88,-28,-46,-29,-45,]),'EXITWITH':([34,97,98,129,132,199,200,],[108,-87,-88,-28,-46,-29,-45,]),'FOREACH':([35,116,188,],[109,-111,-110,]),'FROM':([61,62,179,],[-152,-153,202,]),'CASE':([65,66,226,257,],[-9,-10,243,243,]),'DEFAULT':([65,66,226,257,],[-9,-10,244,244,]),'ELSE':([116,151,188,],[-111,184,-110,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,15,64,115,158,],[1,67,137,161,186,]),'empty':([0,15,64,115,158,226,257,],[2,2,2,2,2,241,241,]),'statement':([0,15,64,115,158,],[3,3,3,3,3,]),'controlstructure':([0,15,64,115,158,],[4,4,4,4,4,]),'assignment':([0,15,64,115,158,],[5,5,5,5,5,]),'binaryexp':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[6,6,95,95,95,95,95,95,6,95,95,95,95,95,95,95,6,95,95,95,6,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'nularexp':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[7,7,94,94,94,94,94,94,7,94,94,94,94,94,94,94,7,94,94,94,7,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'unaryexp':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[8,8,93,93,93,93,93,93,8,93,93,93,93,93,93,93,8,93,93,93,8,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'ifstatement':([0,15,64,115,158,],[9,9,9,9,9,]),'whileloop':([0,15,64,115,158,],[10,10,10,10,10,]),'forloop':([0,15,64,115,158,],[11,11,11,11,11,]),'withstatement':([0,15,64,115,158,],[12,12,12,12,12,]),'foreachloop':([0,15,64,115,158,],[13,13,13,13,13,]),'switchstatement':([0,15,64,115,158,],[14,14,14,14,14,]),'assignment_code':([0,15,64,115,158,],[15,15,15,15,15,]),'definition':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[16,16,103,103,103,103,103,103,16,103,103,103,103,103,103,103,16,103,103,103,16,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'primaryexp':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[17,17,91,104,105,106,113,125,17,139,141,142,143,149,154,160,17,176,178,185,17,125,215,218,221,223,224,225,227,228,231,178,252,178,258,178,276,]),'variable':([0,15,64,115,158,],[18,18,18,18,18,]),'getvariable_ns':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'getvariable_any':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'setvariable_ns':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'setvariable_any':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'param_binary':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'params_binary':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'identifier':([0,15,27,28,29,30,40,50,54,55,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,222,233,236,243,246,264,],[26,26,92,92,92,92,92,92,132,132,26,92,92,92,92,92,92,92,26,92,92,92,26,92,92,92,92,92,92,92,92,92,92,92,132,92,92,92,92,92,]),'vardefinition':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'param_unary':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'params_unary':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'iftype':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[34,34,99,99,99,99,99,99,34,99,99,99,99,99,99,99,34,99,99,99,34,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'bracedexp':([0,15,27,28,29,30,38,40,50,64,68,69,70,71,90,107,108,109,110,114,115,130,131,155,158,169,184,195,201,202,204,205,207,213,214,216,220,233,236,243,244,246,264,270,],[35,35,96,96,96,96,112,96,96,35,96,96,96,96,96,151,152,96,156,96,35,96,96,96,35,96,208,96,96,96,96,96,96,96,96,96,96,96,96,96,259,96,96,280,]),'whiletype':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[36,36,100,100,100,100,100,100,36,100,100,100,100,100,100,100,36,100,100,100,36,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'fortype':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[37,37,101,101,101,101,101,101,37,101,101,101,101,101,101,101,37,101,101,101,37,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'withstatementinit':([0,15,64,115,158,],[38,38,38,38,38,]),'array':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,229,233,236,238,243,246,249,261,264,267,274,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,153,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,248,39,39,255,39,39,263,273,39,279,283,]),'string':([0,15,27,28,29,30,40,43,50,64,68,69,70,71,72,90,109,114,115,120,121,128,130,131,134,145,146,155,158,166,167,169,171,190,195,198,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[45,45,45,45,45,45,45,118,45,45,45,45,45,45,144,45,45,45,45,164,165,175,45,45,179,181,182,45,45,191,192,45,196,164,45,175,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'number':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,126,130,131,147,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,261,264,267,274,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,170,47,47,183,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,272,47,278,284,]),'helpertype':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'arraydefinition':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'withtype':([0,15,27,28,29,30,40,50,64,68,69,70,71,90,109,114,115,130,131,155,158,169,195,201,202,204,205,207,213,214,216,220,233,236,243,246,264,],[57,57,102,102,102,102,102,102,57,102,102,102,102,102,102,102,57,102,102,102,57,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'terminator':([3,242,],[64,257,]),'comparisonoperator':([17,91,104,105,106,113,125,139,141,142,143,149,154,160,176,178,185,215,218,221,223,224,225,227,228,231,252,258,276,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,201,70,70,201,70,70,70,70,70,70,70,70,70,70,]),'mathoperator':([17,91,104,105,106,113,125,139,141,142,143,149,154,160,176,178,185,215,218,221,223,224,225,227,228,231,252,258,276,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'new_scope':([42,56,140,150,220,],[115,134,115,115,115,]),'stringarray':([43,],[119,]),'arrayelement':([50,169,],[124,193,]),'params_array':([52,75,],[127,148,]),'forloop_condition':([54,55,222,],[129,133,234,]),'bracedexp_noscope':([111,180,253,],[157,203,265,]),'stringarrayelement':([120,190,],[163,212,]),'params_element':([128,198,],[173,217,]),'params_array_entry':([128,198,],[174,174,]),'booleanexp':([131,201,220,236,246,],[177,219,232,254,260,]),'switchbody':([226,257,],[240,269,]),'case':([226,257,],[242,242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc.py',36),
  ('code -> statement','code',1,'p_code','sqf_yacc.py',37),
  ('code -> statement terminator code','code',3,'p_code','sqf_yacc.py',38),
  ('statement -> controlstructure','statement',1,'p_statement','sqf_yacc.py',45),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc.py',46),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc.py',47),
  ('statement -> nularexp','statement',1,'p_statement','sqf_yacc.py',48),
  ('statement -> unaryexp','statement',1,'p_statement','sqf_yacc.py',49),
  ('terminator -> SEMI_COLON','terminator',1,'p_terminator','sqf_yacc.py',56),
  ('terminator -> COMMA','terminator',1,'p_terminator','sqf_yacc.py',57),
  ('controlstructure -> ifstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',71),
  ('controlstructure -> whileloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',72),
  ('controlstructure -> forloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',73),
  ('controlstructure -> withstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',74),
  ('controlstructure -> foreachloop','controlstructure',1,'p_controlstructure','sqf_yacc.py',75),
  ('controlstructure -> switchstatement','controlstructure',1,'p_controlstructure','sqf_yacc.py',76),
  ('helpertype -> iftype','helpertype',1,'p_helpertype','sqf_yacc.py',83),
  ('helpertype -> whiletype','helpertype',1,'p_helpertype','sqf_yacc.py',84),
  ('helpertype -> fortype','helpertype',1,'p_helpertype','sqf_yacc.py',85),
  ('helpertype -> withtype','helpertype',1,'p_helpertype','sqf_yacc.py',86),
  ('case -> CASE primaryexp COLON bracedexp','case',4,'p_case','sqf_yacc.py',93),
  ('case -> CASE primaryexp','case',2,'p_case','sqf_yacc.py',94),
  ('case -> DEFAULT bracedexp','case',2,'p_case','sqf_yacc.py',95),
  ('switchstatement -> SWITCH LPAREN primaryexp RPAREN DO LBRACE switchbody RBRACE','switchstatement',8,'p_switchstatement','sqf_yacc.py',101),
  ('switchbody -> empty','switchbody',1,'p_switchbody','sqf_yacc.py',107),
  ('switchbody -> case','switchbody',1,'p_switchbody','sqf_yacc.py',108),
  ('switchbody -> case terminator switchbody','switchbody',3,'p_switchbody','sqf_yacc.py',109),
  ('iftype -> IF forloop_condition','iftype',2,'p_iftype','sqf_yacc.py',115),
  ('iftype -> IF LPAREN primaryexp RPAREN','iftype',4,'p_iftype','sqf_yacc.py',116),
  ('ifstatement -> iftype THEN bracedexp ELSE bracedexp','ifstatement',5,'p_ifstatement','sqf_yacc.py',123),
  ('ifstatement -> iftype THEN bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',124),
  ('ifstatement -> iftype EXITWITH bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc.py',125),
  ('withtype -> WITH NAMESPACE','withtype',2,'p_withtype','sqf_yacc.py',132),
  ('withstatementinit -> withtype DO','withstatementinit',2,'p_withstatementinit','sqf_yacc.py',139),
  ('withstatement -> withstatementinit bracedexp','withstatement',2,'p_withstatement','sqf_yacc.py',149),
  ('whiletype -> WHILE forloop_condition','whiletype',2,'p_whiletype','sqf_yacc.py',156),
  ('whileloop -> whiletype DO bracedexp','whileloop',3,'p_whileloop','sqf_yacc.py',162),
  ('foreachloop -> bracedexp FOREACH array','foreachloop',3,'p_foreachloop','sqf_yacc.py',169),
  ('foreachloop -> bracedexp FOREACH primaryexp','foreachloop',3,'p_foreachloop','sqf_yacc.py',170),
  ('foreachloop -> bracedexp FOREACH LPAREN primaryexp RPAREN','foreachloop',5,'p_foreachloop','sqf_yacc.py',171),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp','fortype',7,'p_fortype','sqf_yacc.py',177),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp','fortype',9,'p_fortype','sqf_yacc.py',178),
  ('fortype -> FOR new_scope LSPAREN bracedexp_noscope COMMA forloop_condition COMMA bracedexp_noscope RSPAREN','fortype',9,'p_fortype','sqf_yacc.py',179),
  ('forloop -> fortype DO bracedexp_noscope','forloop',3,'p_forloop','sqf_yacc.py',201),
  ('forloop_condition -> LBRACE booleanexp RBRACE','forloop_condition',3,'p_bracedexp_condition','sqf_yacc.py',209),
  ('forloop_condition -> identifier','forloop_condition',1,'p_bracedexp_condition','sqf_yacc.py',210),
  ('bracedexp_noscope -> LBRACE code RBRACE','bracedexp_noscope',3,'p_bracedexp_noscope','sqf_yacc.py',220),
  ('getvariable_ns -> NAMESPACE GETVARIABLE string','getvariable_ns',3,'p_getvariable_ns','sqf_yacc.py',227),
  ('getvariable_ns -> NAMESPACE GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_ns',7,'p_getvariable_ns','sqf_yacc.py',228),
  ('getvariable_any -> primaryexp GETVARIABLE string','getvariable_any',3,'p_getvariable_any','sqf_yacc.py',251),
  ('getvariable_any -> primaryexp GETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','getvariable_any',7,'p_getvariable_any','sqf_yacc.py',252),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_ns',7,'p_setvariable_ns','sqf_yacc.py',260),
  ('setvariable_ns -> NAMESPACE SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_ns',9,'p_setvariable_ns','sqf_yacc.py',261),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp RSPAREN','setvariable_any',7,'p_setvariable_any','sqf_yacc.py',270),
  ('setvariable_any -> primaryexp SETVARIABLE LSPAREN string COMMA primaryexp COMMA booleanexp RSPAREN','setvariable_any',9,'p_setvariable_any','sqf_yacc.py',271),
  ('param_unary -> PARAM LSPAREN number RSPAREN','param_unary',4,'p_param_unary','sqf_yacc.py',279),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp RSPAREN','param_unary',6,'p_param_unary','sqf_yacc.py',280),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_unary',8,'p_param_unary','sqf_yacc.py',281),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_unary',10,'p_param_unary','sqf_yacc.py',282),
  ('param_unary -> PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_unary',10,'p_param_unary','sqf_yacc.py',283),
  ('param_binary -> primaryexp PARAM LSPAREN number RSPAREN','param_binary',5,'p_param_binary','sqf_yacc.py',293),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp RSPAREN','param_binary',7,'p_param_binary','sqf_yacc.py',294),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array RSPAREN','param_binary',9,'p_param_binary','sqf_yacc.py',295),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA number RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',296),
  ('param_binary -> primaryexp PARAM LSPAREN number COMMA primaryexp COMMA array COMMA array RSPAREN','param_binary',11,'p_param_binary','sqf_yacc.py',297),
  ('params_unary -> PARAMS params_array','params_unary',2,'p_params_unary','sqf_yacc.py',307),
  ('params_binary -> primaryexp PARAMS params_array','params_binary',3,'p_params_binary','sqf_yacc.py',313),
  ('params_array -> LSPAREN RSPAREN','params_array',2,'p_params_array','sqf_yacc.py',319),
  ('params_array -> LSPAREN params_element RSPAREN','params_array',3,'p_params_array','sqf_yacc.py',320),
  ('params_element -> params_array_entry','params_element',1,'p_params_array_element','sqf_yacc.py',330),
  ('params_element -> params_array_entry COMMA params_element','params_element',3,'p_params_array_element','sqf_yacc.py',331),
  ('params_array_entry -> string','params_array_entry',1,'p_params_array_entry','sqf_yacc.py',344),
  ('params_array_entry -> LSPAREN string COMMA primaryexp RSPAREN','params_array_entry',5,'p_params_array_entry','sqf_yacc.py',345),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array RSPAREN','params_array_entry',7,'p_params_array_entry','sqf_yacc.py',346),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array COMMA number RSPAREN','params_array_entry',9,'p_params_array_entry','sqf_yacc.py',347),
  ('params_array_entry -> LSPAREN string COMMA primaryexp COMMA array COMMA array RSPAREN','params_array_entry',9,'p_params_array_entry','sqf_yacc.py',348),
  ('vardefinition -> definition','vardefinition',1,'p_vardefinition','sqf_yacc.py',368),
  ('vardefinition -> arraydefinition','vardefinition',1,'p_vardefinition','sqf_yacc.py',369),
  ('assignment -> assignment_code code RBRACE','assignment',3,'p_assignment','sqf_yacc.py',375),
  ('assignment -> definition EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',376),
  ('assignment -> variable EQUAL primaryexp','assignment',3,'p_assignment','sqf_yacc.py',377),
  ('assignment_code -> definition EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',394),
  ('assignment_code -> variable EQUAL LBRACE','assignment_code',3,'p_assignment_code','sqf_yacc.py',395),
  ('arraydefinition -> PRIVATE stringarray','arraydefinition',2,'p_arraydefinition','sqf_yacc.py',404),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc.py',422),
  ('definition -> PRIVATE string','definition',2,'p_definition','sqf_yacc.py',423),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc.py',442),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc.py',443),
  ('variable -> PRIVATE_ID','variable',1,'p_variable','sqf_yacc.py',465),
  ('variable -> GLOBAL_ID','variable',1,'p_variable','sqf_yacc.py',466),
  ('binaryexp -> primaryexp BINARY_FNC primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',473),
  ('binaryexp -> primaryexp comparisonoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',474),
  ('binaryexp -> primaryexp mathoperator primaryexp','binaryexp',3,'p_binaryexp','sqf_yacc.py',475),
  ('binaryexp -> getvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',476),
  ('binaryexp -> getvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',477),
  ('binaryexp -> setvariable_ns','binaryexp',1,'p_binaryexp','sqf_yacc.py',478),
  ('binaryexp -> setvariable_any','binaryexp',1,'p_binaryexp','sqf_yacc.py',479),
  ('binaryexp -> param_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',480),
  ('binaryexp -> params_binary','binaryexp',1,'p_binaryexp','sqf_yacc.py',481),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc.py',487),
  ('primaryexp -> identifier','primaryexp',1,'p_primaryexp','sqf_yacc.py',488),
  ('primaryexp -> helpertype','primaryexp',1,'p_primaryexp','sqf_yacc.py',489),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc.py',490),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',491),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',492),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc.py',493),
  ('primaryexp -> binaryexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',494),
  ('primaryexp -> bracedexp','primaryexp',1,'p_primaryexp','sqf_yacc.py',495),
  ('primaryexp -> LPAREN primaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc.py',496),
  ('bracedexp -> LBRACE new_scope code RBRACE','bracedexp',4,'p_bracedexp','sqf_yacc.py',506),
  ('bracedexp -> LBRACE RBRACE','bracedexp',2,'p_bracedexp','sqf_yacc.py',507),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','sqf_yacc.py',515),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc.py',521),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc.py',522),
  ('arrayelement -> primaryexp','arrayelement',1,'p_arrayelement','sqf_yacc.py',532),
  ('arrayelement -> primaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc.py',533),
  ('stringarray -> LSPAREN RSPAREN','stringarray',2,'p_stringarray','sqf_yacc.py',546),
  ('stringarray -> LSPAREN stringarrayelement RSPAREN','stringarray',3,'p_stringarray','sqf_yacc.py',547),
  ('stringarrayelement -> string','stringarrayelement',1,'p_stringarrayelement','sqf_yacc.py',557),
  ('stringarrayelement -> string COMMA stringarrayelement','stringarrayelement',3,'p_stringarrayelement','sqf_yacc.py',558),
  ('nularexp -> NULAR_FNC','nularexp',1,'p_nularexp','sqf_yacc.py',571),
  ('nularexp -> identifier','nularexp',1,'p_nularexp','sqf_yacc.py',572),
  ('unaryexp -> UNARY_FNC primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',579),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',580),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',581),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc.py',582),
  ('unaryexp -> vardefinition','unaryexp',1,'p_unaryexp','sqf_yacc.py',583),
  ('unaryexp -> param_unary','unaryexp',1,'p_unaryexp','sqf_yacc.py',584),
  ('unaryexp -> params_unary','unaryexp',1,'p_unaryexp','sqf_yacc.py',585),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',591),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',592),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',593),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',594),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',595),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',596),
  ('comparisonoperator -> AND','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',597),
  ('comparisonoperator -> OR','comparisonoperator',1,'p_comparisonoperator','sqf_yacc.py',598),
  ('mathoperator -> PLUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',605),
  ('mathoperator -> MINUS','mathoperator',1,'p_mathoperator','sqf_yacc.py',606),
  ('mathoperator -> TIMES','mathoperator',1,'p_mathoperator','sqf_yacc.py',607),
  ('mathoperator -> DIVIDE','mathoperator',1,'p_mathoperator','sqf_yacc.py',608),
  ('mathoperator -> MOD','mathoperator',1,'p_mathoperator','sqf_yacc.py',609),
  ('mathoperator -> POW','mathoperator',1,'p_mathoperator','sqf_yacc.py',610),
  ('booleanexp -> primaryexp','booleanexp',1,'p_booleanexp','sqf_yacc.py',617),
  ('booleanexp -> primaryexp comparisonoperator booleanexp','booleanexp',3,'p_booleanexp','sqf_yacc.py',618),
  ('booleanexp -> primaryexp comparisonoperator LBRACE booleanexp RBRACE','booleanexp',5,'p_booleanexp','sqf_yacc.py',619),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc.py',625),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc.py',626),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc.py',633),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc.py',634),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc.py',635),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc.py',642),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc.py',643),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc.py',650),
]
