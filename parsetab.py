
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftSELECTleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BOOL COLON COMMA COMMENT_MULTI COMMENT_SINGLE DIVIDE EQUAL EQUALITY GLOBAL_ID GT GTE INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NEWLINE NOT NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SELECT SEMI_COLON STRING_DOUBLE STRING_SINGLE TIMES\n    code    : empty\n            | statement\n            | statement SEMI_COLON code\n    \n    statement   : assignment\n                | binaryexp\n    \n    assignment  : definition EQUAL binaryexp\n                | identifier EQUAL binaryexp\n    \n    definition : PRIVATE PRIVATE_ID\n    \n    binaryexp   : binaryexp operator binaryexp  %prec BINARY_OP\n                | primaryexp                    %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | unaryexp\n                | nularexp\n                | variable                  %prec VALUE\n                | string                    %prec VALUE\n                | lbrace code rbrace        %prec BRACED_EXP\n                | LPAREN binaryexp RPAREN   %prec BRACED_EXP\n                | array                     %prec VALUE\n    \n    lbrace : LBRACE\n    \n    rbrace : RBRACE\n    \n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : binaryexp\n                    | binaryexp COMMA arrayelement\n    \n    nularexp : operator %prec NULAR_OP\n    \n    unaryexp    : PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | identifier primaryexp %prec UNARY_OP\n    \n    variable : identifier\n    \n    operator    : identifier\n                | punctuation\n    \n    punctuation : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MOD\n                | POW\n                | SELECT\n                | COLON\n                | comparisonoperator    %prec COMPARISON_OP\n                | AND\n                | OR\n                | configaccessor\n    \n    comparisonoperator  : LT\n                        | GT\n                        | LTE\n                        | GTE\n                        | EQUALITY\n                        | INEQUALITY\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,7,8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,56,60,61,62,63,66,67,68,69,70,71,72,73,74,],[-60,0,-1,-2,-4,-5,-30,-25,-10,-53,-54,-11,-12,-13,-14,-15,-18,-55,-56,-57,-33,-34,-58,-59,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-60,-30,-29,-26,-27,-28,-21,-51,-3,-9,-6,-7,-16,-20,-17,-22,]),'PRIVATE':([0,18,29,48,],[10,10,-19,10,]),'PRIVATE_ID':([0,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[11,11,11,-25,-10,57,-53,-54,-11,-12,-13,-14,-15,11,11,-18,-55,-56,-57,-33,-34,11,-58,-59,-19,11,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,11,11,-31,-33,-34,11,11,11,-29,11,-26,-27,-28,-21,11,-51,-9,11,11,-16,-20,-17,-22,11,]),'GLOBAL_ID':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[12,12,12,-25,-10,-53,-54,-11,-12,-13,-14,-15,12,12,-18,-55,-56,-57,-33,-34,12,-58,-59,-19,12,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,12,12,-31,-33,-34,12,12,12,-29,12,-26,-27,-28,-21,12,-51,-9,12,12,-16,-20,-17,-22,12,]),'LPAREN':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[19,19,-53,-54,19,19,19,19,19,-19,19,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,19,19,-31,-33,-34,19,19,19,-51,19,]),'NUMBER_REAL':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[21,21,-53,-54,21,21,21,21,21,-19,21,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,21,21,-31,-33,-34,21,21,21,-51,21,]),'NUMBER_EXP':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[22,22,-53,-54,22,22,22,22,22,-19,22,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,22,22,-31,-33,-34,22,22,22,-51,22,]),'NUMBER_HEX':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[23,23,-53,-54,23,23,23,23,23,-19,23,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,23,23,-31,-33,-34,23,23,23,-51,23,]),'PLUS':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[24,51,24,-25,-10,-53,-54,-11,-12,-13,-14,-15,24,24,-18,-55,-56,-57,-33,-34,24,-58,-59,-19,24,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,24,24,-31,-33,-34,24,24,24,-29,51,-26,-27,-28,-21,51,-51,51,51,51,-16,-20,-17,-22,24,]),'MINUS':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[25,52,25,-25,-10,-53,-54,-11,-12,-13,-14,-15,25,25,-18,-55,-56,-57,-33,-34,25,-58,-59,-19,25,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,25,25,-31,-33,-34,25,25,25,-29,52,-26,-27,-28,-21,52,-51,52,52,52,-16,-20,-17,-22,25,]),'NOT':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[26,26,-53,-54,26,26,26,26,26,-19,26,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,26,26,-31,-33,-34,26,26,26,-51,26,]),'STRING_SINGLE':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[27,27,-53,-54,27,27,27,27,27,-19,27,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,27,27,-31,-33,-34,27,27,27,-51,27,]),'STRING_DOUBLE':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[28,28,-53,-54,28,28,28,28,28,-19,28,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,28,28,-31,-33,-34,28,28,28,-51,28,]),'LBRACE':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[29,29,-53,-54,29,29,29,29,29,-19,29,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,29,29,-31,-33,-34,29,29,29,-51,29,]),'LSPAREN':([0,7,11,12,18,19,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,66,75,],[30,30,-53,-54,30,30,30,30,30,-19,30,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,30,30,-31,-33,-34,30,30,30,-51,30,]),'TIMES':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[32,32,32,-25,-10,-53,-54,-11,-12,-13,-14,-15,32,32,-18,-55,-56,-57,32,32,32,-58,-59,-19,32,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,32,32,-31,-33,-34,32,32,32,-29,32,-26,-27,-28,-21,32,-51,32,32,32,-16,-20,-17,-22,32,]),'DIVIDE':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[33,33,33,-25,-10,-53,-54,-11,-12,-13,-14,-15,33,33,-18,-55,-56,-57,33,33,33,-58,-59,-19,33,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,33,33,-31,-33,-34,33,33,33,-29,33,-26,-27,-28,-21,33,-51,33,33,33,-16,-20,-17,-22,33,]),'MOD':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[34,34,34,-25,-10,-53,-54,-11,-12,-13,-14,-15,34,34,-18,-55,-56,-57,34,34,34,-58,-59,-19,34,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,34,34,-31,-33,-34,34,34,34,-29,34,-26,-27,-28,-21,34,-51,34,34,34,-16,-20,-17,-22,34,]),'POW':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[35,35,35,-25,-10,-53,-54,-11,-12,-13,-14,-15,35,35,-18,-55,-56,-57,35,35,35,-58,-59,-19,35,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,35,35,-31,-33,-34,35,35,35,-29,35,-26,-27,-28,-21,35,-51,35,35,35,-16,-20,-17,-22,35,]),'SELECT':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[36,36,36,-25,-10,-53,-54,-11,-12,-13,-14,-15,36,36,-18,-55,-56,-57,36,36,36,-58,-59,-19,36,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,36,36,-31,-33,-34,36,36,36,-29,36,-26,-27,-28,-21,36,-51,36,36,36,-16,-20,-17,-22,36,]),'COLON':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[37,37,37,-25,-10,-53,-54,-11,-12,-13,-14,-15,37,37,-18,-55,-56,-57,-33,-34,37,-58,-59,-19,37,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,37,37,-31,-33,-34,37,37,37,-29,37,-26,-27,-28,-21,37,-51,-9,37,37,-16,-20,-17,-22,37,]),'AND':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[39,39,39,-25,-10,-53,-54,-11,-12,-13,-14,-15,39,39,-18,-55,-56,-57,-33,-34,39,-58,-59,-19,39,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,39,39,-31,-33,-34,39,39,39,-29,39,-26,-27,-28,-21,39,-51,-9,39,39,-16,-20,-17,-22,39,]),'OR':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[40,40,40,-25,-10,-53,-54,-11,-12,-13,-14,-15,40,40,-18,-55,-56,-57,-33,-34,40,-58,-59,-19,40,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,40,40,-31,-33,-34,40,40,40,-29,40,-26,-27,-28,-21,40,-51,-9,40,40,-16,-20,-17,-22,40,]),'LT':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[42,42,42,-25,-10,-53,-54,-11,-12,-13,-14,-15,42,42,-18,-55,-56,-57,-33,-34,42,-58,-59,-19,42,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,42,42,-31,-33,-34,42,42,42,-29,42,-26,-27,-28,-21,42,-51,-9,42,42,-16,-20,-17,-22,42,]),'GT':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[43,43,43,-25,-10,-53,-54,-11,-12,-13,-14,-15,43,43,-18,-55,-56,-57,-33,-34,43,-58,-59,-19,43,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,66,-47,-48,-49,-50,43,43,-31,-33,-34,43,43,43,-29,43,-26,-27,-28,-21,43,-51,-9,43,43,-16,-20,-17,-22,43,]),'LTE':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[44,44,44,-25,-10,-53,-54,-11,-12,-13,-14,-15,44,44,-18,-55,-56,-57,-33,-34,44,-58,-59,-19,44,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,44,44,-31,-33,-34,44,44,44,-29,44,-26,-27,-28,-21,44,-51,-9,44,44,-16,-20,-17,-22,44,]),'GTE':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[45,45,45,-25,-10,-53,-54,-11,-12,-13,-14,-15,45,45,-18,-55,-56,-57,-33,-34,45,-58,-59,-19,45,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,45,45,-31,-33,-34,45,45,45,-29,45,-26,-27,-28,-21,45,-51,-9,45,45,-16,-20,-17,-22,45,]),'EQUALITY':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[46,46,46,-25,-10,-53,-54,-11,-12,-13,-14,-15,46,46,-18,-55,-56,-57,-33,-34,46,-58,-59,-19,46,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,46,46,-31,-33,-34,46,46,46,-29,46,-26,-27,-28,-21,46,-51,-9,46,46,-16,-20,-17,-22,46,]),'INEQUALITY':([0,5,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,61,62,63,65,66,68,69,70,71,72,73,74,75,],[47,47,47,-25,-10,-53,-54,-11,-12,-13,-14,-15,47,47,-18,-55,-56,-57,-33,-34,47,-58,-59,-19,47,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,47,47,-31,-33,-34,47,47,47,-29,47,-26,-27,-28,-21,47,-51,-9,47,47,-16,-20,-17,-22,47,]),'RBRACE':([2,3,4,5,7,8,9,11,12,13,14,15,16,17,18,20,21,22,23,24,25,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,56,58,60,61,62,63,66,67,68,69,70,71,72,73,74,],[-1,-2,-4,-5,-30,-25,-10,-53,-54,-11,-12,-13,-14,-15,-60,-18,-55,-56,-57,-33,-34,-58,-59,-19,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-60,-30,-29,72,-26,-27,-28,-21,-51,-3,-9,-6,-7,-16,-20,-17,-22,]),'SEMI_COLON':([3,4,5,7,8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,56,60,61,62,63,66,68,69,70,71,72,73,74,],[48,-4,-5,-30,-25,-10,-53,-54,-11,-12,-13,-14,-15,-18,-55,-56,-57,-33,-34,-58,-59,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-30,-29,-26,-27,-28,-21,-51,-9,-6,-7,-16,-20,-17,-22,]),'EQUAL':([6,7,11,12,57,],[53,55,-53,-54,-8,]),'RPAREN':([8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,56,59,60,61,62,63,66,68,71,72,73,74,],[-25,-10,-53,-54,-11,-12,-13,-14,-15,-18,-55,-56,-57,-33,-34,-58,-59,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-30,-29,73,-26,-27,-28,-21,-51,-9,-16,-20,-17,-22,]),'COMMA':([8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,56,60,61,62,63,65,66,68,71,72,73,74,],[-25,-10,-53,-54,-11,-12,-13,-14,-15,-18,-55,-56,-57,-33,-34,-58,-59,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-30,-29,-26,-27,-28,-21,75,-51,-9,-16,-20,-17,-22,]),'RSPAREN':([8,9,11,12,13,14,15,16,17,20,21,22,23,24,25,27,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,54,56,60,61,62,63,64,65,66,68,71,72,73,74,76,],[-25,-10,-53,-54,-11,-12,-13,-14,-15,-18,-55,-56,-57,-33,-34,-58,-59,63,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-30,-29,-26,-27,-28,-21,74,-23,-51,-9,-16,-20,-17,-22,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,18,48,],[1,58,67,]),'empty':([0,18,48,],[2,2,2,]),'statement':([0,18,48,],[3,3,3,]),'assignment':([0,18,48,],[4,4,4,]),'binaryexp':([0,18,19,30,48,49,53,55,75,],[5,5,59,65,5,68,69,70,65,]),'definition':([0,18,48,],[6,6,6,]),'identifier':([0,5,7,18,19,24,25,26,30,48,49,53,54,55,59,65,68,69,70,75,],[7,50,54,7,54,54,54,54,54,7,54,54,54,54,50,50,50,50,50,54,]),'operator':([0,5,7,18,19,24,25,26,30,48,49,53,54,55,59,65,68,69,70,75,],[8,49,8,8,8,8,8,8,8,8,8,8,8,8,49,49,49,49,49,8,]),'primaryexp':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[9,56,9,9,60,61,62,9,9,9,9,56,9,9,]),'number':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'unaryexp':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'nularexp':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'variable':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'string':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'lbrace':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array':([0,7,18,19,24,25,26,30,48,49,53,54,55,75,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'punctuation':([0,5,7,18,19,24,25,26,30,48,49,53,54,55,59,65,68,69,70,75,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'comparisonoperator':([0,5,7,18,19,24,25,26,30,48,49,53,54,55,59,65,68,69,70,75,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'configaccessor':([0,5,7,18,19,24,25,26,30,48,49,53,54,55,59,65,68,69,70,75,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'arrayelement':([30,75,],[64,76,]),'rbrace':([58,],[71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc_fh.py',30),
  ('code -> statement','code',1,'p_code','sqf_yacc_fh.py',31),
  ('code -> statement SEMI_COLON code','code',3,'p_code','sqf_yacc_fh.py',32),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc_fh.py',39),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc_fh.py',40),
  ('assignment -> definition EQUAL binaryexp','assignment',3,'p_assignment','sqf_yacc_fh.py',47),
  ('assignment -> identifier EQUAL binaryexp','assignment',3,'p_assignment','sqf_yacc_fh.py',48),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc_fh.py',62),
  ('binaryexp -> binaryexp operator binaryexp','binaryexp',3,'p_binaryexp','sqf_yacc_fh.py',74),
  ('binaryexp -> primaryexp','binaryexp',1,'p_binaryexp','sqf_yacc_fh.py',75),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',88),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',89),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',90),
  ('primaryexp -> variable','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',91),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',92),
  ('primaryexp -> lbrace code rbrace','primaryexp',3,'p_primaryexp','sqf_yacc_fh.py',93),
  ('primaryexp -> LPAREN binaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc_fh.py',94),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',95),
  ('lbrace -> LBRACE','lbrace',1,'p_lbrace','sqf_yacc_fh.py',105),
  ('rbrace -> RBRACE','rbrace',1,'p_rbrace','sqf_yacc_fh.py',113),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc_fh.py',121),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc_fh.py',122),
  ('arrayelement -> binaryexp','arrayelement',1,'p_arrayelement','sqf_yacc_fh.py',132),
  ('arrayelement -> binaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc_fh.py',133),
  ('nularexp -> operator','nularexp',1,'p_nularexp','sqf_yacc_fh.py',143),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',150),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',151),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',152),
  ('unaryexp -> identifier primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',153),
  ('variable -> identifier','variable',1,'p_variable','sqf_yacc_fh.py',160),
  ('operator -> identifier','operator',1,'p_operator','sqf_yacc_fh.py',167),
  ('operator -> punctuation','operator',1,'p_operator','sqf_yacc_fh.py',168),
  ('punctuation -> PLUS','punctuation',1,'p_punctuation','sqf_yacc_fh.py',175),
  ('punctuation -> MINUS','punctuation',1,'p_punctuation','sqf_yacc_fh.py',176),
  ('punctuation -> TIMES','punctuation',1,'p_punctuation','sqf_yacc_fh.py',177),
  ('punctuation -> DIVIDE','punctuation',1,'p_punctuation','sqf_yacc_fh.py',178),
  ('punctuation -> MOD','punctuation',1,'p_punctuation','sqf_yacc_fh.py',179),
  ('punctuation -> POW','punctuation',1,'p_punctuation','sqf_yacc_fh.py',180),
  ('punctuation -> SELECT','punctuation',1,'p_punctuation','sqf_yacc_fh.py',181),
  ('punctuation -> COLON','punctuation',1,'p_punctuation','sqf_yacc_fh.py',182),
  ('punctuation -> comparisonoperator','punctuation',1,'p_punctuation','sqf_yacc_fh.py',183),
  ('punctuation -> AND','punctuation',1,'p_punctuation','sqf_yacc_fh.py',184),
  ('punctuation -> OR','punctuation',1,'p_punctuation','sqf_yacc_fh.py',185),
  ('punctuation -> configaccessor','punctuation',1,'p_punctuation','sqf_yacc_fh.py',186),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',193),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',194),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',195),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',196),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',197),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',198),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc_fh.py',205),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc_fh.py',206),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc_fh.py',213),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc_fh.py',214),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc_fh.py',233),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc_fh.py',234),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc_fh.py',235),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc_fh.py',242),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc_fh.py',243),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc_fh.py',250),
]
