
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftSELECTleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BOOL COLON COMMA COMMENT_MULTI COMMENT_SINGLE DIVIDE EQUAL GLOBAL_ID GT LBRACE LPAREN LSPAREN LT MINUS MOD NEWLINE NOT NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SELECT SEMI_COLON STRING_DOUBLE STRING_SINGLE TIMES\n    code    : empty\n            | statement\n            | statement SEMI_COLON code\n    \n    statement   : assignment\n                | binaryexp\n    \n    assignment  : definition EQUAL binaryexp\n                | identifier EQUAL binaryexp\n    \n    definition : PRIVATE PRIVATE_ID\n    \n    binaryexp   : binaryexp operator binaryexp  %prec BINARY_OP\n                | primaryexp                    %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | unaryexp\n                | nularexp\n                | variable                  %prec VALUE\n                | string                    %prec VALUE\n                | LBRACE code RBRACE        %prec BRACED_EXP\n                | LPAREN binaryexp RPAREN   %prec BRACED_EXP\n                | array                     %prec VALUE\n    \n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : binaryexp\n                    | binaryexp COMMA arrayelement\n    \n    nularexp : operator %prec NULAR_OP\n    \n    unaryexp    : PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | identifier primaryexp %prec UNARY_OP\n    \n    variable : identifier\n    \n    operator    : identifier\n                | punctuation\n    \n    punctuation : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MOD\n                | POW\n                | SELECT\n                | comparisonoperator    %prec COMPARISON_OP\n                | AND\n                | OR\n                | configaccessor\n    \n    comparisonoperator  : LT\n                        | GT\n                        | LT EQUAL\n                        | GT EQUAL\n                        | EQUAL EQUAL\n                        | NOT EQUAL\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,8,9,10,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,49,50,52,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,],[-56,0,-1,-2,-4,-5,-27,-23,-10,-49,-50,-11,-12,-13,-14,-15,-18,-51,-52,-53,-30,-31,-54,-55,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-56,-45,-27,-26,-24,-25,-19,-43,-47,-44,-46,-3,-9,-6,-45,-7,-16,-17,-20,]),'PRIVATE':([0,19,43,],[11,11,11,]),'PRIVATE_ID':([0,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[12,12,12,-23,-10,53,-49,-50,-11,-12,-13,-14,-15,12,12,-18,-51,-52,-53,-30,-31,-54,-55,12,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,12,12,-28,-30,-31,12,-45,12,12,-26,12,-24,-25,-19,12,-43,-47,-44,-46,-9,12,-45,12,-16,-17,-20,12,]),'GLOBAL_ID':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[13,13,13,-23,-10,-49,-50,-11,-12,-13,-14,-15,13,13,-18,-51,-52,-53,-30,-31,-54,-55,13,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,13,13,-28,-30,-31,13,-45,13,13,-26,13,-24,-25,-19,13,-43,-47,-44,-46,-9,13,-45,13,-16,-17,-20,13,]),'LBRACE':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[19,19,-49,-50,19,19,19,19,19,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,19,19,-28,-30,-31,19,-45,19,19,-43,-47,-44,-46,19,]),'LPAREN':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[20,20,-49,-50,20,20,20,20,20,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,20,20,-28,-30,-31,20,-45,20,20,-43,-47,-44,-46,20,]),'NUMBER_REAL':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[22,22,-49,-50,22,22,22,22,22,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,22,22,-28,-30,-31,22,-45,22,22,-43,-47,-44,-46,22,]),'NUMBER_EXP':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[23,23,-49,-50,23,23,23,23,23,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,23,23,-28,-30,-31,23,-45,23,23,-43,-47,-44,-46,23,]),'NUMBER_HEX':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[24,24,-49,-50,24,24,24,24,24,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,24,24,-28,-30,-31,24,-45,24,24,-43,-47,-44,-46,24,]),'PLUS':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[25,46,25,-23,-10,-49,-50,-11,-12,-13,-14,-15,25,25,-18,-51,-52,-53,-30,-31,-54,-55,25,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,25,25,-28,-30,-31,25,-45,25,25,-26,46,-24,-25,-19,46,-43,-47,-44,-46,46,46,-45,46,-16,-17,-20,25,]),'MINUS':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[26,47,26,-23,-10,-49,-50,-11,-12,-13,-14,-15,26,26,-18,-51,-52,-53,-30,-31,-54,-55,26,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,26,26,-28,-30,-31,26,-45,26,26,-26,47,-24,-25,-19,47,-43,-47,-44,-46,47,47,-45,47,-16,-17,-20,26,]),'STRING_SINGLE':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[27,27,-49,-50,27,27,27,27,27,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,27,27,-28,-30,-31,27,-45,27,27,-43,-47,-44,-46,27,]),'STRING_DOUBLE':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[28,28,-49,-50,28,28,28,28,28,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,28,28,-28,-30,-31,28,-45,28,28,-43,-47,-44,-46,28,]),'LSPAREN':([0,8,12,13,19,20,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,61,62,63,64,73,],[29,29,-49,-50,29,29,29,29,29,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,29,29,-28,-30,-31,29,-45,29,29,-43,-47,-44,-46,29,]),'TIMES':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[31,31,31,-23,-10,-49,-50,-11,-12,-13,-14,-15,31,31,-18,-51,-52,-53,31,31,-54,-55,31,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,31,31,-28,-30,-31,31,-45,31,31,-26,31,-24,-25,-19,31,-43,-47,-44,-46,31,31,-45,31,-16,-17,-20,31,]),'DIVIDE':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[32,32,32,-23,-10,-49,-50,-11,-12,-13,-14,-15,32,32,-18,-51,-52,-53,32,32,-54,-55,32,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,32,32,-28,-30,-31,32,-45,32,32,-26,32,-24,-25,-19,32,-43,-47,-44,-46,32,32,-45,32,-16,-17,-20,32,]),'MOD':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[33,33,33,-23,-10,-49,-50,-11,-12,-13,-14,-15,33,33,-18,-51,-52,-53,33,33,-54,-55,33,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,33,33,-28,-30,-31,33,-45,33,33,-26,33,-24,-25,-19,33,-43,-47,-44,-46,33,33,-45,33,-16,-17,-20,33,]),'POW':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[34,34,34,-23,-10,-49,-50,-11,-12,-13,-14,-15,34,34,-18,-51,-52,-53,34,34,-54,-55,34,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,34,34,-28,-30,-31,34,-45,34,34,-26,34,-24,-25,-19,34,-43,-47,-44,-46,34,34,-45,34,-16,-17,-20,34,]),'SELECT':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[35,35,35,-23,-10,-49,-50,-11,-12,-13,-14,-15,35,35,-18,-51,-52,-53,35,35,-54,-55,35,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,35,35,-28,-30,-31,35,-45,35,35,-26,35,-24,-25,-19,35,-43,-47,-44,-46,35,35,-45,35,-16,-17,-20,35,]),'AND':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[37,37,37,-23,-10,-49,-50,-11,-12,-13,-14,-15,37,37,-18,-51,-52,-53,-30,-31,-54,-55,37,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,37,37,-28,-30,-31,37,-45,37,37,-26,37,-24,-25,-19,37,-43,-47,-44,-46,-9,37,-45,37,-16,-17,-20,37,]),'OR':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[38,38,38,-23,-10,-49,-50,-11,-12,-13,-14,-15,38,38,-18,-51,-52,-53,-30,-31,-54,-55,38,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,38,38,-28,-30,-31,38,-45,38,38,-26,38,-24,-25,-19,38,-43,-47,-44,-46,-9,38,-45,38,-16,-17,-20,38,]),'LT':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[40,40,40,-23,-10,-49,-50,-11,-12,-13,-14,-15,40,40,-18,-51,-52,-53,-30,-31,-54,-55,40,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,40,40,-28,-30,-31,40,-45,40,40,-26,40,-24,-25,-19,40,-43,-47,-44,-46,-9,40,-45,40,-16,-17,-20,40,]),'GT':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[41,41,41,-23,-10,-49,-50,-11,-12,-13,-14,-15,41,41,-18,-51,-52,-53,-30,-31,-54,-55,41,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,62,41,41,-28,-30,-31,41,-45,41,41,-26,41,-24,-25,-19,41,-43,-47,-44,-46,-9,41,-45,41,-16,-17,-20,41,]),'EQUAL':([0,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[7,7,48,49,51,-23,-10,-49,-50,-11,-12,-13,-14,-15,7,7,-18,-51,-52,-53,-30,-31,-54,-55,7,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,61,63,64,7,7,-28,-30,-31,7,-45,7,68,-26,-8,7,-24,-25,-19,7,-43,-47,-44,-46,-9,7,49,7,-16,-17,-20,7,]),'NOT':([0,5,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,52,55,56,57,58,60,61,62,63,64,66,67,68,69,70,71,72,73,],[42,42,42,-23,-10,-49,-50,-11,-12,-13,-14,-15,42,42,-18,-51,-52,-53,-30,-31,-54,-55,42,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,42,42,-28,-30,-31,42,-45,42,42,-26,42,-24,-25,-19,42,-43,-47,-44,-46,-9,42,-45,42,-16,-17,-20,42,]),'RBRACE':([2,3,4,5,8,9,10,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,43,49,50,52,54,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,],[-1,-2,-4,-5,-27,-23,-10,-49,-50,-11,-12,-13,-14,-15,-56,-18,-51,-52,-53,-30,-31,-54,-55,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-56,-45,-27,-26,70,-24,-25,-19,-43,-47,-44,-46,-3,-9,-6,-45,-7,-16,-17,-20,]),'SEMI_COLON':([3,4,5,8,9,10,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,49,50,52,56,57,58,61,62,63,64,66,67,68,69,70,71,72,],[43,-4,-5,-27,-23,-10,-49,-50,-11,-12,-13,-14,-15,-18,-51,-52,-53,-30,-31,-54,-55,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-27,-26,-24,-25,-19,-43,-47,-44,-46,-9,-6,-45,-7,-16,-17,-20,]),'RPAREN':([9,10,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,49,50,52,55,56,57,58,61,62,63,64,66,70,71,72,],[-23,-10,-49,-50,-11,-12,-13,-14,-15,-18,-51,-52,-53,-30,-31,-54,-55,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-27,-26,71,-24,-25,-19,-43,-47,-44,-46,-9,-16,-17,-20,]),'COMMA':([9,10,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,39,40,41,49,50,52,56,57,58,60,61,62,63,64,66,70,71,72,],[-23,-10,-49,-50,-11,-12,-13,-14,-15,-18,-51,-52,-53,-30,-31,-54,-55,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-27,-26,-24,-25,-19,73,-43,-47,-44,-46,-9,-16,-17,-20,]),'RSPAREN':([9,10,12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,49,50,52,56,57,58,59,60,61,62,63,64,66,70,71,72,74,],[-23,-10,-49,-50,-11,-12,-13,-14,-15,-18,-51,-52,-53,-30,-31,-54,-55,58,-29,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-45,-27,-26,-24,-25,-19,72,-21,-43,-47,-44,-46,-9,-16,-17,-20,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,19,43,],[1,54,65,]),'empty':([0,19,43,],[2,2,2,]),'statement':([0,19,43,],[3,3,3,]),'assignment':([0,19,43,],[4,4,4,]),'binaryexp':([0,19,20,29,43,44,48,51,73,],[5,5,55,60,5,66,67,69,60,]),'definition':([0,19,43,],[6,6,6,]),'identifier':([0,5,8,19,20,25,26,29,43,44,48,50,51,55,60,66,67,69,73,],[8,45,50,8,50,50,50,50,8,50,50,50,50,45,45,45,45,45,50,]),'operator':([0,5,8,19,20,25,26,29,43,44,48,50,51,55,60,66,67,69,73,],[9,44,9,9,9,9,9,9,9,9,9,9,9,44,44,44,44,44,9,]),'primaryexp':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[10,52,10,10,56,57,10,10,10,10,52,10,10,]),'number':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'unaryexp':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'nularexp':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'variable':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'string':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'array':([0,8,19,20,25,26,29,43,44,48,50,51,73,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'punctuation':([0,5,8,19,20,25,26,29,43,44,48,50,51,55,60,66,67,69,73,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'comparisonoperator':([0,5,8,19,20,25,26,29,43,44,48,50,51,55,60,66,67,69,73,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'configaccessor':([0,5,8,19,20,25,26,29,43,44,48,50,51,55,60,66,67,69,73,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'arrayelement':([29,73,],[59,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc_fh.py',27),
  ('code -> statement','code',1,'p_code','sqf_yacc_fh.py',28),
  ('code -> statement SEMI_COLON code','code',3,'p_code','sqf_yacc_fh.py',29),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc_fh.py',35),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc_fh.py',36),
  ('assignment -> definition EQUAL binaryexp','assignment',3,'p_assignment','sqf_yacc_fh.py',43),
  ('assignment -> identifier EQUAL binaryexp','assignment',3,'p_assignment','sqf_yacc_fh.py',44),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc_fh.py',59),
  ('binaryexp -> binaryexp operator binaryexp','binaryexp',3,'p_binaryexp','sqf_yacc_fh.py',73),
  ('binaryexp -> primaryexp','binaryexp',1,'p_binaryexp','sqf_yacc_fh.py',74),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',87),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',88),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',89),
  ('primaryexp -> variable','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',90),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',91),
  ('primaryexp -> LBRACE code RBRACE','primaryexp',3,'p_primaryexp','sqf_yacc_fh.py',92),
  ('primaryexp -> LPAREN binaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc_fh.py',93),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',94),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc_fh.py',104),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc_fh.py',105),
  ('arrayelement -> binaryexp','arrayelement',1,'p_arrayelement','sqf_yacc_fh.py',115),
  ('arrayelement -> binaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc_fh.py',116),
  ('nularexp -> operator','nularexp',1,'p_nularexp','sqf_yacc_fh.py',126),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',133),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',134),
  ('unaryexp -> identifier primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',135),
  ('variable -> identifier','variable',1,'p_variable','sqf_yacc_fh.py',142),
  ('operator -> identifier','operator',1,'p_operator','sqf_yacc_fh.py',149),
  ('operator -> punctuation','operator',1,'p_operator','sqf_yacc_fh.py',150),
  ('punctuation -> PLUS','punctuation',1,'p_punctuation','sqf_yacc_fh.py',157),
  ('punctuation -> MINUS','punctuation',1,'p_punctuation','sqf_yacc_fh.py',158),
  ('punctuation -> TIMES','punctuation',1,'p_punctuation','sqf_yacc_fh.py',159),
  ('punctuation -> DIVIDE','punctuation',1,'p_punctuation','sqf_yacc_fh.py',160),
  ('punctuation -> MOD','punctuation',1,'p_punctuation','sqf_yacc_fh.py',161),
  ('punctuation -> POW','punctuation',1,'p_punctuation','sqf_yacc_fh.py',162),
  ('punctuation -> SELECT','punctuation',1,'p_punctuation','sqf_yacc_fh.py',163),
  ('punctuation -> comparisonoperator','punctuation',1,'p_punctuation','sqf_yacc_fh.py',164),
  ('punctuation -> AND','punctuation',1,'p_punctuation','sqf_yacc_fh.py',165),
  ('punctuation -> OR','punctuation',1,'p_punctuation','sqf_yacc_fh.py',166),
  ('punctuation -> configaccessor','punctuation',1,'p_punctuation','sqf_yacc_fh.py',167),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',174),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',175),
  ('comparisonoperator -> LT EQUAL','comparisonoperator',2,'p_comparisonoperator','sqf_yacc_fh.py',176),
  ('comparisonoperator -> GT EQUAL','comparisonoperator',2,'p_comparisonoperator','sqf_yacc_fh.py',177),
  ('comparisonoperator -> EQUAL EQUAL','comparisonoperator',2,'p_comparisonoperator','sqf_yacc_fh.py',178),
  ('comparisonoperator -> NOT EQUAL','comparisonoperator',2,'p_comparisonoperator','sqf_yacc_fh.py',179),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc_fh.py',193),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc_fh.py',194),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc_fh.py',201),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc_fh.py',202),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc_fh.py',214),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc_fh.py',215),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc_fh.py',216),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc_fh.py',223),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc_fh.py',224),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc_fh.py',231),
]
