
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftCOMPARISON_OPCONFIG_ACCESSOR_GTGTleftBINARY_OPCOLONleftELSEleftPLUSMINUSleftTIMESDIVIDEMODCONFIG_ACCESSOR_SLASHleftPOWleftSELECTleftUNARY_OPleftNULAR_OPVARIABLEVALUEBRACED_EXPAND BOOL COLON COMMA COMMENT_MULTI COMMENT_SINGLE DIVIDE DO ELSE EQUAL EQUALITY FOR FOREACH FROM GLOBAL_ID GT GTE IF INEQUALITY LBRACE LPAREN LSPAREN LT LTE MINUS MOD NAMESPACE NEWLINE NOT NUMBER_EXP NUMBER_HEX NUMBER_REAL OR PLUS POW PRIVATE PRIVATE_ID RBRACE RPAREN RSPAREN SELECT SEMI_COLON STEP STRING_DOUBLE STRING_SINGLE SWITCH THEN TIMES TO WHILE WITH\n    code    : empty\n            | statement\n            | statement terminator code\n    \n    statement   : controlstructure\n                | assignment\n                | binaryexp\n                | binaryexp operator binaryexp\n    \n    terminator  : SEMI_COLON\n                | COMMA\n    \n    controlstructure    : ifstatement\n                        | whileloop\n                        | forloop\n    \n    helpertype  : iftype\n                | withtype\n                | whiletype\n                | fortype\n    \n    iftype : IF LPAREN binaryexp RPAREN\n    \n    ifstatement : iftype THEN bracedexp\n                | iftype THEN bracedexp ELSE bracedexp\n    \n    withtype : WITH NAMESPACE\n    \n    whiletype   : WHILE LPAREN binaryexp RPAREN\n                | WHILE bracedexp\n    \n    whileloop : whiletype DO bracedexp\n    \n    fortype : FOR new_scope string FROM primaryexp TO primaryexp\n            | FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp\n            | FOR new_scope LSPAREN bracedexp_noscope COMMA bracedexp_noscope COMMA bracedexp_noscope RSPAREN\n    \n    forloop : fortype DO bracedexp_noscope\n    \n     bracedexp_noscope : LBRACE code RBRACE\n    \n    assignment  : definition EQUAL binaryexp\n                | variable EQUAL binaryexp\n    \n    definition : PRIVATE PRIVATE_ID\n    \n    identifier  : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID  %prec VARIABLE\n    \n    variable    : PRIVATE_ID %prec VARIABLE\n                | GLOBAL_ID %prec VARIABLE\n    \n    binaryexp   : binaryexp operator binaryexp  %prec BINARY_OP\n                | primaryexp                    %prec BINARY_OP\n    \n    primaryexp  : number                    %prec VALUE\n                | identifier                %prec VALUE\n                | unaryexp\n                | nularexp\n                | string                    %prec VALUE\n                | bracedexp                 %prec BRACED_EXP\n                | LPAREN binaryexp RPAREN   %prec BRACED_EXP\n                | array                     %prec VALUE\n                | helpertype                %prec VALUE\n    \n    bracedexp : LBRACE new_scope code RBRACE\n    new_scope :\n    array   : LSPAREN RSPAREN\n            | LSPAREN arrayelement RSPAREN\n    \n    arrayelement    : binaryexp\n                    | binaryexp COMMA arrayelement\n    \n    nularexp : operator %prec NULAR_OP\n    \n    unaryexp    : PLUS primaryexp       %prec UNARY_OP\n                | MINUS primaryexp      %prec UNARY_OP\n                | NOT primaryexp        %prec UNARY_OP\n                | identifier primaryexp %prec UNARY_OP\n                | binaryexp identifier  %prec UNARY_OP\n    \n    operator    : identifier\n                | punctuation\n    \n    punctuation : PLUS\n                | MINUS\n                | TIMES\n                | DIVIDE\n                | MOD\n                | POW\n                | SELECT\n                | COLON\n                | comparisonoperator    %prec COMPARISON_OP\n                | AND\n                | OR\n                | configaccessor\n    \n    comparisonoperator  : LT\n                        | GT\n                        | LTE\n                        | GTE\n                        | EQUALITY\n                        | INEQUALITY\n    \n    configaccessor  : GT GT     %prec CONFIG_ACCESSOR_GTGT\n                    | DIVIDE    %prec CONFIG_ACCESSOR_SLASH\n    \n    number  : NUMBER_REAL\n            | NUMBER_EXP\n            | NUMBER_HEX\n    \n    string  : STRING_SINGLE\n            | STRING_DOUBLE\n    \n    empty :\n    '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,76,78,79,80,84,86,89,90,91,93,94,95,96,97,98,99,100,101,104,109,114,115,116,120,121,122,127,131,132,],[-86,0,-1,-2,-4,-5,-6,-53,-10,-11,-12,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-86,-8,-9,-58,-32,-33,-57,-13,-15,-16,-22,-49,-54,-55,-56,-20,-79,-3,-7,-29,-30,-18,-23,-27,-44,-50,-36,-17,-21,-47,-19,-28,-24,-25,-26,]),'PRIVATE':([0,41,61,62,63,92,102,],[18,-48,18,-8,-9,18,18,]),'PRIVATE_ID':([0,6,7,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[19,66,-53,-37,-13,-43,-15,-16,75,-32,-33,-38,-39,-40,-41,-42,66,-45,-46,66,-81,-82,-83,-61,-62,66,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,19,-8,-9,66,-58,-32,-33,-61,-62,66,66,-37,66,-13,-15,-16,66,66,66,-22,-49,66,-37,-37,-37,19,-20,-79,-36,66,66,19,66,-44,66,66,-50,66,-36,-17,-21,66,-47,-37,66,-24,66,-25,-26,]),'GLOBAL_ID':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[20,67,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,67,-45,-46,67,-81,-82,-83,-61,-62,67,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,20,-8,-9,67,-58,-32,-33,-61,-62,67,67,-37,67,-13,-15,-16,67,67,67,-22,-49,67,-37,-37,-37,20,-20,-79,-36,67,67,20,67,-44,67,67,-50,67,-36,-17,-21,67,-47,-37,67,-24,67,-25,-26,]),'LPAREN':([0,19,20,22,26,29,30,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[26,-32,-33,26,26,82,83,26,26,26,26,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,26,-8,-9,26,-59,-32,-33,-61,-62,26,26,26,26,26,-79,26,26,26,26,26,26,]),'IF':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[29,-32,-33,29,29,29,29,29,29,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,29,-8,-9,29,-59,-32,-33,-61,-62,29,29,29,29,29,-79,29,29,29,29,29,29,]),'WHILE':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[30,-32,-33,30,30,30,30,30,30,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,30,-8,-9,30,-59,-32,-33,-61,-62,30,30,30,30,30,-79,30,30,30,30,30,30,]),'FOR':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[31,-32,-33,31,31,31,31,31,31,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,31,-8,-9,31,-59,-32,-33,-61,-62,31,31,31,31,31,-79,31,31,31,31,31,31,]),'NUMBER_REAL':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[33,-32,-33,33,33,33,33,33,33,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,33,-8,-9,33,-59,-32,-33,-61,-62,33,33,33,33,33,-79,33,33,33,33,33,33,]),'NUMBER_EXP':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[34,-32,-33,34,34,34,34,34,34,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,34,-8,-9,34,-59,-32,-33,-61,-62,34,34,34,34,34,-79,34,34,34,34,34,34,]),'NUMBER_HEX':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[35,-32,-33,35,35,35,35,35,35,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,35,-8,-9,35,-59,-32,-33,-61,-62,35,35,35,35,35,-79,35,35,35,35,35,35,]),'PLUS':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[36,68,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,36,-45,-46,36,-81,-82,-83,-61,-62,36,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,36,-8,-9,36,-58,-32,-33,-61,-62,36,36,-37,68,-13,-15,-16,68,36,36,-22,-49,68,-37,-37,-37,36,-20,-79,68,68,68,36,36,-44,68,68,-50,36,68,-17,-21,36,-47,-37,36,-24,36,-25,-26,]),'MINUS':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[37,69,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,37,-45,-46,37,-81,-82,-83,-61,-62,37,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,37,-8,-9,37,-58,-32,-33,-61,-62,37,37,-37,69,-13,-15,-16,69,37,37,-22,-49,69,-37,-37,-37,37,-20,-79,69,69,69,37,37,-44,69,69,-50,37,69,-17,-21,37,-47,-37,37,-24,37,-25,-26,]),'NOT':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[38,-32,-33,38,38,38,38,38,38,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,38,-8,-9,38,-59,-32,-33,-61,-62,38,38,38,38,38,-79,38,38,38,38,38,38,]),'STRING_SINGLE':([0,19,20,22,26,31,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,85,92,94,102,103,110,117,125,129,],[39,-32,-33,39,39,-48,39,39,39,39,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,39,-8,-9,39,-59,-32,-33,-61,-62,39,39,39,39,39,39,-79,39,39,39,39,39,39,]),'STRING_DOUBLE':([0,19,20,22,26,31,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,85,92,94,102,103,110,117,125,129,],[40,-32,-33,40,40,-48,40,40,40,40,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,40,-8,-9,40,-59,-32,-33,-61,-62,40,40,40,40,40,40,-79,40,40,40,40,40,40,]),'LBRACE':([0,19,20,22,26,30,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,82,83,92,94,102,103,108,110,112,117,124,125,128,129,],[41,-32,-33,41,41,41,41,41,41,41,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,41,-8,-9,41,-59,-32,-33,-61,-62,41,41,41,41,102,41,41,41,-79,41,41,102,41,41,41,102,41,102,41,]),'LSPAREN':([0,19,20,22,26,31,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,85,92,94,102,103,110,117,125,129,],[32,-32,-33,32,32,-48,32,32,32,32,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,32,-8,-9,32,-59,-32,-33,-61,-62,32,32,32,32,108,32,-79,32,32,32,32,32,32,]),'WITH':([0,19,20,22,26,32,36,37,38,41,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,82,83,92,94,102,103,110,117,125,129,],[44,-32,-33,44,44,44,44,44,44,-48,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,44,-8,-9,44,-59,-32,-33,-61,-62,44,44,44,44,44,-79,44,44,44,44,44,44,]),'TIMES':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[45,45,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,45,-45,-46,45,-81,-82,-83,45,45,45,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,45,-8,-9,45,-58,-32,-33,-61,-62,45,45,-37,45,-13,-15,-16,45,45,45,-22,-49,45,-37,-37,-37,45,-20,-79,45,45,45,45,45,-44,45,45,-50,45,45,-17,-21,45,-47,-37,45,-24,45,-25,-26,]),'DIVIDE':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[46,46,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,46,-45,-46,46,-81,-82,-83,46,46,46,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,46,-8,-9,46,-58,-32,-33,-61,-62,46,46,-37,46,-13,-15,-16,46,46,46,-22,-49,46,-37,-37,-37,46,-20,-79,46,46,46,46,46,-44,46,46,-50,46,46,-17,-21,46,-47,-37,46,-24,46,-25,-26,]),'MOD':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[47,47,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,47,-45,-46,47,-81,-82,-83,47,47,47,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,47,-8,-9,47,-58,-32,-33,-61,-62,47,47,-37,47,-13,-15,-16,47,47,47,-22,-49,47,-37,-37,-37,47,-20,-79,47,47,47,47,47,-44,47,47,-50,47,47,-17,-21,47,-47,-37,47,-24,47,-25,-26,]),'POW':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[48,48,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,48,-45,-46,48,-81,-82,-83,48,48,48,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,48,-8,-9,48,-58,-32,-33,-61,-62,48,48,-37,48,-13,-15,-16,48,48,48,-22,-49,48,-37,-37,-37,48,-20,-79,48,48,48,48,48,-44,48,48,-50,48,48,-17,-21,48,-47,-37,48,-24,48,-25,-26,]),'SELECT':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[49,49,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,49,-45,-46,49,-81,-82,-83,49,49,49,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,49,-8,-9,49,-58,-32,-33,-61,-62,49,49,-37,49,-13,-15,-16,49,49,49,-22,-49,49,-37,-37,-37,49,-20,-79,49,49,49,49,49,-44,49,49,-50,49,49,-17,-21,49,-47,-37,49,-24,49,-25,-26,]),'COLON':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[50,50,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,50,-45,-46,50,-81,-82,-83,-61,-62,50,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,50,-8,-9,50,-58,-32,-33,-61,-62,50,50,-37,50,-13,-15,-16,50,50,50,-22,-49,50,-37,-37,-37,50,-20,-79,-36,50,50,50,50,-44,50,50,-50,50,-36,-17,-21,50,-47,-37,50,-24,50,-25,-26,]),'AND':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[52,52,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,52,-45,-46,52,-81,-82,-83,-61,-62,52,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,52,-8,-9,52,-58,-32,-33,-61,-62,52,52,-37,52,-13,-15,-16,52,52,52,-22,-49,52,-37,-37,-37,52,-20,-79,-36,52,52,52,52,-44,52,52,-50,52,-36,-17,-21,52,-47,-37,52,-24,52,-25,-26,]),'OR':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[53,53,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,53,-45,-46,53,-81,-82,-83,-61,-62,53,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,53,-8,-9,53,-58,-32,-33,-61,-62,53,53,-37,53,-13,-15,-16,53,53,53,-22,-49,53,-37,-37,-37,53,-20,-79,-36,53,53,53,53,-44,53,53,-50,53,-36,-17,-21,53,-47,-37,53,-24,53,-25,-26,]),'LT':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[55,55,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,55,-45,-46,55,-81,-82,-83,-61,-62,55,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,55,-8,-9,55,-58,-32,-33,-61,-62,55,55,-37,55,-13,-15,-16,55,55,55,-22,-49,55,-37,-37,-37,55,-20,-79,-36,55,55,55,55,-44,55,55,-50,55,-36,-17,-21,55,-47,-37,55,-24,55,-25,-26,]),'GT':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[56,56,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,56,-45,-46,56,-81,-82,-83,-61,-62,56,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,94,-75,-76,-77,-78,56,-8,-9,56,-58,-32,-33,-61,-62,56,56,-37,56,-13,-15,-16,56,56,56,-22,-49,56,-37,-37,-37,56,-20,-79,-36,56,56,56,56,-44,56,56,-50,56,-36,-17,-21,56,-47,-37,56,-24,56,-25,-26,]),'LTE':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[57,57,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,57,-45,-46,57,-81,-82,-83,-61,-62,57,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,57,-8,-9,57,-58,-32,-33,-61,-62,57,57,-37,57,-13,-15,-16,57,57,57,-22,-49,57,-37,-37,-37,57,-20,-79,-36,57,57,57,57,-44,57,57,-50,57,-36,-17,-21,57,-47,-37,57,-24,57,-25,-26,]),'GTE':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[58,58,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,58,-45,-46,58,-81,-82,-83,-61,-62,58,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,58,-8,-9,58,-58,-32,-33,-61,-62,58,58,-37,58,-13,-15,-16,58,58,58,-22,-49,58,-37,-37,-37,58,-20,-79,-36,58,58,58,58,-44,58,58,-50,58,-36,-17,-21,58,-47,-37,58,-24,58,-25,-26,]),'EQUALITY':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[59,59,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,59,-45,-46,59,-81,-82,-83,-61,-62,59,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,59,-8,-9,59,-58,-32,-33,-61,-62,59,59,-37,59,-13,-15,-16,59,59,59,-22,-49,59,-37,-37,-37,59,-20,-79,-36,59,59,59,59,-44,59,59,-50,59,-36,-17,-21,59,-47,-37,59,-24,59,-25,-26,]),'INEQUALITY':([0,6,7,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,76,77,78,79,80,81,82,83,84,86,88,89,90,91,92,93,94,96,97,98,102,103,104,105,106,109,110,114,115,116,117,120,123,125,127,129,131,132,],[60,60,-53,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,60,-45,-46,60,-81,-82,-83,-61,-62,60,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,60,-8,-9,60,-58,-32,-33,-61,-62,60,60,-37,60,-13,-15,-16,60,60,60,-22,-49,60,-37,-37,-37,60,-20,-79,-36,60,60,60,60,-44,60,60,-50,60,-36,-17,-21,60,-47,-37,60,-24,60,-25,-26,]),'RBRACE':([2,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,33,34,35,36,37,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,76,78,79,80,84,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,109,111,113,114,115,116,120,121,122,127,131,132,],[-1,-2,-4,-5,-6,-53,-10,-11,-12,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-48,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-86,-8,-9,-58,-32,-33,-57,-13,-15,-16,-22,-49,-54,-55,-56,-86,-20,-79,-3,-7,-29,-30,-18,-23,-27,-86,-44,-50,120,122,-36,-17,-21,-47,-19,-28,-24,-25,-26,]),'SEMI_COLON':([3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,84,86,89,90,91,93,94,96,97,98,99,100,101,104,109,114,115,116,120,121,122,127,131,132,],[62,-4,-5,-6,-53,-10,-11,-12,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,-22,-49,-54,-55,-56,-20,-79,-7,-29,-30,-18,-23,-27,-44,-50,-36,-17,-21,-47,-19,-28,-24,-25,-26,]),'COMMA':([3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,84,86,88,89,90,91,93,94,96,97,98,99,100,101,104,109,114,115,116,118,120,121,122,126,127,131,132,],[63,-4,-5,-6,-53,-10,-11,-12,-37,-13,-43,-15,-16,-32,-33,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,-22,-49,110,-54,-55,-56,-20,-79,-7,-29,-30,-18,-23,-27,-44,-50,-36,-17,-21,124,-47,-19,-28,128,-24,-25,-26,]),'RPAREN':([7,13,15,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,81,84,86,89,90,91,93,94,104,105,106,109,114,115,116,120,127,131,132,],[-53,-37,-43,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,104,-22,-49,-54,-55,-56,-20,-79,-44,115,116,-50,-36,-17,-21,-47,-24,-25,-26,]),'RSPAREN':([7,13,15,21,22,23,24,25,27,28,32,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,84,86,87,88,89,90,91,93,94,104,109,114,115,116,119,120,122,127,130,131,132,],[-53,-37,-43,-38,-39,-40,-41,-42,-45,-46,86,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,-22,-49,109,-51,-54,-55,-56,-20,-79,-44,-50,-36,-17,-21,-52,-47,-28,-24,132,-25,-26,]),'TO':([7,15,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,84,86,89,90,91,93,94,104,109,115,116,120,123,127,131,132,],[-53,-43,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,-22,-49,-54,-55,-56,-20,-79,-44,-50,-17,-21,-47,125,-24,-25,-26,]),'STEP':([7,15,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,84,86,89,90,91,93,94,104,109,115,116,120,127,131,132,],[-53,-43,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,-22,-49,-54,-55,-56,-20,-79,-44,-50,-17,-21,-47,129,-25,-26,]),'DO':([7,15,16,17,21,22,23,24,25,27,28,33,34,35,36,37,39,40,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,65,66,67,76,78,79,80,84,86,89,90,91,93,94,104,109,115,116,120,127,131,132,],[-53,-43,73,74,-38,-39,-40,-41,-42,-45,-46,-81,-82,-83,-61,-62,-84,-85,-14,-60,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-58,-32,-33,-57,-13,-15,-16,-22,-49,-54,-55,-56,-20,-79,-44,-50,-17,-21,-47,-24,-25,-26,]),'EQUAL':([11,12,19,20,75,],[70,71,-34,-35,-31,]),'THEN':([14,115,],[72,-17,]),'FROM':([39,40,107,],[-84,-85,117,]),'NAMESPACE':([44,],[93,]),'ELSE':([99,120,],[112,-47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code':([0,61,92,102,],[1,95,111,113,]),'empty':([0,61,92,102,],[2,2,2,2,]),'statement':([0,61,92,102,],[3,3,3,3,]),'controlstructure':([0,61,92,102,],[4,4,4,4,]),'assignment':([0,61,92,102,],[5,5,5,5,]),'binaryexp':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[6,77,81,88,77,77,77,6,96,97,98,105,106,6,6,114,88,77,77,77,]),'operator':([0,6,22,26,32,36,37,38,61,64,70,71,77,81,82,83,88,92,96,97,98,102,103,105,106,110,114,117,125,129,],[7,64,7,7,7,7,7,7,7,7,7,7,103,103,7,7,103,7,103,103,103,7,7,103,103,7,103,7,7,7,]),'ifstatement':([0,61,92,102,],[8,8,8,8,]),'whileloop':([0,61,92,102,],[9,9,9,9,]),'forloop':([0,61,92,102,],[10,10,10,10,]),'definition':([0,61,92,102,],[11,11,11,11,]),'variable':([0,61,92,102,],[12,12,12,12,]),'primaryexp':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[13,76,13,13,89,90,91,13,13,13,13,13,13,13,13,13,13,123,127,131,]),'iftype':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[14,78,78,78,78,78,78,14,78,78,78,78,78,14,14,78,78,78,78,78,]),'bracedexp':([0,22,26,30,32,36,37,38,61,64,70,71,72,73,82,83,92,102,103,110,112,117,125,129,],[15,15,15,84,15,15,15,15,15,15,15,15,99,100,15,15,15,15,15,15,121,15,15,15,]),'whiletype':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[16,79,79,79,79,79,79,16,79,79,79,79,79,16,16,79,79,79,79,79,]),'fortype':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[17,80,80,80,80,80,80,17,80,80,80,80,80,17,17,80,80,80,80,80,]),'number':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'identifier':([0,6,22,26,32,36,37,38,61,64,70,71,77,81,82,83,88,92,96,97,98,102,103,105,106,110,114,117,125,129,],[22,65,22,22,22,22,22,22,22,22,22,22,65,65,22,22,65,22,65,65,65,22,22,65,65,22,65,22,22,22,]),'unaryexp':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'nularexp':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'string':([0,22,26,32,36,37,38,61,64,70,71,82,83,85,92,102,103,110,117,125,129,],[25,25,25,25,25,25,25,25,25,25,25,25,25,107,25,25,25,25,25,25,25,]),'array':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'helpertype':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'withtype':([0,22,26,32,36,37,38,61,64,70,71,82,83,92,102,103,110,117,125,129,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'punctuation':([0,6,22,26,32,36,37,38,61,64,70,71,77,81,82,83,88,92,96,97,98,102,103,105,106,110,114,117,125,129,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'comparisonoperator':([0,6,22,26,32,36,37,38,61,64,70,71,77,81,82,83,88,92,96,97,98,102,103,105,106,110,114,117,125,129,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'configaccessor':([0,6,22,26,32,36,37,38,61,64,70,71,77,81,82,83,88,92,96,97,98,102,103,105,106,110,114,117,125,129,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'terminator':([3,],[61,]),'new_scope':([31,41,],[85,92,]),'arrayelement':([32,110,],[87,119,]),'bracedexp_noscope':([74,108,124,128,],[101,118,126,130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code","S'",1,None,None,None),
  ('code -> empty','code',1,'p_code','sqf_yacc_fh.py',34),
  ('code -> statement','code',1,'p_code','sqf_yacc_fh.py',35),
  ('code -> statement terminator code','code',3,'p_code','sqf_yacc_fh.py',36),
  ('statement -> controlstructure','statement',1,'p_statement','sqf_yacc_fh.py',45),
  ('statement -> assignment','statement',1,'p_statement','sqf_yacc_fh.py',46),
  ('statement -> binaryexp','statement',1,'p_statement','sqf_yacc_fh.py',47),
  ('statement -> binaryexp operator binaryexp','statement',3,'p_statement','sqf_yacc_fh.py',48),
  ('terminator -> SEMI_COLON','terminator',1,'p_terminator','sqf_yacc_fh.py',57),
  ('terminator -> COMMA','terminator',1,'p_terminator','sqf_yacc_fh.py',58),
  ('controlstructure -> ifstatement','controlstructure',1,'p_controlstructure','sqf_yacc_fh.py',67),
  ('controlstructure -> whileloop','controlstructure',1,'p_controlstructure','sqf_yacc_fh.py',68),
  ('controlstructure -> forloop','controlstructure',1,'p_controlstructure','sqf_yacc_fh.py',69),
  ('helpertype -> iftype','helpertype',1,'p_helpertype','sqf_yacc_fh.py',77),
  ('helpertype -> withtype','helpertype',1,'p_helpertype','sqf_yacc_fh.py',78),
  ('helpertype -> whiletype','helpertype',1,'p_helpertype','sqf_yacc_fh.py',79),
  ('helpertype -> fortype','helpertype',1,'p_helpertype','sqf_yacc_fh.py',80),
  ('iftype -> IF LPAREN binaryexp RPAREN','iftype',4,'p_iftype','sqf_yacc_fh.py',88),
  ('ifstatement -> iftype THEN bracedexp','ifstatement',3,'p_ifstatement','sqf_yacc_fh.py',96),
  ('ifstatement -> iftype THEN bracedexp ELSE bracedexp','ifstatement',5,'p_ifstatement','sqf_yacc_fh.py',97),
  ('withtype -> WITH NAMESPACE','withtype',2,'p_withtype','sqf_yacc_fh.py',105),
  ('whiletype -> WHILE LPAREN binaryexp RPAREN','whiletype',4,'p_whiletype','sqf_yacc_fh.py',113),
  ('whiletype -> WHILE bracedexp','whiletype',2,'p_whiletype','sqf_yacc_fh.py',114),
  ('whileloop -> whiletype DO bracedexp','whileloop',3,'p_whileloop','sqf_yacc_fh.py',122),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp','fortype',7,'p_fortype','sqf_yacc_fh.py',130),
  ('fortype -> FOR new_scope string FROM primaryexp TO primaryexp STEP primaryexp','fortype',9,'p_fortype','sqf_yacc_fh.py',131),
  ('fortype -> FOR new_scope LSPAREN bracedexp_noscope COMMA bracedexp_noscope COMMA bracedexp_noscope RSPAREN','fortype',9,'p_fortype','sqf_yacc_fh.py',132),
  ('forloop -> fortype DO bracedexp_noscope','forloop',3,'p_forloop','sqf_yacc_fh.py',142),
  ('bracedexp_noscope -> LBRACE code RBRACE','bracedexp_noscope',3,'p_bracedexp_noscope','sqf_yacc_fh.py',150),
  ('assignment -> definition EQUAL binaryexp','assignment',3,'p_assignment','sqf_yacc_fh.py',158),
  ('assignment -> variable EQUAL binaryexp','assignment',3,'p_assignment','sqf_yacc_fh.py',159),
  ('definition -> PRIVATE PRIVATE_ID','definition',2,'p_definition','sqf_yacc_fh.py',173),
  ('identifier -> PRIVATE_ID','identifier',1,'p_identifier','sqf_yacc_fh.py',190),
  ('identifier -> GLOBAL_ID','identifier',1,'p_identifier','sqf_yacc_fh.py',191),
  ('variable -> PRIVATE_ID','variable',1,'p_variable','sqf_yacc_fh.py',212),
  ('variable -> GLOBAL_ID','variable',1,'p_variable','sqf_yacc_fh.py',213),
  ('binaryexp -> binaryexp operator binaryexp','binaryexp',3,'p_binaryexp','sqf_yacc_fh.py',222),
  ('binaryexp -> primaryexp','binaryexp',1,'p_binaryexp','sqf_yacc_fh.py',223),
  ('primaryexp -> number','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',243),
  ('primaryexp -> identifier','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',244),
  ('primaryexp -> unaryexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',245),
  ('primaryexp -> nularexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',246),
  ('primaryexp -> string','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',247),
  ('primaryexp -> bracedexp','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',248),
  ('primaryexp -> LPAREN binaryexp RPAREN','primaryexp',3,'p_primaryexp','sqf_yacc_fh.py',249),
  ('primaryexp -> array','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',250),
  ('primaryexp -> helpertype','primaryexp',1,'p_primaryexp','sqf_yacc_fh.py',251),
  ('bracedexp -> LBRACE new_scope code RBRACE','bracedexp',4,'p_bracedexp','sqf_yacc_fh.py',263),
  ('new_scope -> <empty>','new_scope',0,'p_new_scope','sqf_yacc_fh.py',272),
  ('array -> LSPAREN RSPAREN','array',2,'p_array','sqf_yacc_fh.py',278),
  ('array -> LSPAREN arrayelement RSPAREN','array',3,'p_array','sqf_yacc_fh.py',279),
  ('arrayelement -> binaryexp','arrayelement',1,'p_arrayelement','sqf_yacc_fh.py',291),
  ('arrayelement -> binaryexp COMMA arrayelement','arrayelement',3,'p_arrayelement','sqf_yacc_fh.py',292),
  ('nularexp -> operator','nularexp',1,'p_nularexp','sqf_yacc_fh.py',304),
  ('unaryexp -> PLUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',313),
  ('unaryexp -> MINUS primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',314),
  ('unaryexp -> NOT primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',315),
  ('unaryexp -> identifier primaryexp','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',316),
  ('unaryexp -> binaryexp identifier','unaryexp',2,'p_unaryexp','sqf_yacc_fh.py',317),
  ('operator -> identifier','operator',1,'p_operator','sqf_yacc_fh.py',325),
  ('operator -> punctuation','operator',1,'p_operator','sqf_yacc_fh.py',326),
  ('punctuation -> PLUS','punctuation',1,'p_punctuation','sqf_yacc_fh.py',335),
  ('punctuation -> MINUS','punctuation',1,'p_punctuation','sqf_yacc_fh.py',336),
  ('punctuation -> TIMES','punctuation',1,'p_punctuation','sqf_yacc_fh.py',337),
  ('punctuation -> DIVIDE','punctuation',1,'p_punctuation','sqf_yacc_fh.py',338),
  ('punctuation -> MOD','punctuation',1,'p_punctuation','sqf_yacc_fh.py',339),
  ('punctuation -> POW','punctuation',1,'p_punctuation','sqf_yacc_fh.py',340),
  ('punctuation -> SELECT','punctuation',1,'p_punctuation','sqf_yacc_fh.py',341),
  ('punctuation -> COLON','punctuation',1,'p_punctuation','sqf_yacc_fh.py',342),
  ('punctuation -> comparisonoperator','punctuation',1,'p_punctuation','sqf_yacc_fh.py',343),
  ('punctuation -> AND','punctuation',1,'p_punctuation','sqf_yacc_fh.py',344),
  ('punctuation -> OR','punctuation',1,'p_punctuation','sqf_yacc_fh.py',345),
  ('punctuation -> configaccessor','punctuation',1,'p_punctuation','sqf_yacc_fh.py',346),
  ('comparisonoperator -> LT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',355),
  ('comparisonoperator -> GT','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',356),
  ('comparisonoperator -> LTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',357),
  ('comparisonoperator -> GTE','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',358),
  ('comparisonoperator -> EQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',359),
  ('comparisonoperator -> INEQUALITY','comparisonoperator',1,'p_comparisonoperator','sqf_yacc_fh.py',360),
  ('configaccessor -> GT GT','configaccessor',2,'p_configaccessor','sqf_yacc_fh.py',369),
  ('configaccessor -> DIVIDE','configaccessor',1,'p_configaccessor','sqf_yacc_fh.py',370),
  ('number -> NUMBER_REAL','number',1,'p_number','sqf_yacc_fh.py',379),
  ('number -> NUMBER_EXP','number',1,'p_number','sqf_yacc_fh.py',380),
  ('number -> NUMBER_HEX','number',1,'p_number','sqf_yacc_fh.py',381),
  ('string -> STRING_SINGLE','string',1,'p_string','sqf_yacc_fh.py',390),
  ('string -> STRING_DOUBLE','string',1,'p_string','sqf_yacc_fh.py',391),
  ('empty -> <empty>','empty',0,'p_empty','sqf_yacc_fh.py',400),
]
